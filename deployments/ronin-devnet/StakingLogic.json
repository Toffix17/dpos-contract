{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADDITION_GAS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "PERIOD_DURATION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "applyValidatorCandidate",
      "inputs": [
        {
          "name": "_candidateAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_treasuryAddr",
          "type": "address",
          "internalType": "address payable"
        },
        {
          "name": "_commissionRate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "bulkUndelegate",
      "inputs": [
        {
          "name": "_consensusAddrs",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_amounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [
        {
          "name": "_consensusAddrList",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cooldownSecsToUndelegate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegate",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "delegateRewards",
      "inputs": [
        {
          "name": "_consensusAddrList",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_consensusAddrDst",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execDeductStakingAmount",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "_actualDeductingAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execDeprecatePools",
      "inputs": [
        {
          "name": "_pools",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_newPeriod",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execRecordRewards",
      "inputs": [
        {
          "name": "_consensusAddrs",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_rewards",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "_period",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getCommissionRateRange",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getContract",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        }
      ],
      "outputs": [
        {
          "name": "contract_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManySelfStakings",
      "inputs": [
        {
          "name": "_pools",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "_selfStakings",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManyStakingAmounts",
      "inputs": [
        {
          "name": "_poolAddrs",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_userList",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "_stakingAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManyStakingTotals",
      "inputs": [
        {
          "name": "_poolList",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "_stakingAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolAddressOf",
      "inputs": [
        {
          "name": "_poolAdminAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolDetail",
      "inputs": [
        {
          "name": "_poolAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "_admin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_stakingAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_stakingTotal",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReward",
      "inputs": [
        {
          "name": "_poolAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRewards",
      "inputs": [
        {
          "name": "_user",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_poolAddrList",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "_rewards",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingAmount",
      "inputs": [
        {
          "name": "_poolAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingTotal",
      "inputs": [
        {
          "name": "_poolAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "__validatorContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "__minValidatorStakingAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "__maxCommissionRate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "__cooldownSecsToUndelegate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "__waitingSecsToRevoke",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initializeV2",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAdminOfActivePool",
      "inputs": [
        {
          "name": "_poolAdminAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minValidatorStakingAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redelegate",
      "inputs": [
        {
          "name": "_consensusAddrSrc",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_consensusAddrDst",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestEmergencyExit",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestRenounce",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestUpdateCommissionRate",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_effectiveDaysOnwards",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_commissionRate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setCommissionRateRange",
      "inputs": [
        {
          "name": "_minRate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_maxRate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setContract",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        },
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setCooldownSecsToUndelegate",
      "inputs": [
        {
          "name": "_cooldownSecs",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinValidatorStakingAmount",
      "inputs": [
        {
          "name": "_threshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setWaitingSecsToRevoke",
      "inputs": [
        {
          "name": "_secs",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "tmp_re_applyValidatorCandidate",
      "inputs": [
        {
          "name": "_candidateAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_treasuryAddr",
          "type": "address",
          "internalType": "address payable"
        },
        {
          "name": "_commissionRate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "undelegate",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unstake",
      "inputs": [
        {
          "name": "_consensusAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "waitingSecsToRevoke",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "CommissionRateRangeUpdated",
      "inputs": [
        {
          "name": "minRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "maxRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ContractUpdated",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum ContractType"
        },
        {
          "name": "addr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CooldownSecsToUndelegateUpdated",
      "inputs": [
        {
          "name": "minSecs",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Delegated",
      "inputs": [
        {
          "name": "delegator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "consensuAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MinValidatorStakingAmountUpdated",
      "inputs": [
        {
          "name": "threshold",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolApproved",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolSharesUpdated",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsDeprecated",
      "inputs": [
        {
          "name": "validator",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsUpdateConflicted",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddrs",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsUpdateFailed",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddrs",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "rewards",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsUpdated",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddrs",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "aRps",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "shares",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardClaimed",
      "inputs": [
        {
          "name": "poolAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Staked",
      "inputs": [
        {
          "name": "consensuAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingAmountDeductFailed",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "contractBalance",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingAmountTransferFailed",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "contractBalance",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Undelegated",
      "inputs": [
        {
          "name": "delegator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "consensuAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unstaked",
      "inputs": [
        {
          "name": "consensuAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UserRewardUpdated",
      "inputs": [
        {
          "name": "poolAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "debited",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WaitingSecsToRevokeUpdated",
      "inputs": [
        {
          "name": "secs",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ErrAdminOfAnyActivePoolForbidden",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrCannotInitTransferRON",
      "inputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extraInfo",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrCannotTransferRON",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrContractTypeNotFound",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrDuplicated",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInactivePool",
      "inputs": [
        {
          "name": "poolAddr",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInsufficientBalance",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "currentBalance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sendAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInsufficientDelegatingAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInsufficientStakingAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidArrays",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidCommissionRate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidPoolShare",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrOnlyPoolAdminAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrPoolAdminForbidden",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrRecipientRevert",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrStakingAmountLeft",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrThreeInteractionAddrsNotEqual",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUnauthorized",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "expectedRole",
          "type": "uint8",
          "internalType": "enum RoleAccess"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUndelegateTooEarly",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUndelegateZeroAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUnexpectedInternalCall",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "expectedContractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        },
        {
          "name": "actual",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUnstakeTooEarly",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUnstakeZeroAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrZeroCodeContract",
      "inputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrZeroValue",
      "inputs": []
    }
  ],
  "address": "0xAC3F078349EcB80A92CEF7f919C3d6A9B30C0e14",
  "args": "0x",
  "ast": {
    "absolutePath": "contracts/ronin/staking/Staking.sol",
    "id": 32061,
    "exportedSymbols": {
      "Address": [
        145431
      ],
      "AddressArrayUtils": [
        10804
      ],
      "BaseStaking": [
        29767
      ],
      "CandidateStaking": [
        30539
      ],
      "ContractType": [
        37094
      ],
      "DelegatorStaking": [
        31082
      ],
      "EnumFlags": [
        11053
      ],
      "ErrUnexpectedInternalCall": [
        36958
      ],
      "GlobalConfigConsumer": [
        3591
      ],
      "HasContracts": [
        3535
      ],
      "HasProxyAdmin": [
        3580
      ],
      "HasValidatorDeprecated": [
        37113
      ],
      "IBaseStaking": [
        9249
      ],
      "ICandidateManager": [
        9916
      ],
      "ICandidateStaking": [
        9426
      ],
      "ICoinbaseExecution": [
        10084
      ],
      "ICommonInfo": [
        10289
      ],
      "IDelegatorStaking": [
        9525
      ],
      "IEmergencyExit": [
        10167
      ],
      "IHasContracts": [
        8661
      ],
      "IJailingInfo": [
        10364
      ],
      "IRewardPool": [
        9660
      ],
      "IRoninValidatorSet": [
        10185
      ],
      "ISlashingExecution": [
        10235
      ],
      "IStaking": [
        9696
      ],
      "ITimingInfo": [
        10423
      ],
      "IValidatorInfoV2": [
        10618
      ],
      "IdentityGuard": [
        37343
      ],
      "Initializable": [
        144794
      ],
      "Math": [
        11632
      ],
      "PercentageConsumer": [
        3597
      ],
      "PeriodWrapperConsumer": [
        8685
      ],
      "RONTransferHelper": [
        782
      ],
      "ReentrancyGuard": [
        144942
      ],
      "RewardCalculation": [
        31782
      ],
      "Staking": [
        32060
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3673:146",
    "nodes": [
      {
        "id": 31784,
        "nodeType": "PragmaDirective",
        "src": "33:23:146",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 31785,
        "nodeType": "ImportDirective",
        "src": "58:63:146",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32061,
        "sourceUnit": 144795,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31786,
        "nodeType": "ImportDirective",
        "src": "122:34:146",
        "nodes": [],
        "absolutePath": "contracts/libraries/Math.sol",
        "file": "../../libraries/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32061,
        "sourceUnit": 11633,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31787,
        "nodeType": "ImportDirective",
        "src": "157:47:146",
        "nodes": [],
        "absolutePath": "contracts/interfaces/staking/IStaking.sol",
        "file": "../../interfaces/staking/IStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32061,
        "sourceUnit": 9697,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31788,
        "nodeType": "ImportDirective",
        "src": "205:59:146",
        "nodes": [],
        "absolutePath": "contracts/interfaces/validator/IRoninValidatorSet.sol",
        "file": "../../interfaces/validator/IRoninValidatorSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32061,
        "sourceUnit": 10186,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31789,
        "nodeType": "ImportDirective",
        "src": "265:32:146",
        "nodes": [],
        "absolutePath": "contracts/ronin/staking/CandidateStaking.sol",
        "file": "./CandidateStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32061,
        "sourceUnit": 30540,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31790,
        "nodeType": "ImportDirective",
        "src": "298:32:146",
        "nodes": [],
        "absolutePath": "contracts/ronin/staking/DelegatorStaking.sol",
        "file": "./DelegatorStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32061,
        "sourceUnit": 31083,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32060,
        "nodeType": "ContractDefinition",
        "src": "332:3373:146",
        "nodes": [
          {
            "id": 31805,
            "nodeType": "FunctionDefinition",
            "src": "416:47:146",
            "nodes": [],
            "body": {
              "id": 31804,
              "nodeType": "Block",
              "src": "430:33:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31801,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144793,
                      "src": "436:20:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:22:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31803,
                  "nodeType": "ExpressionStatement",
                  "src": "436:22:146"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:146"
            },
            "returnParameters": {
              "id": 31800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:146"
            },
            "scope": 32060,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31813,
            "nodeType": "FunctionDefinition",
            "src": "467:66:146",
            "nodes": [],
            "body": {
              "id": 31812,
              "nodeType": "Block",
              "src": "531:2:146",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 31808,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37094,
                      "src": "507:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 31809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "520:9:146",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37086,
                    "src": "507:22:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$37094",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 31810,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31807,
                  "name": "onlyContract",
                  "nameLocations": [
                    "494:12:146"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3423,
                  "src": "494:12:146"
                },
                "nodeType": "ModifierInvocation",
                "src": "494:36:146"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:146"
            },
            "returnParameters": {
              "id": 31811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:146"
            },
            "scope": 32060,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31821,
            "nodeType": "FunctionDefinition",
            "src": "537:67:146",
            "nodes": [],
            "body": {
              "id": 31820,
              "nodeType": "Block",
              "src": "602:2:146",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 31816,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37094,
                      "src": "578:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 31817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "591:9:146",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37086,
                    "src": "578:22:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$37094",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 31818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31815,
                  "name": "onlyContract",
                  "nameLocations": [
                    "565:12:146"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3423,
                  "src": "565:12:146"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:36:146"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:146"
            },
            "returnParameters": {
              "id": 31819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:146"
            },
            "scope": 32060,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31861,
            "nodeType": "FunctionDefinition",
            "src": "664:526:146",
            "nodes": [],
            "body": {
              "id": 31860,
              "nodeType": "Block",
              "src": "891:299:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31838,
                          "name": "ContractType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37094,
                          "src": "910:12:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                            "typeString": "type(enum ContractType)"
                          }
                        },
                        "id": 31839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "923:9:146",
                        "memberName": "VALIDATOR",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37086,
                        "src": "910:22:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ContractType_$37094",
                          "typeString": "enum ContractType"
                        }
                      },
                      {
                        "id": 31840,
                        "name": "__validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31824,
                        "src": "934:19:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ContractType_$37094",
                          "typeString": "enum ContractType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31837,
                      "name": "_setContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "897:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ContractType_$37094_$_t_address_$returns$__$",
                        "typeString": "function (enum ContractType,address)"
                      }
                    },
                    "id": 31841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:57:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31842,
                  "nodeType": "ExpressionStatement",
                  "src": "897:57:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31844,
                        "name": "__minValidatorStakingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31826,
                        "src": "990:27:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31843,
                      "name": "_setMinValidatorStakingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30505,
                      "src": "960:29:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 31845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:58:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31846,
                  "nodeType": "ExpressionStatement",
                  "src": "960:58:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 31848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1048:1:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 31849,
                        "name": "__maxCommissionRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31828,
                        "src": "1051:19:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31847,
                      "name": "_setCommissionRateRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30538,
                      "src": "1024:23:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:47:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31851,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:47:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31853,
                        "name": "__cooldownSecsToUndelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31830,
                        "src": "1106:26:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31852,
                      "name": "_setCooldownSecsToUndelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29716,
                      "src": "1077:28:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 31854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:56:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31855,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:56:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31857,
                        "name": "__waitingSecsToRevoke",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31832,
                        "src": "1163:21:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31856,
                      "name": "_setWaitingSecsToRevoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29731,
                      "src": "1139:23:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 31858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:46:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31859,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:46:146"
                }
              ]
            },
            "documentation": {
              "id": 31822,
              "nodeType": "StructuredDocumentation",
              "src": "608:53:146",
              "text": " @dev Initializes the contract storage."
            },
            "functionSelector": "f92ad219",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31835,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31834,
                  "name": "initializer",
                  "nameLocations": [
                    "879:11:146"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 144714,
                  "src": "879:11:146"
                },
                "nodeType": "ModifierInvocation",
                "src": "879:11:146"
              }
            ],
            "name": "initialize",
            "nameLocation": "673:10:146",
            "parameters": {
              "id": 31833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31824,
                  "mutability": "mutable",
                  "name": "__validatorContract",
                  "nameLocation": "697:19:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31861,
                  "src": "689:27:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31826,
                  "mutability": "mutable",
                  "name": "__minValidatorStakingAmount",
                  "nameLocation": "730:27:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31861,
                  "src": "722:35:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31828,
                  "mutability": "mutable",
                  "name": "__maxCommissionRate",
                  "nameLocation": "771:19:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31861,
                  "src": "763:27:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31830,
                  "mutability": "mutable",
                  "name": "__cooldownSecsToUndelegate",
                  "nameLocation": "804:26:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31861,
                  "src": "796:34:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31832,
                  "mutability": "mutable",
                  "name": "__waitingSecsToRevoke",
                  "nameLocation": "844:21:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31861,
                  "src": "836:29:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:186:146"
            },
            "returnParameters": {
              "id": 31836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:0:146"
            },
            "scope": 32060,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31877,
            "nodeType": "FunctionDefinition",
            "src": "1194:162:146",
            "nodes": [],
            "body": {
              "id": 31876,
              "nodeType": "Block",
              "src": "1244:112:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31868,
                          "name": "ContractType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37094,
                          "src": "1263:12:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                            "typeString": "type(enum ContractType)"
                          }
                        },
                        "id": 31869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1276:9:146",
                        "memberName": "VALIDATOR",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37086,
                        "src": "1263:22:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ContractType_$37094",
                          "typeString": "enum ContractType"
                        }
                      },
                      {
                        "id": 31870,
                        "name": "______deprecatedValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37112,
                        "src": "1287:25:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ContractType_$37094",
                          "typeString": "enum ContractType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31867,
                      "name": "_setContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "1250:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ContractType_$37094_$_t_address_$returns$__$",
                        "typeString": "function (enum ContractType,address)"
                      }
                    },
                    "id": 31871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:63:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31872,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:63:146"
                },
                {
                  "expression": {
                    "id": 31874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1319:32:146",
                    "subExpression": {
                      "id": 31873,
                      "name": "______deprecatedValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37112,
                      "src": "1326:25:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31875,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:32:146"
                }
              ]
            },
            "functionSelector": "5cd8a76b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "32",
                    "id": 31864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1241:1:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  }
                ],
                "id": 31865,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31863,
                  "name": "reinitializer",
                  "nameLocations": [
                    "1227:13:146"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 144747,
                  "src": "1227:13:146"
                },
                "nodeType": "ModifierInvocation",
                "src": "1227:16:146"
              }
            ],
            "name": "initializeV2",
            "nameLocation": "1203:12:146",
            "parameters": {
              "id": 31862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:2:146"
            },
            "returnParameters": {
              "id": 31866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:0:146"
            },
            "scope": 32060,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31919,
            "nodeType": "FunctionDefinition",
            "src": "1543:483:146",
            "nodes": [],
            "body": {
              "id": 31918,
              "nodeType": "Block",
              "src": "1717:309:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 31890,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1731:5:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 31891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1737:7:146",
                          "memberName": "chainid",
                          "nodeType": "MemberAccess",
                          "src": "1731:13:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32303231",
                          "id": 31892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1748:4:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2021_by_1",
                            "typeString": "int_const 2021"
                          },
                          "value": "2021"
                        },
                        "src": "1731:21:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4531",
                        "id": 31894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:4:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cba2026c84b59ce46a4007300eb97e3e275d4119261ee402d7a3eb40ad58807",
                          "typeString": "literal_string \"E1\""
                        },
                        "value": "E1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cba2026c84b59ce46a4007300eb97e3e275d4119261ee402d7a3eb40ad58807",
                          "typeString": "literal_string \"E1\""
                        }
                      ],
                      "id": 31889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1723:7:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:36:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31896,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:36:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 31898,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1773:3:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1777:6:146",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1773:10:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "307835373833324139343831304531386338346135413545326334644436374430313261646535373446",
                          "id": 31900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1787:42:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x57832A94810E18c84a5A5E2c4dD67D012ade574F"
                        },
                        "src": "1773:56:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4532",
                        "id": 31902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1831:4:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1485ad775c456b0e6e3009ae02ccee0a19b8d44c7978df8fd74581456289c61a",
                          "typeString": "literal_string \"E2\""
                        },
                        "value": "E2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1485ad775c456b0e6e3009ae02ccee0a19b8d44c7978df8fd74581456289c61a",
                          "typeString": "literal_string \"E2\""
                        }
                      ],
                      "id": 31897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1765:7:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:71:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31904,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:71:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31912,
                        "name": "_candidateAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31880,
                        "src": "1934:15:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31913,
                        "name": "_consensusAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31882,
                        "src": "1957:14:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31914,
                        "name": "_treasuryAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31884,
                        "src": "1979:13:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31915,
                        "name": "_commissionRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31886,
                        "src": "2000:15:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 31907,
                                  "name": "ContractType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37094,
                                  "src": "1874:12:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                                    "typeString": "type(enum ContractType)"
                                  }
                                },
                                "id": 31908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1887:9:146",
                                "memberName": "VALIDATOR",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37086,
                                "src": "1874:22:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ContractType_$37094",
                                  "typeString": "enum ContractType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_ContractType_$37094",
                                  "typeString": "enum ContractType"
                                }
                              ],
                              "id": 31906,
                              "name": "getContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3475,
                              "src": "1862:11:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_enum$_ContractType_$37094_$returns$_t_address_$",
                                "typeString": "function (enum ContractType) view returns (address)"
                              }
                            },
                            "id": 31909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1862:35:146",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31905,
                          "name": "IRoninValidatorSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10185,
                          "src": "1843:18:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRoninValidatorSet_$10185_$",
                            "typeString": "type(contract IRoninValidatorSet)"
                          }
                        },
                        "id": 31910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1843:55:146",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRoninValidatorSet_$10185",
                          "typeString": "contract IRoninValidatorSet"
                        }
                      },
                      "id": 31911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1899:27:146",
                      "memberName": "execApplyValidatorCandidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9846,
                      "src": "1843:83:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address payable,uint256) external"
                      }
                    },
                    "id": 31916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:178:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31917,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:178:146"
                }
              ]
            },
            "documentation": {
              "id": 31878,
              "nodeType": "StructuredDocumentation",
              "src": "1360:180:146",
              "text": " @dev This method only work on testnet, to hotfix the applied validator candidate that is failed.\n TODO: Should remove this method before deploying it on mainnet."
            },
            "functionSelector": "0dccaf46",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tmp_re_applyValidatorCandidate",
            "nameLocation": "1552:30:146",
            "parameters": {
              "id": 31887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31880,
                  "mutability": "mutable",
                  "name": "_candidateAdmin",
                  "nameLocation": "1596:15:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31919,
                  "src": "1588:23:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31882,
                  "mutability": "mutable",
                  "name": "_consensusAddr",
                  "nameLocation": "1625:14:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31919,
                  "src": "1617:22:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31884,
                  "mutability": "mutable",
                  "name": "_treasuryAddr",
                  "nameLocation": "1661:13:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31919,
                  "src": "1645:29:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 31883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:15:146",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31886,
                  "mutability": "mutable",
                  "name": "_commissionRate",
                  "nameLocation": "1688:15:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31919,
                  "src": "1680:23:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:125:146"
            },
            "returnParameters": {
              "id": 31888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:146"
            },
            "scope": 32060,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31943,
            "nodeType": "FunctionDefinition",
            "src": "2068:249:146",
            "nodes": [],
            "body": {
              "id": 31942,
              "nodeType": "Block",
              "src": "2256:61:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31937,
                        "name": "_consensusAddrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31923,
                        "src": "2277:15:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 31938,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31926,
                        "src": "2294:8:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 31939,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "2304:7:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31936,
                      "name": "_recordRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31775,
                      "src": "2262:14:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] calldata,uint256)"
                      }
                    },
                    "id": 31940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:50:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31941,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:50:146"
                }
              ]
            },
            "baseFunctions": [
              9685
            ],
            "documentation": {
              "id": 31920,
              "nodeType": "StructuredDocumentation",
              "src": "2030:35:146",
              "text": " @inheritdoc IStaking"
            },
            "functionSelector": "acd79c46",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 31932,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37094,
                      "src": "2232:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 31933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2245:9:146",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37086,
                    "src": "2232:22:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$37094",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 31934,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31931,
                  "name": "onlyContract",
                  "nameLocations": [
                    "2219:12:146"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3423,
                  "src": "2219:12:146"
                },
                "nodeType": "ModifierInvocation",
                "src": "2219:36:146"
              }
            ],
            "name": "execRecordRewards",
            "nameLocation": "2077:17:146",
            "overrides": {
              "id": 31930,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2210:8:146"
            },
            "parameters": {
              "id": 31929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31923,
                  "mutability": "mutable",
                  "name": "_consensusAddrs",
                  "nameLocation": "2119:15:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31943,
                  "src": "2100:34:146",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31921,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2100:7:146",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 31922,
                    "nodeType": "ArrayTypeName",
                    "src": "2100:9:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31926,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "2159:8:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31943,
                  "src": "2140:27:146",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31924,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31925,
                    "nodeType": "ArrayTypeName",
                    "src": "2140:9:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31928,
                  "mutability": "mutable",
                  "name": "_period",
                  "nameLocation": "2181:7:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31943,
                  "src": "2173:15:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:98:146"
            },
            "returnParameters": {
              "id": 31935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2256:0:146"
            },
            "scope": 32060,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31994,
            "nodeType": "FunctionDefinition",
            "src": "2359:589:146",
            "nodes": [],
            "body": {
              "id": 31993,
              "nodeType": "Block",
              "src": "2541:407:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31958,
                      "name": "_actualDeductingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31956,
                      "src": "2547:22:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 31960,
                            "name": "_stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29280,
                            "src": "2593:12:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetail_$9151_storage_$",
                              "typeString": "mapping(address => struct IBaseStaking.PoolDetail storage ref)"
                            }
                          },
                          "id": 31962,
                          "indexExpression": {
                            "id": 31961,
                            "name": "_consensusAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31946,
                            "src": "2606:14:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2593:28:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9151_storage",
                            "typeString": "struct IBaseStaking.PoolDetail storage ref"
                          }
                        },
                        {
                          "id": 31963,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "2623:7:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PoolDetail_$9151_storage",
                            "typeString": "struct IBaseStaking.PoolDetail storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 31959,
                        "name": "_deductStakingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          32059
                        ],
                        "referencedDeclaration": 32059,
                        "src": "2572:20:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolDetail_$9151_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct IBaseStaking.PoolDetail storage pointer,uint256) returns (uint256)"
                        }
                      },
                      "id": 31964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2572:59:146",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2547:84:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31966,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:84:146"
                },
                {
                  "assignments": [
                    31968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31968,
                      "mutability": "mutable",
                      "name": "_validatorContractAddr",
                      "nameLocation": "2653:22:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 31993,
                      "src": "2637:38:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 31967,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:15:146",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31974,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31971,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2686:3:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2690:6:146",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2686:10:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2678:8:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 31969,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2678:8:146",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 31973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:19:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2637:60:146"
                },
                {
                  "condition": {
                    "id": 31979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2707:63:146",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 31976,
                          "name": "_validatorContractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31968,
                          "src": "2723:22:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 31977,
                          "name": "_actualDeductingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31956,
                          "src": "2747:22:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 31975,
                        "name": "_unsafeSendRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2708:14:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address payable,uint256) returns (bool)"
                        }
                      },
                      "id": 31978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2708:62:146",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31992,
                  "nodeType": "IfStatement",
                  "src": "2703:241:146",
                  "trueBody": {
                    "id": 31991,
                    "nodeType": "Block",
                    "src": "2772:172:146",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 31981,
                              "name": "_consensusAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31946,
                              "src": "2820:14:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 31982,
                              "name": "_validatorContractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31968,
                              "src": "2844:22:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31983,
                              "name": "_actualDeductingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31956,
                              "src": "2876:22:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31986,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2916:4:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Staking_$32060",
                                      "typeString": "contract Staking"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Staking_$32060",
                                      "typeString": "contract Staking"
                                    }
                                  ],
                                  "id": 31985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2908:7:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 31984,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2908:7:146",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 31987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2908:13:146",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 31988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2922:7:146",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2908:21:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 31980,
                            "name": "StakingAmountDeductFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9315,
                            "src": "2785:25:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 31989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2785:152:146",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31990,
                        "nodeType": "EmitStatement",
                        "src": "2780:157:146"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9695
            ],
            "documentation": {
              "id": 31944,
              "nodeType": "StructuredDocumentation",
              "src": "2321:35:146",
              "text": " @inheritdoc IStaking"
            },
            "functionSelector": "2715805e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 31952,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37094,
                      "src": "2476:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 31953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2489:9:146",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37086,
                    "src": "2476:22:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$37094",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 31954,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31951,
                  "name": "onlyContract",
                  "nameLocations": [
                    "2463:12:146"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3423,
                  "src": "2463:12:146"
                },
                "nodeType": "ModifierInvocation",
                "src": "2463:36:146"
              }
            ],
            "name": "execDeductStakingAmount",
            "nameLocation": "2368:23:146",
            "overrides": {
              "id": 31950,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2454:8:146"
            },
            "parameters": {
              "id": 31949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31946,
                  "mutability": "mutable",
                  "name": "_consensusAddr",
                  "nameLocation": "2405:14:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31994,
                  "src": "2397:22:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31948,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2433:7:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31994,
                  "src": "2425:15:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2391:53:146"
            },
            "returnParameters": {
              "id": 31957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31956,
                  "mutability": "mutable",
                  "name": "_actualDeductingAmount",
                  "nameLocation": "2517:22:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 31994,
                  "src": "2509:30:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2508:32:146"
            },
            "scope": 32060,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32011,
            "nodeType": "FunctionDefinition",
            "src": "2999:164:146",
            "nodes": [],
            "body": {
              "id": 32010,
              "nodeType": "Block",
              "src": "3074:89:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 32003,
                                  "name": "ContractType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37094,
                                  "src": "3118:12:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ContractType_$37094_$",
                                    "typeString": "type(enum ContractType)"
                                  }
                                },
                                "id": 32004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3131:9:146",
                                "memberName": "VALIDATOR",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37086,
                                "src": "3118:22:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ContractType_$37094",
                                  "typeString": "enum ContractType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_ContractType_$37094",
                                  "typeString": "enum ContractType"
                                }
                              ],
                              "id": 32002,
                              "name": "getContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3475,
                              "src": "3106:11:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_enum$_ContractType_$37094_$returns$_t_address_$",
                                "typeString": "function (enum ContractType) view returns (address)"
                              }
                            },
                            "id": 32005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3106:35:146",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32001,
                          "name": "IRoninValidatorSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10185,
                          "src": "3087:18:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRoninValidatorSet_$10185_$",
                            "typeString": "type(contract IRoninValidatorSet)"
                          }
                        },
                        "id": 32006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3087:55:146",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRoninValidatorSet_$10185",
                          "typeString": "contract IRoninValidatorSet"
                        }
                      },
                      "id": 32007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3143:13:146",
                      "memberName": "currentPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10416,
                      "src": "3087:69:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 32008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3087:71:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32000,
                  "id": 32009,
                  "nodeType": "Return",
                  "src": "3080:78:146"
                }
              ]
            },
            "baseFunctions": [
              31781
            ],
            "documentation": {
              "id": 31995,
              "nodeType": "StructuredDocumentation",
              "src": "2952:44:146",
              "text": " @inheritdoc RewardCalculation"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_currentPeriod",
            "nameLocation": "3008:14:146",
            "overrides": {
              "id": 31997,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3047:8:146"
            },
            "parameters": {
              "id": 31996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:2:146"
            },
            "returnParameters": {
              "id": 32000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32011,
                  "src": "3065:7:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3064:9:146"
            },
            "scope": 32060,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 32059,
            "nodeType": "FunctionDefinition",
            "src": "3213:490:146",
            "nodes": [],
            "body": {
              "id": 32058,
              "nodeType": "Block",
              "src": "3357:346:146",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32023,
                      "name": "_actualDeductingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32021,
                      "src": "3363:22:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32026,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32015,
                            "src": "3397:5:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                              "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                            }
                          },
                          "id": 32027,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3403:13:146",
                          "memberName": "stakingAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9140,
                          "src": "3397:19:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 32028,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32017,
                          "src": "3418:7:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 32024,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11632,
                          "src": "3388:4:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$11632_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 32025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3393:3:146",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11527,
                        "src": "3388:8:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 32029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3388:38:146",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3363:63:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32031,
                  "nodeType": "ExpressionStatement",
                  "src": "3363:63:146"
                },
                {
                  "expression": {
                    "id": 32036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 32032,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32015,
                        "src": "3433:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                          "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                        }
                      },
                      "id": 32034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3439:13:146",
                      "memberName": "stakingAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9140,
                      "src": "3433:19:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 32035,
                      "name": "_actualDeductingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32021,
                      "src": "3456:22:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3433:45:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32037,
                  "nodeType": "ExpressionStatement",
                  "src": "3433:45:146"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32039,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32015,
                        "src": "3515:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                          "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                        }
                      },
                      {
                        "expression": {
                          "id": 32040,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32015,
                          "src": "3528:5:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                            "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                          }
                        },
                        "id": 32041,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3534:5:146",
                        "memberName": "admin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9138,
                        "src": "3528:11:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32042,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32015,
                          "src": "3547:5:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                            "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                          }
                        },
                        "id": 32043,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3553:13:146",
                        "memberName": "stakingAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9140,
                        "src": "3547:19:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32046,
                              "name": "_pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32015,
                              "src": "3594:5:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                                "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                              }
                            },
                            "id": 32047,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3600:12:146",
                            "memberName": "stakingTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9142,
                            "src": "3594:18:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 32048,
                            "name": "_actualDeductingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32021,
                            "src": "3614:22:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 32044,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11632,
                            "src": "3574:4:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$11632_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 32045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3579:14:146",
                          "memberName": "subNonNegative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11611,
                          "src": "3574:19:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 32049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3574:63:146",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                          "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32038,
                      "name": "_changeDelegatingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29766,
                      "src": "3484:23:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolDetail_$9151_storage_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (struct IBaseStaking.PoolDetail storage pointer,address,uint256,uint256)"
                      }
                    },
                    "id": 32050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:159:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32051,
                  "nodeType": "ExpressionStatement",
                  "src": "3484:159:146"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32053,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32015,
                          "src": "3663:5:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                            "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                          }
                        },
                        "id": 32054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3669:4:146",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9136,
                        "src": "3663:10:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32055,
                        "name": "_actualDeductingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32021,
                        "src": "3675:22:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32052,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9280,
                      "src": "3654:8:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:44:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32057,
                  "nodeType": "EmitStatement",
                  "src": "3649:49:146"
                }
              ]
            },
            "baseFunctions": [
              30490
            ],
            "documentation": {
              "id": 32012,
              "nodeType": "StructuredDocumentation",
              "src": "3167:43:146",
              "text": " @inheritdoc CandidateStaking"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deductStakingAmount",
            "nameLocation": "3222:20:146",
            "overrides": {
              "id": 32019,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3307:8:146"
            },
            "parameters": {
              "id": 32018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32015,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "3267:5:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 32059,
                  "src": "3248:24:146",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                    "typeString": "struct IBaseStaking.PoolDetail"
                  },
                  "typeName": {
                    "id": 32014,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32013,
                      "name": "PoolDetail",
                      "nameLocations": [
                        "3248:10:146"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9151,
                      "src": "3248:10:146"
                    },
                    "referencedDeclaration": 9151,
                    "src": "3248:10:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolDetail_$9151_storage_ptr",
                      "typeString": "struct IBaseStaking.PoolDetail"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32017,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3286:7:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 32059,
                  "src": "3278:15:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:55:146"
            },
            "returnParameters": {
              "id": 32022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32021,
                  "mutability": "mutable",
                  "name": "_actualDeductingAmount",
                  "nameLocation": "3333:22:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 32059,
                  "src": "3325:30:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3325:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3324:32:146"
            },
            "scope": 32060,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31791,
              "name": "IStaking",
              "nameLocations": [
                "352:8:146"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9696,
              "src": "352:8:146"
            },
            "id": 31792,
            "nodeType": "InheritanceSpecifier",
            "src": "352:8:146"
          },
          {
            "baseName": {
              "id": 31793,
              "name": "CandidateStaking",
              "nameLocations": [
                "362:16:146"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30539,
              "src": "362:16:146"
            },
            "id": 31794,
            "nodeType": "InheritanceSpecifier",
            "src": "362:16:146"
          },
          {
            "baseName": {
              "id": 31795,
              "name": "DelegatorStaking",
              "nameLocations": [
                "380:16:146"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31082,
              "src": "380:16:146"
            },
            "id": 31796,
            "nodeType": "InheritanceSpecifier",
            "src": "380:16:146"
          },
          {
            "baseName": {
              "id": 31797,
              "name": "Initializable",
              "nameLocations": [
                "398:13:146"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144794,
              "src": "398:13:146"
            },
            "id": 31798,
            "nodeType": "InheritanceSpecifier",
            "src": "398:13:146"
          }
        ],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32060,
          144794,
          31082,
          30539,
          3597,
          3591,
          9696,
          9525,
          9426,
          29767,
          37113,
          9249,
          3535,
          37343,
          8661,
          3580,
          31782,
          9660,
          8685,
          144942,
          782
        ],
        "name": "Staking",
        "nameLocation": "341:7:146",
        "scope": 32061,
        "usedErrors": [
          676,
          681,
          8634,
          9164,
          9167,
          9170,
          9173,
          9178,
          9183,
          9186,
          9322,
          9325,
          9328,
          9331,
          9334,
          9337,
          9340,
          9452,
          9455,
          9458,
          9608,
          10649,
          36915,
          36943,
          36958
        ],
        "usedEvents": [
          8642,
          9156,
          9161,
          9259,
          9266,
          9273,
          9280,
          9287,
          9293,
          9304,
          9315,
          9440,
          9449,
          9554,
          9563,
          9572,
          9586,
          9597,
          9605,
          144658
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 17360399,
  "bytecode": "0x60806040523480156200001157600080fd5b5060016000556200002162000027565b620000e9565b60d154610100900460ff1615620000945760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60d15460ff9081161015620000e75760d1805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b613f1a80620000f96000396000f3fe6080604052600436106102bf5760003560e01c80636bd8f8041161016e578063aa15a6fd116100cb578063d01b8eed1161007f578063e22d1c9d11610064578063e22d1c9d14610821578063f92ad21914610841578063f9f031df14610861576102d1565b8063d01b8eed14610790578063de981f1b14610801576102d1565b8063af245429116100b0578063af2454291461070a578063c2a672e01461071f578063c50870031461073f576102d1565b8063aa15a6fd146106d7578063acd79c46146106f7576102d1565b8063909791dd11610122578063924f081e11610107578063924f081e146106775780639488e4e914610697578063969ffc14146106b7576102d1565b8063909791dd1461064257806391f8723f14610657576102d1565b8063865e6fd311610153578063865e6fd3146105c9578063888b9ae9146105e9578063895ab74214610609576102d1565b80636bd8f8041461055f57806376664b651461057f576102d1565b806342e0c4081161021c5780635c19a95c116101d05780636558954f116101b55780636558954f14610508578063679a6e431461051f5780636b0916951461053f576102d1565b80635c19a95c146104e05780635cd8a76b146104f3576102d1565b80634530d202116102015780634530d202146104785780634d99dd16146104a057806357473447146104c0576102d1565b806342e0c4081461040d57806342ef3c3414610458576102d1565b80631658c86e116102735780632715805e116102585780632715805e146103ba5780632baae125146103da5780633d8e846e146103ed576102d1565b80631658c86e1461038757806326476204146103a7576102d1565b8063095f6475116102a4578063095f64751461031a578063097e4a9d146103475780630dccaf4614610367576102d1565b806303827884146102dc5780630682e8fa14610305576102d1565b366102d15760086102cf81610881565b005b60086102cf81610881565b3480156102e857600080fd5b506102f26104b081565b6040519081526020015b60405180910390f35b34801561031157600080fd5b506038546102f2565b34801561032657600080fd5b5061033a6103353660046136cb565b6108f2565b6040516102fc9190613772565b34801561035357600080fd5b506102f261036236600461379a565b610a2b565b34801561037357600080fd5b506102cf6103823660046137f1565b610ae1565b34801561039357600080fd5b506102cf6103a2366004613842565b610c1a565b6102cf6103b5366004613842565b610ca3565b3480156103c657600080fd5b506102f26103d5366004613866565b610cdc565b6102cf6103e83660046137f1565b610d6d565b3480156103f957600080fd5b5061033a610408366004613892565b610ef8565b34801561041957600080fd5b50610448610428366004613842565b6001600160a01b039081166000908152603a602052604090205416151590565b60405190151581526020016102fc565b34801561046457600080fd5b5061033a6104733660046138e7565b611051565b34801561048457600080fd5b50606e54606d54604080519283526020830191909152016102fc565b3480156104ac57600080fd5b506102cf6104bb366004613866565b61111e565b3480156104cc57600080fd5b506102cf6104db366004613929565b6111ca565b6102cf6104ee366004613842565b6111dc565b3480156104ff57600080fd5b506102cf61124a565b34801561051457600080fd5b506102f26201518081565b34801561052b57600080fd5b506102cf61053a36600461394b565b61136c565b34801561054b57600080fd5b506102f261055a366004613964565b61137d565b34801561056b57600080fd5b506102cf61057a36600461399d565b6113c4565b34801561058b57600080fd5b506102f261059a366004613964565b6001600160a01b0391821660009081526037602090815260408083209390941682526004909201909152205490565b3480156105d557600080fd5b506102cf6105e43660046139ed565b611479565b3480156105f557600080fd5b506102cf61060436600461394b565b611494565b34801561061557600080fd5b506102f2610624366004613842565b6001600160a01b031660009081526037602052604090206003015490565b34801561064e57600080fd5b50606c546102f2565b34801561066357600080fd5b5061033a6106723660046138e7565b6114a5565b34801561068357600080fd5b506102cf610692366004613a09565b611546565b3480156106a357600080fd5b506102cf6106b23660046136cb565b611639565b3480156106c357600080fd5b506102cf6106d236600461394b565b611798565b3480156106e357600080fd5b506102cf6106f2366004613842565b6117a9565b6102cf610705366004613a3e565b611832565b34801561071657600080fd5b506039546102f2565b34801561072b57600080fd5b506102cf61073a366004613866565b611886565b34801561074b57600080fd5b5061077861075a366004613842565b6001600160a01b039081166000908152603a60205260409020541690565b6040516001600160a01b0390911681526020016102fc565b34801561079c57600080fd5b506107dc6107ab366004613842565b6001600160a01b03808216600090815260376020526040902060018101546002820154600390920154921693909250565b604080516001600160a01b0390941684526020840192909252908201526060016102fc565b34801561080d57600080fd5b5061077861081c366004613ab2565b6119a2565b34801561082d57600080fd5b506102cf61083c366004613acd565b611a36565b34801561084d57600080fd5b506102cf61085c366004613b19565b611c07565b34801561086d57600080fd5b506102f261087c3660046138e7565b611d54565b61088a816119a2565b6001600160a01b0316336001600160a01b0316146108ef576000356001600160e01b03191681336040517f8383e6340000000000000000000000000000000000000000000000000000000081526004016108e693929190613b87565b60405180910390fd5b50565b6060838214610914576040516376081a7b60e11b815260040160405180910390fd5b8367ffffffffffffffff81111561092d5761092d613bbc565b604051908082528060200260200182016040528015610956578160200160208202803683370190505b50905060005b8151811015610a22576037600087878481811061097b5761097b613bd2565b90506020020160208101906109909190613842565b6001600160a01b03166001600160a01b0316815260200190815260200160002060040160008585848181106109c7576109c7613bd2565b90506020020160208101906109dc9190613842565b6001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610a0f57610a0f613bd2565b602090810291909101015260010161095c565b50949350505050565b6000600260005403610a7f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b600260005581610a8e81611e04565b336000908152603a60205260409020546001600160a01b031615610ac757604051632fc6bfb160e21b81523360048201526024016108e6565b610ad333868686611ebb565b600160005595945050505050565b466107e514610b325760405162461bcd60e51b815260206004820152600260248201527f453100000000000000000000000000000000000000000000000000000000000060448201526064016108e6565b7357832a94810e18c84a5a5e2c4dd67d012ade574f3314610b955760405162461bcd60e51b815260206004820152600260248201527f453200000000000000000000000000000000000000000000000000000000000060448201526064016108e6565b610b9f60086119a2565b60405163f883afaf60e01b81526001600160a01b0386811660048301528581166024830152848116604483015260648201849052919091169063f883afaf906084015b600060405180830381600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b5050505050505050565b80610c2481611e04565b6001600160a01b038216600090815260376020526040902033610c478282611f28565b610c5160086119a2565b6039546040517fdd716ad30000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482019290925291169063dd716ad390604401610be2565b610cab611f71565b80610cb581611e04565b6001600160a01b0382166000908152603760205260409020610cd8903334611fad565b5050565b60006008610ce981610881565b6001600160a01b0384166000908152603760205260409020610d0b9084612058565b915033610d1881846120f5565b610d6557604080518481524760208201526001600160a01b0380841692908816917f63701cd972aa3c7f87898aab145c972e52185beab07d6e39380a998d334cf6c8910160405180910390a35b505092915050565b600260005403610dbf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b60026000908155338152603a60205260409020546001600160a01b031615610dfc57604051632fc6bfb160e21b81523360048201526024016108e6565b606d54811180610e0d5750606e5481105b15610e2b57604051631b8454a360e21b815260040160405180910390fd5b3433610e3b818787878787612151565b6001600160a01b03808616600081815260376020818152604080842060018101805497891673ffffffffffffffffffffffffffffffffffffffff19988916811790915581548816871782558552603a835290842080549096168517909555929091529052610eaa818385611fad565b816001600160a01b0316866001600160a01b03167ffc1f1e73948cbc47c5b7f90e5601b7daccd9ad7173218486ccc74bdd051d05e860405160405180910390a3505060016000555050505050565b6060600080610f0760086119a2565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f689190613be8565b90508367ffffffffffffffff811115610f8357610f83613bbc565b604051908082528060200260200182016040528015610fac578160200160208202803683370190505b50925060005b8481101561104757858582818110610fcc57610fcc613bd2565b9050602002016020810190610fe19190613842565b925061102283888461101d878c6001600160a01b0391821660009081526037602090815260408083209390941682526004909201909152205490565b6123df565b84828151811061103457611034613bd2565b6020908102919091010152600101610fb2565b5050509392505050565b60608167ffffffffffffffff81111561106c5761106c613bbc565b604051908082528060200260200182016040528015611095578160200160208202803683370190505b50905060005b8281101561111757603760008585848181106110b9576110b9613bd2565b90506020020160208101906110ce9190613842565b6001600160a01b03166001600160a01b031681526020019081526020016000206002015482828151811061110457611104613bd2565b602090810291909101015260010161109b565b5092915050565b6002600054036111705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b600260009081556001600160a01b038316815260376020526040902033906111999082846124db565b6111a38183612777565b6111c057604051635ff7115760e11b815260040160405180910390fd5b5050600160005550565b6111d26127d8565b610cd8828261284c565b6111e4611f71565b806111ee81611e04565b336000908152603a60205260409020546001600160a01b03161561122757604051632fc6bfb160e21b81523360048201526024016108e6565b6001600160a01b0382166000908152603760205260409020610cd89033346128c0565b60d154600290610100900460ff1615801561126c575060d15460ff8083169116105b6112de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108e6565b60d1805461ffff191660ff83161761010017905560365461130a906008906001600160a01b031661296f565b6036805473ffffffffffffffffffffffffffffffffffffffff1916905560d1805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b6113746127d8565b6108ef81612a20565b60006113bb838361138c612a55565b6001600160a01b038088166000908152603760209081526040808320938a1683526004909301905220546123df565b90505b92915050565b6002600054036114165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b60026000558161142581611e04565b6001600160a01b0384166000908152603760205260409020339061144a9082856124db565b6001600160a01b038416600090815260376020526040902061146d9082856128c0565b50506001600055505050565b6114816127d8565b61148a81612ac7565b610cd8828261296f565b61149c6127d8565b6108ef81612b16565b60608167ffffffffffffffff8111156114c0576114c0613bbc565b6040519080825280602002602001820160405280156114e9578160200160208202803683370190505b50905060005b828110156111175761152184848381811061150c5761150c613bd2565b90506020020160208101906106249190613842565b82828151811061153357611533613bd2565b60209081029190910101526001016114ef565b8261155081611e04565b6001600160a01b0384166000908152603760205260409020336115738282611f28565b606d548411806115845750606e5484105b156115a257604051631b8454a360e21b815260040160405180910390fd5b6115ac60086119a2565b6040517fe5125a1d0000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820188905260448201879052919091169063e5125a1d906064015b600060405180830381600087803b15801561161957600080fd5b505af115801561162d573d6000803e3d6000fd5b50505050505050505050565b60026000540361168b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b600260005582158061169d5750828114155b156116bb576040516376081a7b60e11b815260040160405180910390fd5b336000805b85811015611763578484828181106116da576116da613bd2565b90506020020135826116ec9190613c17565b915061175b6037600089898581811061170757611707613bd2565b905060200201602081019061171c9190613842565b6001600160a01b03166001600160a01b031681526020019081526020016000208487878581811061174f5761174f613bd2565b905060200201356124db565b6001016116c0565b5061176e8282612777565b61178b57604051635ff7115760e11b815260040160405180910390fd5b5050600160005550505050565b6117a06127d8565b6108ef81612b4b565b806117b381611e04565b6001600160a01b0382166000908152603760205260409020336117d68282611f28565b6117e060086119a2565b6039546040517fa7c2f1190000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482019290925291169063a7c2f11990604401610be2565b600861183d81610881565b61187e868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250879150869050612b80565b505050505050565b6002600054036118d85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b6002600055816118e781611e04565b81600003611921576040517f31d9f7d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0383166000908152603760205260408120600281015433929061194c908690613c2a565b9050606c5481101561198a576040517fef0a995700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611995828487612fb1565b61176e83866104b06130b6565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f8111156119d9576119d9613b5d565b60ff1681526020810191909152604001600020546001600160a01b0316905080611a3157816040517f812281be0000000000000000000000000000000000000000000000000000000081526004016108e69190613c3d565b919050565b6008611a4181610881565b8215611c015760005b83811015611bc657600060376000878785818110611a6a57611a6a613bd2565b9050602002016020810190611a7f9190613842565b6001600160a01b0390811682526020808301939093526040918201600090812060018101549092168152603a9093529120805473ffffffffffffffffffffffffffffffffffffffff1916905560028101549091508015611b5357611ae38282612058565b506001820154611aff906001600160a01b0316826104b06130b6565b611b535760018201548254604080518481524760208201526001600160a01b0393841693909216917f7dc5115a5aba081f5a174f56a3d02eea582824783322a4ac03f7bd388f444194910160405180910390a35b6000611b93888886818110611b6a57611b6a613bd2565b9050602002016020810190611b7f9190613842565b60018501546001600160a01b031688613116565b90508015611bb8576001830154611bb6906001600160a01b0316826104b06130b6565b505b836001019350505050611a4a565b507f4f257d3ba23679d338f1d94296086bba5724af341b7fa31aa0ff297bfcdc62d88484604051611bf8929190613c4b565b60405180910390a15b50505050565b60d154610100900460ff1615808015611c27575060d154600160ff909116105b80611c415750303b158015611c41575060d15460ff166001145b611cb35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108e6565b60d1805460ff191660011790558015611cd65760d1805461ff0019166101001790555b611ce160088761296f565b611cea85612a20565b611cf560008561284c565b611cfe83612b16565b611d0782612b4b565b801561187e5760d1805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b6000600260005403611da85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b6002600081905550611ded3384848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061324592505050565b9050611df93382613296565b600160005592915050565b611e0e60086119a2565b604051635061f96960e11b81526001600160a01b038381166004830152919091169063a0c3f2d290602401602060405180830381865afa158015611e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7a9190613c99565b6108ef576040517f1fa18c8a0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016108e6565b6000611efa8585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061324592505050565b6001600160a01b0383166000908152603760205260409020909150611f209086836128c0565b949350505050565b60018201546001600160a01b03828116911614610cd8576040517ff78cb7ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600003611fab576040517fdbf97bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b8282611fb98282611f28565b82856002016000828254611fcd9190613c17565b92505081905550611ff385858760020154868960030154611fee9190613c17565b6132e4565b6001600160a01b03808516600090815260058701602052604090819020429055865490519116907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906120499086815260200190565b60405180910390a25050505050565b600061206883600201548361331f565b90508083600201600082825461207e9190613c2a565b90915550506001830154600284015460038501546120ae9286926001600160a01b0390911691611fee9086613335565b82546040518281526001600160a01b03909116907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a292915050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612142576040519150601f19603f3d011682016040523d82523d6000602084013e612147565b606091505b5090949350505050565b61215f8660006104b06130b6565b6121bd576040805163338f030160e01b81526001600160a01b03881660048201526024810191909152600a60448201527f706f6f6c2061646d696e0000000000000000000000000000000000000000000060648201526084016108e6565b6121cb8360006104b06130b6565b612229576040805163338f030160e01b81526001600160a01b03851660048201526024810191909152600860448201527f747265617375727900000000000000000000000000000000000000000000000060648201526084016108e6565b606c5481101561224c57604051630a8d7fa760e21b815260040160405180910390fd5b846001600160a01b0316866001600160a01b031614158061227f5750826001600160a01b0316856001600160a01b031614155b156122b6576040517fdc1d04ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905086816000815181106122eb576122eb613bd2565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061231f5761231f613bd2565b60200260200101906001600160a01b031690816001600160a01b0316815250506123488161334f565b1561238d576040517f1ad2fb620000000000000000000000000000000000000000000000000000000081526001600160e01b03196000351660048201526024016108e6565b5061239860086119a2565b60405163f883afaf60e01b81526001600160a01b0387811660048301528681166024830152858116604483015260648201859052919091169063f883afaf906084016115ff565b6001600160a01b0380851660009081526002602090815260408083209387168352929052908120600381015484900361241a57549050611f20565b6001600160a01b03861660009081526003602081815260408084206001808452828620948701548652939092528320918201548392901561247f57805460018601549094506124699085613c2a565b85600201546124789190613cbb565b9250612487565b846001015493505b8154600090612497908690613c2a565b6124a19089613cbb565b9050670de0b6b3a76400006124b68286613c17565b6124c09190613cd2565b86546124cc9190613c17565b9b9a5050505050505050505050565b82826124e782826133ee565b82600003612521576040517ff5618d5a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0384166000908152600486016020526040902054831115612575576040517f34aa9a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061258160086119a2565b8654604051635061f96960e11b81526001600160a01b03918216600482015291925082169063a0c3f2d290602401602060405180830381865afa1580156125cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f09190613c99565b8015612683575085546040517f28bde1e10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152908216906328bde1e19060240160e060405180830381865afa158015612659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267d9190613cff565b60a00151155b80156126b657506038546001600160a01b038616600090815260058801602052604090205442916126b391613c17565b10155b156126ed576040517ff19f52bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516600090815260048701602052604090205461272b908790879061271b908890613c2a565b878a60030154611fee9190613c2a565b85546040518581526001600160a01b03918216918716907f4d10bd049775c77bd7f255195afba5088028ecb3c7c277d393ccff7934f2f92c9060200160405180910390a3505050505050565b6000814710156127ce576040517f98c713c00000000000000000000000000000000000000000000000000000000081526001600160e01b0319600035166004820152476024820152604481018390526064016108e6565b6113bb83836120f5565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b03163314611fab576000356001600160e01b03191660016040517f3e523c000000000000000000000000000000000000000000000000000000000081526004016108e6929190613dab565b61271081118061285b57508082115b1561287957604051631b8454a360e21b815260040160405180910390fd5b606d819055606e82905560408051838152602081018390527f677752f5bf9541b14288833909e5ec5a478103131c1ec08c4638943be5826c14910160405180910390a15050565b82826128cc82826133ee565b6001600160a01b038416600090815260048601602052604090205461290a90869086906128fa908790613c17565b868960030154611fee9190613c17565b6001600160a01b03808516600081815260058801602052604090819020429055875490519216917fe5541a6b6103d4fa7e021ed54fad39c66f27a76bd13d374cf6240ae6bd0bb72b906129609087815260200190565b60405180910390a35050505050565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f8111156129a5576129a5613b5d565b60ff1681526020810191909152604001600020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03928316179055811682600f8111156129f3576129f3613b5d565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b606c8190556040518181527f372bbdb8d72373b0012f84ee5a11671e5fb72b8bea902ebca93a19cb45d32be290602001611361565b6000612a6160086119a2565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac29190613be8565b905090565b806001600160a01b03163b6000036108ef576040517f2ff1928c0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016108e6565b60388190556040518181527f4956b65267b8f1e642284bcb5037116c69a9c78d9ca576beeae0974737a4872a90602001611361565b60398190556040518181527f02be0b73b597f2c0f138aebee162b3b0e25d5b5a26854c15dcf79176e9a1c67890602001611361565b83518214612bc957807fae52c603227f64e4c6101dde593aa9790a16b3ac77546bd746d758511e9560a5858585604051612bbc93929190613e12565b60405180910390a2611c01565b6000806000806000885167ffffffffffffffff811115612beb57612beb613bbc565b604051908082528060200260200182016040528015612c14578160200160208202803683370190505b5090506000895167ffffffffffffffff811115612c3357612c33613bbc565b604051908082528060200260200182016040528015612c5c578160200160208202803683370190505b50905060008a5167ffffffffffffffff811115612c7b57612c7b613bbc565b604051908082528060200260200182016040528015612ca4578160200160208202803683370190505b50905060005b8b51811015612f17578b8181518110612cc557612cc5613bd2565b6020908102919091018101516001600160a01b038116600090815260038084526040808320603790955290912001549097506001600160a01b03881660009081526001602081815260408084208f855290915290912001549096508a9003612d6657868389806001019a5081518110612d4057612d40613bd2565b60200260200101906001600160a01b031690816001600160a01b03168152505050612f05565b60028101548a1115612d9457604080518082019091528681526020018a905260018101869055600281018a90555b600181015415612dde5760018101548c8c84818110612db557612db5613bd2565b90506020020135670de0b6b3a7640000612dcf9190613cbb565b612dd99190613cd2565b612de1565b60005b985088816000016000828254612df79190613c17565b9182905550905085612e098a85613c2a565b81518110612e1957612e19613bd2565b6020026020010181815250506040518060400160405280826000015481526020018b81525060016000896001600160a01b03166001600160a01b0316815260200190815260200160002060008c815260200190815260200160002060008201518160000155602082015181600101559050508581600101600001819055508060010160000154848984612eac9190613c2a565b81518110612ebc57612ebc613bd2565b6020908102919091010152868d612ed38a85613c2a565b81518110612ee357612ee3613bd2565b60200260200101906001600160a01b031690816001600160a01b031681525050505b80612f0f81613e75565b915050612caa565b508515612f6057858152858b51038b52877fee74f10cc50bf4b7e57fd36be7d46288795f3a9151dae97505b718b392ba14a382604051612f579190613e8e565b60405180910390a25b8a5115612fa457877f0e54e0485f70f0f63bc25889ddbf01ce1269ad6f07fdb2df573a0fbdb4d66f888c8585604051612f9b93929190613ea1565b60405180910390a25b5050505050505050505050565b8282612fbd8282611f28565b8460020154831115612fe257604051630a8d7fa760e21b815260040160405180910390fd5b6038546001600160a01b0385166000908152600587016020526040902054429161300b91613c17565b1115613043576040517f07b6105200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828560020160008282546130579190613c2a565b9250508190555061307885858760020154868960030154611fee9190613c2a565b84546040518481526001600160a01b03909116907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7590602001612049565b6000836001600160a01b0316838390604051600060405180830381858888f193505050503d8060008114613106576040519150601f19603f3d011682016040523d82523d6000602084013e61310b565b606091505b509095945050505050565b6001600160a01b0380841660009081526037602090815260408083209386168352600490930190529081205461314e858585846123df565b9150836001600160a01b0316856001600160a01b03167f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b78460405161319591815260200190565b60405180910390a36001600160a01b038086166000818152600260209081526040808320948916835293815283822082815592825260039052919091206131df9082868580613437565b60038181018590556001600160a01b03878116600081815260209384526040808220546001870155519081529188169290917faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad910160405180910390a350509392505050565b600080613250612a55565b905060005b8351811015610d655761328284828151811061327357613273613bd2565b60200260200101518684613116565b61328c9084613c17565b9250600101613255565b6132a08282612777565b610cd8576040517f3b97b7700000000000000000000000000000000000000000000000000000000081526001600160e01b03196000351660048201526024016108e6565b83546132fa906001600160a01b031684846134e2565b60038401556001600160a01b0390911660009081526004909201602052604090912055565b600081831061332e57816113bb565b5090919050565b60008183116133455760006113bb565b6113bb8284613c2a565b6000815160000361336257506000919050565b60005b60018351038110156133e557600181015b83518110156133dc5783818151811061339157613391613bd2565b60200260200101516001600160a01b03168483815181106133b4576133b4613bd2565b60200260200101516001600160a01b0316036133d4575060019392505050565b600101613376565b50600101613365565b50600092915050565b60018201546001600160a01b03808316911603610cd8576040517f9feb934700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828460030154101561344b57600284018190555b600061345b85600201548461331f565b9050600081866002015461346f9190613c2a565b905080156134d9576002860182905560018701548111156134bc576040517fa5ca437e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808760010160000160008282546134d39190613c2a565b90915550505b50505050505050565b60006134ec612a55565b6001600160a01b0385166000908152600360205260409020600181015460028201549293509091831115613560576040518060400160405280613547886001600160a01b031660009081526037602052604090206003015490565b8152602090810185905281516001850155015160028301555b6001600160a01b038681166000818152600260209081526040808320948a1680845294825280832093835260378252808320948352600490940190529182205490916135ae898988856123df565b83549091508114613600578083556040518181526001600160a01b0389811691908b16907faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad9060200160405180910390a35b61360d8584888a86613437565b845460018085019190915560038401879055850154841461367457886001600160a01b0316867f81faf50e2aaf52eaba2ab841071efb9f6f0850a3e7d008b1336e6001d3d4963c876001016000015460405161366b91815260200190565b60405180910390a35b505050505050505050565b60008083601f84011261369157600080fd5b50813567ffffffffffffffff8111156136a957600080fd5b6020830191508360208260051b85010111156136c457600080fd5b9250929050565b600080600080604085870312156136e157600080fd5b843567ffffffffffffffff808211156136f957600080fd5b6137058883890161367f565b9096509450602087013591508082111561371e57600080fd5b5061372b8782880161367f565b95989497509550505050565b600081518084526020808501945080840160005b838110156137675781518752958201959082019060010161374b565b509495945050505050565b6020815260006113bb6020830184613737565b6001600160a01b03811681146108ef57600080fd5b6000806000604084860312156137af57600080fd5b833567ffffffffffffffff8111156137c657600080fd5b6137d28682870161367f565b90945092505060208401356137e681613785565b809150509250925092565b6000806000806080858703121561380757600080fd5b843561381281613785565b9350602085013561382281613785565b9250604085013561383281613785565b9396929550929360600135925050565b60006020828403121561385457600080fd5b813561385f81613785565b9392505050565b6000806040838503121561387957600080fd5b823561388481613785565b946020939093013593505050565b6000806000604084860312156138a757600080fd5b83356138b281613785565b9250602084013567ffffffffffffffff8111156138ce57600080fd5b6138da8682870161367f565b9497909650939450505050565b600080602083850312156138fa57600080fd5b823567ffffffffffffffff81111561391157600080fd5b61391d8582860161367f565b90969095509350505050565b6000806040838503121561393c57600080fd5b50508035926020909101359150565b60006020828403121561395d57600080fd5b5035919050565b6000806040838503121561397757600080fd5b823561398281613785565b9150602083013561399281613785565b809150509250929050565b6000806000606084860312156139b257600080fd5b83356139bd81613785565b925060208401356139cd81613785565b929592945050506040919091013590565b803560108110611a3157600080fd5b60008060408385031215613a0057600080fd5b613982836139de565b600080600060608486031215613a1e57600080fd5b8335613a2981613785565b95602085013595506040909401359392505050565b600080600080600060608688031215613a5657600080fd5b853567ffffffffffffffff80821115613a6e57600080fd5b613a7a89838a0161367f565b90975095506020880135915080821115613a9357600080fd5b50613aa08882890161367f565b96999598509660400135949350505050565b600060208284031215613ac457600080fd5b6113bb826139de565b600080600060408486031215613ae257600080fd5b833567ffffffffffffffff811115613af957600080fd5b613b058682870161367f565b909790965060209590950135949350505050565b600080600080600060a08688031215613b3157600080fd5b8535613b3c81613785565b97602087013597506040870135966060810135965060800135945092505050565b634e487b7160e01b600052602160045260246000fd5b60108110613b8357613b83613b5d565b9052565b6001600160e01b03198416815260608101613ba56020830185613b73565b6001600160a01b0383166040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215613bfa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156113be576113be613c01565b818103818111156113be576113be613c01565b602081016113be8284613b73565b60208082528181018390526000908460408401835b86811015613c8e578235613c7381613785565b6001600160a01b031682529183019190830190600101613c60565b509695505050505050565b600060208284031215613cab57600080fd5b8151801515811461385f57600080fd5b80820281158282048414176113be576113be613c01565b600082613cef57634e487b7160e01b600052601260045260246000fd5b500490565b8051611a3181613785565b600060e08284031215613d1157600080fd5b60405160e0810181811067ffffffffffffffff82111715613d4257634e487b7160e01b600052604160045260246000fd5b604052613d4e83613cf4565b8152613d5c60208401613cf4565b6020820152613d6d60408401613cf4565b6040820152613d7e60608401613cf4565b60608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b6001600160e01b03198316815260408101600b8310613dcc57613dcc613b5d565b8260208301529392505050565b600081518084526020808501945080840160005b838110156137675781516001600160a01b031687529582019590820190600101613ded565b604081526000613e256040830186613dd9565b82810360208401528381527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841115613e5d57600080fd5b8360051b808660208401370160200195945050505050565b600060018201613e8757613e87613c01565b5060010190565b6020815260006113bb6020830184613dd9565b606081526000613eb46060830186613dd9565b8281036020840152613ec68186613737565b90508281036040840152613eda8185613737565b969550505050505056fea264697066735822122008b44401173a181fd706991c67da79421f567a43d09c7e933cf97d9541d498d764736f6c63430008150033",
  "chainId": 2022,
  "contractAbsolutePath": "Staking.sol",
  "deployedBytecode": "0x6080604052600436106102bf5760003560e01c80636bd8f8041161016e578063aa15a6fd116100cb578063d01b8eed1161007f578063e22d1c9d11610064578063e22d1c9d14610821578063f92ad21914610841578063f9f031df14610861576102d1565b8063d01b8eed14610790578063de981f1b14610801576102d1565b8063af245429116100b0578063af2454291461070a578063c2a672e01461071f578063c50870031461073f576102d1565b8063aa15a6fd146106d7578063acd79c46146106f7576102d1565b8063909791dd11610122578063924f081e11610107578063924f081e146106775780639488e4e914610697578063969ffc14146106b7576102d1565b8063909791dd1461064257806391f8723f14610657576102d1565b8063865e6fd311610153578063865e6fd3146105c9578063888b9ae9146105e9578063895ab74214610609576102d1565b80636bd8f8041461055f57806376664b651461057f576102d1565b806342e0c4081161021c5780635c19a95c116101d05780636558954f116101b55780636558954f14610508578063679a6e431461051f5780636b0916951461053f576102d1565b80635c19a95c146104e05780635cd8a76b146104f3576102d1565b80634530d202116102015780634530d202146104785780634d99dd16146104a057806357473447146104c0576102d1565b806342e0c4081461040d57806342ef3c3414610458576102d1565b80631658c86e116102735780632715805e116102585780632715805e146103ba5780632baae125146103da5780633d8e846e146103ed576102d1565b80631658c86e1461038757806326476204146103a7576102d1565b8063095f6475116102a4578063095f64751461031a578063097e4a9d146103475780630dccaf4614610367576102d1565b806303827884146102dc5780630682e8fa14610305576102d1565b366102d15760086102cf81610881565b005b60086102cf81610881565b3480156102e857600080fd5b506102f26104b081565b6040519081526020015b60405180910390f35b34801561031157600080fd5b506038546102f2565b34801561032657600080fd5b5061033a6103353660046136cb565b6108f2565b6040516102fc9190613772565b34801561035357600080fd5b506102f261036236600461379a565b610a2b565b34801561037357600080fd5b506102cf6103823660046137f1565b610ae1565b34801561039357600080fd5b506102cf6103a2366004613842565b610c1a565b6102cf6103b5366004613842565b610ca3565b3480156103c657600080fd5b506102f26103d5366004613866565b610cdc565b6102cf6103e83660046137f1565b610d6d565b3480156103f957600080fd5b5061033a610408366004613892565b610ef8565b34801561041957600080fd5b50610448610428366004613842565b6001600160a01b039081166000908152603a602052604090205416151590565b60405190151581526020016102fc565b34801561046457600080fd5b5061033a6104733660046138e7565b611051565b34801561048457600080fd5b50606e54606d54604080519283526020830191909152016102fc565b3480156104ac57600080fd5b506102cf6104bb366004613866565b61111e565b3480156104cc57600080fd5b506102cf6104db366004613929565b6111ca565b6102cf6104ee366004613842565b6111dc565b3480156104ff57600080fd5b506102cf61124a565b34801561051457600080fd5b506102f26201518081565b34801561052b57600080fd5b506102cf61053a36600461394b565b61136c565b34801561054b57600080fd5b506102f261055a366004613964565b61137d565b34801561056b57600080fd5b506102cf61057a36600461399d565b6113c4565b34801561058b57600080fd5b506102f261059a366004613964565b6001600160a01b0391821660009081526037602090815260408083209390941682526004909201909152205490565b3480156105d557600080fd5b506102cf6105e43660046139ed565b611479565b3480156105f557600080fd5b506102cf61060436600461394b565b611494565b34801561061557600080fd5b506102f2610624366004613842565b6001600160a01b031660009081526037602052604090206003015490565b34801561064e57600080fd5b50606c546102f2565b34801561066357600080fd5b5061033a6106723660046138e7565b6114a5565b34801561068357600080fd5b506102cf610692366004613a09565b611546565b3480156106a357600080fd5b506102cf6106b23660046136cb565b611639565b3480156106c357600080fd5b506102cf6106d236600461394b565b611798565b3480156106e357600080fd5b506102cf6106f2366004613842565b6117a9565b6102cf610705366004613a3e565b611832565b34801561071657600080fd5b506039546102f2565b34801561072b57600080fd5b506102cf61073a366004613866565b611886565b34801561074b57600080fd5b5061077861075a366004613842565b6001600160a01b039081166000908152603a60205260409020541690565b6040516001600160a01b0390911681526020016102fc565b34801561079c57600080fd5b506107dc6107ab366004613842565b6001600160a01b03808216600090815260376020526040902060018101546002820154600390920154921693909250565b604080516001600160a01b0390941684526020840192909252908201526060016102fc565b34801561080d57600080fd5b5061077861081c366004613ab2565b6119a2565b34801561082d57600080fd5b506102cf61083c366004613acd565b611a36565b34801561084d57600080fd5b506102cf61085c366004613b19565b611c07565b34801561086d57600080fd5b506102f261087c3660046138e7565b611d54565b61088a816119a2565b6001600160a01b0316336001600160a01b0316146108ef576000356001600160e01b03191681336040517f8383e6340000000000000000000000000000000000000000000000000000000081526004016108e693929190613b87565b60405180910390fd5b50565b6060838214610914576040516376081a7b60e11b815260040160405180910390fd5b8367ffffffffffffffff81111561092d5761092d613bbc565b604051908082528060200260200182016040528015610956578160200160208202803683370190505b50905060005b8151811015610a22576037600087878481811061097b5761097b613bd2565b90506020020160208101906109909190613842565b6001600160a01b03166001600160a01b0316815260200190815260200160002060040160008585848181106109c7576109c7613bd2565b90506020020160208101906109dc9190613842565b6001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610a0f57610a0f613bd2565b602090810291909101015260010161095c565b50949350505050565b6000600260005403610a7f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b600260005581610a8e81611e04565b336000908152603a60205260409020546001600160a01b031615610ac757604051632fc6bfb160e21b81523360048201526024016108e6565b610ad333868686611ebb565b600160005595945050505050565b466107e514610b325760405162461bcd60e51b815260206004820152600260248201527f453100000000000000000000000000000000000000000000000000000000000060448201526064016108e6565b7357832a94810e18c84a5a5e2c4dd67d012ade574f3314610b955760405162461bcd60e51b815260206004820152600260248201527f453200000000000000000000000000000000000000000000000000000000000060448201526064016108e6565b610b9f60086119a2565b60405163f883afaf60e01b81526001600160a01b0386811660048301528581166024830152848116604483015260648201849052919091169063f883afaf906084015b600060405180830381600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b5050505050505050565b80610c2481611e04565b6001600160a01b038216600090815260376020526040902033610c478282611f28565b610c5160086119a2565b6039546040517fdd716ad30000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482019290925291169063dd716ad390604401610be2565b610cab611f71565b80610cb581611e04565b6001600160a01b0382166000908152603760205260409020610cd8903334611fad565b5050565b60006008610ce981610881565b6001600160a01b0384166000908152603760205260409020610d0b9084612058565b915033610d1881846120f5565b610d6557604080518481524760208201526001600160a01b0380841692908816917f63701cd972aa3c7f87898aab145c972e52185beab07d6e39380a998d334cf6c8910160405180910390a35b505092915050565b600260005403610dbf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b60026000908155338152603a60205260409020546001600160a01b031615610dfc57604051632fc6bfb160e21b81523360048201526024016108e6565b606d54811180610e0d5750606e5481105b15610e2b57604051631b8454a360e21b815260040160405180910390fd5b3433610e3b818787878787612151565b6001600160a01b03808616600081815260376020818152604080842060018101805497891673ffffffffffffffffffffffffffffffffffffffff19988916811790915581548816871782558552603a835290842080549096168517909555929091529052610eaa818385611fad565b816001600160a01b0316866001600160a01b03167ffc1f1e73948cbc47c5b7f90e5601b7daccd9ad7173218486ccc74bdd051d05e860405160405180910390a3505060016000555050505050565b6060600080610f0760086119a2565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f689190613be8565b90508367ffffffffffffffff811115610f8357610f83613bbc565b604051908082528060200260200182016040528015610fac578160200160208202803683370190505b50925060005b8481101561104757858582818110610fcc57610fcc613bd2565b9050602002016020810190610fe19190613842565b925061102283888461101d878c6001600160a01b0391821660009081526037602090815260408083209390941682526004909201909152205490565b6123df565b84828151811061103457611034613bd2565b6020908102919091010152600101610fb2565b5050509392505050565b60608167ffffffffffffffff81111561106c5761106c613bbc565b604051908082528060200260200182016040528015611095578160200160208202803683370190505b50905060005b8281101561111757603760008585848181106110b9576110b9613bd2565b90506020020160208101906110ce9190613842565b6001600160a01b03166001600160a01b031681526020019081526020016000206002015482828151811061110457611104613bd2565b602090810291909101015260010161109b565b5092915050565b6002600054036111705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b600260009081556001600160a01b038316815260376020526040902033906111999082846124db565b6111a38183612777565b6111c057604051635ff7115760e11b815260040160405180910390fd5b5050600160005550565b6111d26127d8565b610cd8828261284c565b6111e4611f71565b806111ee81611e04565b336000908152603a60205260409020546001600160a01b03161561122757604051632fc6bfb160e21b81523360048201526024016108e6565b6001600160a01b0382166000908152603760205260409020610cd89033346128c0565b60d154600290610100900460ff1615801561126c575060d15460ff8083169116105b6112de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108e6565b60d1805461ffff191660ff83161761010017905560365461130a906008906001600160a01b031661296f565b6036805473ffffffffffffffffffffffffffffffffffffffff1916905560d1805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b6113746127d8565b6108ef81612a20565b60006113bb838361138c612a55565b6001600160a01b038088166000908152603760209081526040808320938a1683526004909301905220546123df565b90505b92915050565b6002600054036114165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b60026000558161142581611e04565b6001600160a01b0384166000908152603760205260409020339061144a9082856124db565b6001600160a01b038416600090815260376020526040902061146d9082856128c0565b50506001600055505050565b6114816127d8565b61148a81612ac7565b610cd8828261296f565b61149c6127d8565b6108ef81612b16565b60608167ffffffffffffffff8111156114c0576114c0613bbc565b6040519080825280602002602001820160405280156114e9578160200160208202803683370190505b50905060005b828110156111175761152184848381811061150c5761150c613bd2565b90506020020160208101906106249190613842565b82828151811061153357611533613bd2565b60209081029190910101526001016114ef565b8261155081611e04565b6001600160a01b0384166000908152603760205260409020336115738282611f28565b606d548411806115845750606e5484105b156115a257604051631b8454a360e21b815260040160405180910390fd5b6115ac60086119a2565b6040517fe5125a1d0000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820188905260448201879052919091169063e5125a1d906064015b600060405180830381600087803b15801561161957600080fd5b505af115801561162d573d6000803e3d6000fd5b50505050505050505050565b60026000540361168b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b600260005582158061169d5750828114155b156116bb576040516376081a7b60e11b815260040160405180910390fd5b336000805b85811015611763578484828181106116da576116da613bd2565b90506020020135826116ec9190613c17565b915061175b6037600089898581811061170757611707613bd2565b905060200201602081019061171c9190613842565b6001600160a01b03166001600160a01b031681526020019081526020016000208487878581811061174f5761174f613bd2565b905060200201356124db565b6001016116c0565b5061176e8282612777565b61178b57604051635ff7115760e11b815260040160405180910390fd5b5050600160005550505050565b6117a06127d8565b6108ef81612b4b565b806117b381611e04565b6001600160a01b0382166000908152603760205260409020336117d68282611f28565b6117e060086119a2565b6039546040517fa7c2f1190000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482019290925291169063a7c2f11990604401610be2565b600861183d81610881565b61187e868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250879150869050612b80565b505050505050565b6002600054036118d85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b6002600055816118e781611e04565b81600003611921576040517f31d9f7d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0383166000908152603760205260408120600281015433929061194c908690613c2a565b9050606c5481101561198a576040517fef0a995700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611995828487612fb1565b61176e83866104b06130b6565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f8111156119d9576119d9613b5d565b60ff1681526020810191909152604001600020546001600160a01b0316905080611a3157816040517f812281be0000000000000000000000000000000000000000000000000000000081526004016108e69190613c3d565b919050565b6008611a4181610881565b8215611c015760005b83811015611bc657600060376000878785818110611a6a57611a6a613bd2565b9050602002016020810190611a7f9190613842565b6001600160a01b0390811682526020808301939093526040918201600090812060018101549092168152603a9093529120805473ffffffffffffffffffffffffffffffffffffffff1916905560028101549091508015611b5357611ae38282612058565b506001820154611aff906001600160a01b0316826104b06130b6565b611b535760018201548254604080518481524760208201526001600160a01b0393841693909216917f7dc5115a5aba081f5a174f56a3d02eea582824783322a4ac03f7bd388f444194910160405180910390a35b6000611b93888886818110611b6a57611b6a613bd2565b9050602002016020810190611b7f9190613842565b60018501546001600160a01b031688613116565b90508015611bb8576001830154611bb6906001600160a01b0316826104b06130b6565b505b836001019350505050611a4a565b507f4f257d3ba23679d338f1d94296086bba5724af341b7fa31aa0ff297bfcdc62d88484604051611bf8929190613c4b565b60405180910390a15b50505050565b60d154610100900460ff1615808015611c27575060d154600160ff909116105b80611c415750303b158015611c41575060d15460ff166001145b611cb35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108e6565b60d1805460ff191660011790558015611cd65760d1805461ff0019166101001790555b611ce160088761296f565b611cea85612a20565b611cf560008561284c565b611cfe83612b16565b611d0782612b4b565b801561187e5760d1805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b6000600260005403611da85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e6565b6002600081905550611ded3384848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061324592505050565b9050611df93382613296565b600160005592915050565b611e0e60086119a2565b604051635061f96960e11b81526001600160a01b038381166004830152919091169063a0c3f2d290602401602060405180830381865afa158015611e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7a9190613c99565b6108ef576040517f1fa18c8a0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016108e6565b6000611efa8585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061324592505050565b6001600160a01b0383166000908152603760205260409020909150611f209086836128c0565b949350505050565b60018201546001600160a01b03828116911614610cd8576040517ff78cb7ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600003611fab576040517fdbf97bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b8282611fb98282611f28565b82856002016000828254611fcd9190613c17565b92505081905550611ff385858760020154868960030154611fee9190613c17565b6132e4565b6001600160a01b03808516600090815260058701602052604090819020429055865490519116907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906120499086815260200190565b60405180910390a25050505050565b600061206883600201548361331f565b90508083600201600082825461207e9190613c2a565b90915550506001830154600284015460038501546120ae9286926001600160a01b0390911691611fee9086613335565b82546040518281526001600160a01b03909116907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a292915050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612142576040519150601f19603f3d011682016040523d82523d6000602084013e612147565b606091505b5090949350505050565b61215f8660006104b06130b6565b6121bd576040805163338f030160e01b81526001600160a01b03881660048201526024810191909152600a60448201527f706f6f6c2061646d696e0000000000000000000000000000000000000000000060648201526084016108e6565b6121cb8360006104b06130b6565b612229576040805163338f030160e01b81526001600160a01b03851660048201526024810191909152600860448201527f747265617375727900000000000000000000000000000000000000000000000060648201526084016108e6565b606c5481101561224c57604051630a8d7fa760e21b815260040160405180910390fd5b846001600160a01b0316866001600160a01b031614158061227f5750826001600160a01b0316856001600160a01b031614155b156122b6576040517fdc1d04ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905086816000815181106122eb576122eb613bd2565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061231f5761231f613bd2565b60200260200101906001600160a01b031690816001600160a01b0316815250506123488161334f565b1561238d576040517f1ad2fb620000000000000000000000000000000000000000000000000000000081526001600160e01b03196000351660048201526024016108e6565b5061239860086119a2565b60405163f883afaf60e01b81526001600160a01b0387811660048301528681166024830152858116604483015260648201859052919091169063f883afaf906084016115ff565b6001600160a01b0380851660009081526002602090815260408083209387168352929052908120600381015484900361241a57549050611f20565b6001600160a01b03861660009081526003602081815260408084206001808452828620948701548652939092528320918201548392901561247f57805460018601549094506124699085613c2a565b85600201546124789190613cbb565b9250612487565b846001015493505b8154600090612497908690613c2a565b6124a19089613cbb565b9050670de0b6b3a76400006124b68286613c17565b6124c09190613cd2565b86546124cc9190613c17565b9b9a5050505050505050505050565b82826124e782826133ee565b82600003612521576040517ff5618d5a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0384166000908152600486016020526040902054831115612575576040517f34aa9a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061258160086119a2565b8654604051635061f96960e11b81526001600160a01b03918216600482015291925082169063a0c3f2d290602401602060405180830381865afa1580156125cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f09190613c99565b8015612683575085546040517f28bde1e10000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152908216906328bde1e19060240160e060405180830381865afa158015612659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267d9190613cff565b60a00151155b80156126b657506038546001600160a01b038616600090815260058801602052604090205442916126b391613c17565b10155b156126ed576040517ff19f52bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516600090815260048701602052604090205461272b908790879061271b908890613c2a565b878a60030154611fee9190613c2a565b85546040518581526001600160a01b03918216918716907f4d10bd049775c77bd7f255195afba5088028ecb3c7c277d393ccff7934f2f92c9060200160405180910390a3505050505050565b6000814710156127ce576040517f98c713c00000000000000000000000000000000000000000000000000000000081526001600160e01b0319600035166004820152476024820152604481018390526064016108e6565b6113bb83836120f5565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b03163314611fab576000356001600160e01b03191660016040517f3e523c000000000000000000000000000000000000000000000000000000000081526004016108e6929190613dab565b61271081118061285b57508082115b1561287957604051631b8454a360e21b815260040160405180910390fd5b606d819055606e82905560408051838152602081018390527f677752f5bf9541b14288833909e5ec5a478103131c1ec08c4638943be5826c14910160405180910390a15050565b82826128cc82826133ee565b6001600160a01b038416600090815260048601602052604090205461290a90869086906128fa908790613c17565b868960030154611fee9190613c17565b6001600160a01b03808516600081815260058801602052604090819020429055875490519216917fe5541a6b6103d4fa7e021ed54fad39c66f27a76bd13d374cf6240ae6bd0bb72b906129609087815260200190565b60405180910390a35050505050565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f8111156129a5576129a5613b5d565b60ff1681526020810191909152604001600020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03928316179055811682600f8111156129f3576129f3613b5d565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b606c8190556040518181527f372bbdb8d72373b0012f84ee5a11671e5fb72b8bea902ebca93a19cb45d32be290602001611361565b6000612a6160086119a2565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac29190613be8565b905090565b806001600160a01b03163b6000036108ef576040517f2ff1928c0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016108e6565b60388190556040518181527f4956b65267b8f1e642284bcb5037116c69a9c78d9ca576beeae0974737a4872a90602001611361565b60398190556040518181527f02be0b73b597f2c0f138aebee162b3b0e25d5b5a26854c15dcf79176e9a1c67890602001611361565b83518214612bc957807fae52c603227f64e4c6101dde593aa9790a16b3ac77546bd746d758511e9560a5858585604051612bbc93929190613e12565b60405180910390a2611c01565b6000806000806000885167ffffffffffffffff811115612beb57612beb613bbc565b604051908082528060200260200182016040528015612c14578160200160208202803683370190505b5090506000895167ffffffffffffffff811115612c3357612c33613bbc565b604051908082528060200260200182016040528015612c5c578160200160208202803683370190505b50905060008a5167ffffffffffffffff811115612c7b57612c7b613bbc565b604051908082528060200260200182016040528015612ca4578160200160208202803683370190505b50905060005b8b51811015612f17578b8181518110612cc557612cc5613bd2565b6020908102919091018101516001600160a01b038116600090815260038084526040808320603790955290912001549097506001600160a01b03881660009081526001602081815260408084208f855290915290912001549096508a9003612d6657868389806001019a5081518110612d4057612d40613bd2565b60200260200101906001600160a01b031690816001600160a01b03168152505050612f05565b60028101548a1115612d9457604080518082019091528681526020018a905260018101869055600281018a90555b600181015415612dde5760018101548c8c84818110612db557612db5613bd2565b90506020020135670de0b6b3a7640000612dcf9190613cbb565b612dd99190613cd2565b612de1565b60005b985088816000016000828254612df79190613c17565b9182905550905085612e098a85613c2a565b81518110612e1957612e19613bd2565b6020026020010181815250506040518060400160405280826000015481526020018b81525060016000896001600160a01b03166001600160a01b0316815260200190815260200160002060008c815260200190815260200160002060008201518160000155602082015181600101559050508581600101600001819055508060010160000154848984612eac9190613c2a565b81518110612ebc57612ebc613bd2565b6020908102919091010152868d612ed38a85613c2a565b81518110612ee357612ee3613bd2565b60200260200101906001600160a01b031690816001600160a01b031681525050505b80612f0f81613e75565b915050612caa565b508515612f6057858152858b51038b52877fee74f10cc50bf4b7e57fd36be7d46288795f3a9151dae97505b718b392ba14a382604051612f579190613e8e565b60405180910390a25b8a5115612fa457877f0e54e0485f70f0f63bc25889ddbf01ce1269ad6f07fdb2df573a0fbdb4d66f888c8585604051612f9b93929190613ea1565b60405180910390a25b5050505050505050505050565b8282612fbd8282611f28565b8460020154831115612fe257604051630a8d7fa760e21b815260040160405180910390fd5b6038546001600160a01b0385166000908152600587016020526040902054429161300b91613c17565b1115613043576040517f07b6105200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828560020160008282546130579190613c2a565b9250508190555061307885858760020154868960030154611fee9190613c2a565b84546040518481526001600160a01b03909116907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7590602001612049565b6000836001600160a01b0316838390604051600060405180830381858888f193505050503d8060008114613106576040519150601f19603f3d011682016040523d82523d6000602084013e61310b565b606091505b509095945050505050565b6001600160a01b0380841660009081526037602090815260408083209386168352600490930190529081205461314e858585846123df565b9150836001600160a01b0316856001600160a01b03167f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b78460405161319591815260200190565b60405180910390a36001600160a01b038086166000818152600260209081526040808320948916835293815283822082815592825260039052919091206131df9082868580613437565b60038181018590556001600160a01b03878116600081815260209384526040808220546001870155519081529188169290917faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad910160405180910390a350509392505050565b600080613250612a55565b905060005b8351811015610d655761328284828151811061327357613273613bd2565b60200260200101518684613116565b61328c9084613c17565b9250600101613255565b6132a08282612777565b610cd8576040517f3b97b7700000000000000000000000000000000000000000000000000000000081526001600160e01b03196000351660048201526024016108e6565b83546132fa906001600160a01b031684846134e2565b60038401556001600160a01b0390911660009081526004909201602052604090912055565b600081831061332e57816113bb565b5090919050565b60008183116133455760006113bb565b6113bb8284613c2a565b6000815160000361336257506000919050565b60005b60018351038110156133e557600181015b83518110156133dc5783818151811061339157613391613bd2565b60200260200101516001600160a01b03168483815181106133b4576133b4613bd2565b60200260200101516001600160a01b0316036133d4575060019392505050565b600101613376565b50600101613365565b50600092915050565b60018201546001600160a01b03808316911603610cd8576040517f9feb934700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828460030154101561344b57600284018190555b600061345b85600201548461331f565b9050600081866002015461346f9190613c2a565b905080156134d9576002860182905560018701548111156134bc576040517fa5ca437e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808760010160000160008282546134d39190613c2a565b90915550505b50505050505050565b60006134ec612a55565b6001600160a01b0385166000908152600360205260409020600181015460028201549293509091831115613560576040518060400160405280613547886001600160a01b031660009081526037602052604090206003015490565b8152602090810185905281516001850155015160028301555b6001600160a01b038681166000818152600260209081526040808320948a1680845294825280832093835260378252808320948352600490940190529182205490916135ae898988856123df565b83549091508114613600578083556040518181526001600160a01b0389811691908b16907faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad9060200160405180910390a35b61360d8584888a86613437565b845460018085019190915560038401879055850154841461367457886001600160a01b0316867f81faf50e2aaf52eaba2ab841071efb9f6f0850a3e7d008b1336e6001d3d4963c876001016000015460405161366b91815260200190565b60405180910390a35b505050505050505050565b60008083601f84011261369157600080fd5b50813567ffffffffffffffff8111156136a957600080fd5b6020830191508360208260051b85010111156136c457600080fd5b9250929050565b600080600080604085870312156136e157600080fd5b843567ffffffffffffffff808211156136f957600080fd5b6137058883890161367f565b9096509450602087013591508082111561371e57600080fd5b5061372b8782880161367f565b95989497509550505050565b600081518084526020808501945080840160005b838110156137675781518752958201959082019060010161374b565b509495945050505050565b6020815260006113bb6020830184613737565b6001600160a01b03811681146108ef57600080fd5b6000806000604084860312156137af57600080fd5b833567ffffffffffffffff8111156137c657600080fd5b6137d28682870161367f565b90945092505060208401356137e681613785565b809150509250925092565b6000806000806080858703121561380757600080fd5b843561381281613785565b9350602085013561382281613785565b9250604085013561383281613785565b9396929550929360600135925050565b60006020828403121561385457600080fd5b813561385f81613785565b9392505050565b6000806040838503121561387957600080fd5b823561388481613785565b946020939093013593505050565b6000806000604084860312156138a757600080fd5b83356138b281613785565b9250602084013567ffffffffffffffff8111156138ce57600080fd5b6138da8682870161367f565b9497909650939450505050565b600080602083850312156138fa57600080fd5b823567ffffffffffffffff81111561391157600080fd5b61391d8582860161367f565b90969095509350505050565b6000806040838503121561393c57600080fd5b50508035926020909101359150565b60006020828403121561395d57600080fd5b5035919050565b6000806040838503121561397757600080fd5b823561398281613785565b9150602083013561399281613785565b809150509250929050565b6000806000606084860312156139b257600080fd5b83356139bd81613785565b925060208401356139cd81613785565b929592945050506040919091013590565b803560108110611a3157600080fd5b60008060408385031215613a0057600080fd5b613982836139de565b600080600060608486031215613a1e57600080fd5b8335613a2981613785565b95602085013595506040909401359392505050565b600080600080600060608688031215613a5657600080fd5b853567ffffffffffffffff80821115613a6e57600080fd5b613a7a89838a0161367f565b90975095506020880135915080821115613a9357600080fd5b50613aa08882890161367f565b96999598509660400135949350505050565b600060208284031215613ac457600080fd5b6113bb826139de565b600080600060408486031215613ae257600080fd5b833567ffffffffffffffff811115613af957600080fd5b613b058682870161367f565b909790965060209590950135949350505050565b600080600080600060a08688031215613b3157600080fd5b8535613b3c81613785565b97602087013597506040870135966060810135965060800135945092505050565b634e487b7160e01b600052602160045260246000fd5b60108110613b8357613b83613b5d565b9052565b6001600160e01b03198416815260608101613ba56020830185613b73565b6001600160a01b0383166040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215613bfa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156113be576113be613c01565b818103818111156113be576113be613c01565b602081016113be8284613b73565b60208082528181018390526000908460408401835b86811015613c8e578235613c7381613785565b6001600160a01b031682529183019190830190600101613c60565b509695505050505050565b600060208284031215613cab57600080fd5b8151801515811461385f57600080fd5b80820281158282048414176113be576113be613c01565b600082613cef57634e487b7160e01b600052601260045260246000fd5b500490565b8051611a3181613785565b600060e08284031215613d1157600080fd5b60405160e0810181811067ffffffffffffffff82111715613d4257634e487b7160e01b600052604160045260246000fd5b604052613d4e83613cf4565b8152613d5c60208401613cf4565b6020820152613d6d60408401613cf4565b6040820152613d7e60608401613cf4565b60608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b6001600160e01b03198316815260408101600b8310613dcc57613dcc613b5d565b8260208301529392505050565b600081518084526020808501945080840160005b838110156137675781516001600160a01b031687529582019590820190600101613ded565b604081526000613e256040830186613dd9565b82810360208401528381527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841115613e5d57600080fd5b8360051b808660208401370160200195945050505050565b600060018201613e8757613e87613c01565b5060010190565b6020815260006113bb6020830184613dd9565b606081526000613eb46060830186613dd9565b8281036020840152613ec68186613737565b90508281036040840152613eda8185613737565b969550505050505056fea264697066735822122008b44401173a181fd706991c67da79421f567a43d09c7e933cf97d9541d498d764736f6c63430008150033",
  "deployer": "0x968D0Cd7343f711216817E617d3f92a23dC91c07",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "applyValidatorCandidate(address,address,address,uint256)": {
        "details": "Proposes a candidate to become a validator. Requirements: - The method caller is able to receive RON. - The treasury is able to receive RON. - The amount is larger than or equal to the minimum validator staking amount `minValidatorStakingAmount()`. Emits the event `PoolApproved`.",
        "params": {
          "_candidateAdmin": "the candidate admin will be stored in the validator contract, used for calling function that affects to its candidate, e.g. scheduling maintenance."
        }
      },
      "bulkUndelegate(address[],uint256[])": {
        "details": "Bulk unstakes from a list of candidates. Requirements: - The method caller is not the pool admin. Emits the events `Undelegated`."
      },
      "claimRewards(address[])": {
        "details": "Claims the reward of method caller. Emits the `RewardClaimed` event."
      },
      "cooldownSecsToUndelegate()": {
        "details": "Returns The cooldown time in seconds to undelegate from the last timestamp (s)he delegated."
      },
      "delegate(address)": {
        "details": "Stakes for a validator candidate `_consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is not the pool admin. Emits the `Delegated` event."
      },
      "delegateRewards(address[],address)": {
        "details": "Claims the rewards and delegates them to the consensus address. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `RewardClaimed` event and the `Delegated` event."
      },
      "execDeductStakingAmount(address,uint256)": {
        "details": "Deducts from staking amount of the validator `_consensusAddr` for `_amount`. Requirements: - The method caller must be validator contract. Emits the event `Unstaked`."
      },
      "execDeprecatePools(address[],uint256)": {
        "details": "Deprecates the pool. - Deduct self-staking amount of the pool admin to zero. - Transfer the deducted amount to the pool admin. - Deactivate the pool admin address in the mapping of active pool admins Requirements: - The method caller is validator contract. Emits the event `PoolsDeprecated` and `Unstaked` events. Emits the event `StakingAmountTransferFailed` if the contract cannot transfer RON back to the pool admin."
      },
      "execRecordRewards(address[],uint256[],uint256)": {
        "details": "Records the amount of rewards `_rewards` for the pools `_consensusAddrs`. Requirements: - The method caller must be validator contract. Emits the event `PoolsUpdated` once the contract recorded the rewards successfully. Emits the event `PoolsUpdateFailed` once the input array lengths are not equal. Emits the event `PoolsUpdateConflicted` when there are some pools which already updated in the period. Note: This method should be called once at the period ending."
      },
      "getCommissionRateRange()": {
        "details": "Returns the commission rate range that the candidate can set."
      },
      "getContract(uint8)": {
        "details": "Returns the address of a contract with a specific role. Throws an error if no contract is set for the specified role.",
        "params": {
          "contractType": "The role of the contract to retrieve."
        },
        "returns": {
          "contract_": "The address of the contract with the specified role."
        }
      },
      "getManySelfStakings(address[])": {
        "details": "Returns the self-staking amounts of the pools."
      },
      "getManyStakingAmounts(address[],address[])": {
        "details": "Returns the staking amounts of the users."
      },
      "getManyStakingTotals(address[])": {
        "details": "Returns the total staking amounts of all users for the pools `_poolAddrs`."
      },
      "getPoolAddressOf(address)": {
        "details": "Returns the consensus address corresponding to the pool admin."
      },
      "getPoolDetail(address)": {
        "details": "Returns the staking pool detail."
      },
      "getReward(address,address)": {
        "details": "Returns the reward amount that user claimable."
      },
      "getRewards(address,address[])": {
        "details": "Returns the claimable reward of the user `_user`."
      },
      "getStakingAmount(address,address)": {
        "details": "Returns the staking amount of an user."
      },
      "getStakingTotal(address)": {
        "details": "Returns the total staking amount of all users for a pool."
      },
      "initialize(address,uint256,uint256,uint256,uint256)": {
        "details": "Initializes the contract storage."
      },
      "isAdminOfActivePool(address)": {
        "details": "Returns whether the `_poolAdminAddr` is currently active."
      },
      "minValidatorStakingAmount()": {
        "details": "Returns the minimum threshold for being a validator candidate."
      },
      "redelegate(address,address,uint256)": {
        "details": "Unstakes an amount of RON from the `_consensusAddrSrc` and stake for `_consensusAddrDst`. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `Undelegated` event and the `Delegated` event."
      },
      "requestEmergencyExit(address)": {
        "details": "Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin."
      },
      "requestRenounce(address)": {
        "details": "Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin."
      },
      "requestUpdateCommissionRate(address,uint256,uint256)": {
        "details": "Pool admin requests update validator commission rate. The request will be forwarded to the candidate manager contract, and the value is getting updated in {ICandidateManager-execRequestUpdateCommissionRate}. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `_effectiveDaysOnwards` must be equal to or larger than the {CandidateManager-_minEffectiveDaysOnwards}. - The `_rate` must be in range of [0_00; 100_00]. Emits the event `CommissionRateUpdated`."
      },
      "setCommissionRateRange(uint256,uint256)": {
        "details": "Sets the commission rate range that a candidate can set. Requirements: - The method caller is admin. Emits the `CommissionRateRangeUpdated` event."
      },
      "setContract(uint8,address)": {
        "details": "Sets the address of a contract with a specific role. Emits the event {ContractUpdated}.",
        "params": {
          "addr": "The address of the contract to set.",
          "contractType": "The role of the contract to set."
        }
      },
      "setCooldownSecsToUndelegate(uint256)": {
        "details": "Sets the cooldown time in seconds to undelegate from the last timestamp (s)he delegated. Requirements: - The method caller is admin. Emits the event `CooldownSecsToUndelegateUpdated`."
      },
      "setMinValidatorStakingAmount(uint256)": {
        "details": "Sets the minimum threshold for being a validator candidate. Requirements: - The method caller is admin. Emits the `MinValidatorStakingAmountUpdated` event."
      },
      "setWaitingSecsToRevoke(uint256)": {
        "details": "Sets the number of seconds that a candidate must wait to be revoked. Requirements: - The method caller is admin. Emits the event `WaitingSecsToRevokeUpdated`."
      },
      "stake(address)": {
        "details": "Self-delegates to the validator candidate `_consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `msg.value` is larger than 0. Emits the event `Staked`."
      },
      "tmp_re_applyValidatorCandidate(address,address,address,uint256)": {
        "details": "This method only work on testnet, to hotfix the applied validator candidate that is failed. TODO: Should remove this method before deploying it on mainnet."
      },
      "undelegate(address,uint256)": {
        "details": "Unstakes from a validator candidate `_consensusAddr` for `_amount`. Requirements: - The method caller is not the pool admin. Emits the `Undelegated` event."
      },
      "unstake(address,uint256)": {
        "details": "Unstakes from the validator candidate `_consensusAddr` for `_amount`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. Emits the event `Unstaked`."
      },
      "waitingSecsToRevoke()": {
        "details": "Returns the number of seconds that a candidate must wait for the renounce request gets affected."
      }
    },
    "events": {
      "CommissionRateRangeUpdated(uint256,uint256)": {
        "details": "Emitted when the commission rate range is updated."
      },
      "ContractUpdated(uint8,address)": {
        "details": "Emitted when a contract is updated."
      },
      "CooldownSecsToUndelegateUpdated(uint256)": {
        "details": "Emitted when the minium number of seconds to undelegate is updated."
      },
      "Delegated(address,address,uint256)": {
        "details": "Emitted when the delegator staked for a validator candidate."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "MinValidatorStakingAmountUpdated(uint256)": {
        "details": "Emitted when the minimum staking amount for being a validator is updated."
      },
      "PoolApproved(address,address)": {
        "details": "Emitted when the validator pool is approved."
      },
      "PoolSharesUpdated(uint256,address,uint256)": {
        "details": "Emitted when the pool shares are updated"
      },
      "PoolsDeprecated(address[])": {
        "details": "Emitted when the validator pool is deprecated."
      },
      "PoolsUpdateConflicted(uint256,address[])": {
        "details": "Emitted when the contract fails when updating the pools that already set"
      },
      "PoolsUpdateFailed(uint256,address[],uint256[])": {
        "details": "Emitted when the contract fails when updating the pools"
      },
      "PoolsUpdated(uint256,address[],uint256[],uint256[])": {
        "details": "Emitted when the pools are updated"
      },
      "RewardClaimed(address,address,uint256)": {
        "details": "Emitted when the user claimed their reward"
      },
      "Staked(address,uint256)": {
        "details": "Emitted when the pool admin staked for themself."
      },
      "StakingAmountDeductFailed(address,address,uint256,uint256)": {
        "details": "Emitted when the staking amount deducted failed, e.g. when the validator gets slashed."
      },
      "StakingAmountTransferFailed(address,address,uint256,uint256)": {
        "details": "Emitted when the staking amount transfer failed."
      },
      "Undelegated(address,address,uint256)": {
        "details": "Emitted when the delegator unstaked from a validator candidate."
      },
      "Unstaked(address,uint256)": {
        "details": "Emitted when the pool admin unstaked the amount of RON from themself."
      },
      "UserRewardUpdated(address,address,uint256)": {
        "details": "Emitted when the fields to calculate pending reward for the user is updated."
      },
      "WaitingSecsToRevokeUpdated(uint256)": {
        "details": "Emitted when the number of seconds that a candidate must wait to be revoked."
      }
    },
    "errors": {
      "ErrAdminOfAnyActivePoolForbidden(address)": [
        {
          "details": "Error of admin of any active pool cannot delegate."
        }
      ],
      "ErrCannotInitTransferRON(address,string)": [
        {
          "details": "Error of cannot transfer RON to specified target."
        }
      ],
      "ErrCannotTransferRON()": [
        {
          "details": "Error of cannot transfer RON."
        }
      ],
      "ErrContractTypeNotFound(uint8)": [
        {
          "details": "Error of invalid role."
        }
      ],
      "ErrDuplicated(bytes4)": [
        {
          "details": "Error thrown when a duplicated element is detected in an array.",
          "params": {
            "msgSig": "The function signature that invoke the error."
          }
        }
      ],
      "ErrInactivePool(address)": [
        {
          "details": "Error of querying inactive pool."
        }
      ],
      "ErrInsufficientBalance(bytes4,uint256,uint256)": [
        {
          "details": "Error of sender has insufficient balance."
        }
      ],
      "ErrInsufficientDelegatingAmount()": [
        {
          "details": "Error of undelegating insufficient amount."
        }
      ],
      "ErrInsufficientStakingAmount()": [
        {
          "details": "Error of insufficient staking amount for unstaking."
        }
      ],
      "ErrInvalidArrays()": [
        {
          "details": "Error of length of input arrays are not of the same."
        }
      ],
      "ErrInvalidCommissionRate()": [
        {
          "details": "Error of setting commission rate exceeds max allowed."
        }
      ],
      "ErrInvalidPoolShare()": [
        {
          "details": "Error of invalid pool share."
        }
      ],
      "ErrOnlyPoolAdminAllowed()": [
        {
          "details": "Error of no one is allowed to call but the pool's admin."
        }
      ],
      "ErrPoolAdminForbidden()": [
        {
          "details": "Error of pool admin is not allowed to call."
        }
      ],
      "ErrRecipientRevert(bytes4)": [
        {
          "details": "Error of recipient not accepting RON when transfer RON."
        }
      ],
      "ErrStakingAmountLeft()": [
        {
          "details": "Error of invalid staking amount left after deducted."
        }
      ],
      "ErrThreeInteractionAddrsNotEqual()": [
        {
          "details": "Error of three interaction addresses must be of the same in applying for validator candidate."
        }
      ],
      "ErrUnauthorized(bytes4,uint8)": [
        {
          "details": "Error indicating that the caller is unauthorized to perform a specific function.",
          "params": {
            "expectedRole": "The role required to perform the function.",
            "msgSig": "The function signature (bytes4) that the caller is unauthorized to perform."
          }
        }
      ],
      "ErrUndelegateTooEarly()": [
        {
          "details": "Error of undelegating too early."
        }
      ],
      "ErrUndelegateZeroAmount()": [
        {
          "details": "Error of undelegating zero amount."
        }
      ],
      "ErrUnexpectedInternalCall(bytes4,uint8,address)": [
        {
          "details": "Error indicating that the caller is unauthorized to perform a specific function.",
          "params": {
            "actual": "The actual address that called to the function.",
            "expectedContractType": "The contract type required to perform the function.",
            "msgSig": "The function signature (bytes4)."
          }
        }
      ],
      "ErrUnstakeTooEarly()": [
        {
          "details": "Error of unstaking too early."
        }
      ],
      "ErrUnstakeZeroAmount()": [
        {
          "details": "Error of unstaking zero amount."
        }
      ],
      "ErrZeroCodeContract(address)": [
        {
          "details": "Error of set to non-contract."
        }
      ],
      "ErrZeroValue()": [
        {
          "details": "Error of receiving zero message value."
        }
      ]
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ErrAdminOfAnyActivePoolForbidden\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"extraInfo\",\"type\":\"string\"}],\"name\":\"ErrCannotInitTransferRON\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrCannotTransferRON\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"ErrContractTypeNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrDuplicated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"}],\"name\":\"ErrInactivePool\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sendAmount\",\"type\":\"uint256\"}],\"name\":\"ErrInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInsufficientDelegatingAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInsufficientStakingAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidArrays\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidCommissionRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidPoolShare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrOnlyPoolAdminAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrPoolAdminForbidden\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrRecipientRevert\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrStakingAmountLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrThreeInteractionAddrsNotEqual\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"enum RoleAccess\",\"name\":\"expectedRole\",\"type\":\"uint8\"}],\"name\":\"ErrUnauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUndelegateTooEarly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUndelegateZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"enum ContractType\",\"name\":\"expectedContractType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"ErrUnexpectedInternalCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUnstakeTooEarly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUnstakeZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ErrZeroCodeContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRate\",\"type\":\"uint256\"}],\"name\":\"CommissionRateRangeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minSecs\",\"type\":\"uint256\"}],\"name\":\"CooldownSecsToUndelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consensuAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Delegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"MinValidatorStakingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"PoolApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PoolSharesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"validator\",\"type\":\"address[]\"}],\"name\":\"PoolsDeprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"poolAddrs\",\"type\":\"address[]\"}],\"name\":\"PoolsUpdateConflicted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"poolAddrs\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"name\":\"PoolsUpdateFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"poolAddrs\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"aRps\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"PoolsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consensuAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"StakingAmountDeductFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"StakingAmountTransferFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consensuAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Undelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consensuAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debited\",\"type\":\"uint256\"}],\"name\":\"UserRewardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"WaitingSecsToRevokeUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADDITION_GAS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERIOD_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidateAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasuryAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commissionRate\",\"type\":\"uint256\"}],\"name\":\"applyValidatorCandidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_consensusAddrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkUndelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_consensusAddrList\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownSecsToUndelegate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_consensusAddrList\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_consensusAddrDst\",\"type\":\"address\"}],\"name\":\"delegateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"execDeductStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_actualDeductingAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_newPeriod\",\"type\":\"uint256\"}],\"name\":\"execDeprecatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_consensusAddrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"execRecordRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommissionRateRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"getManySelfStakings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_selfStakings\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_poolAddrs\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_userList\",\"type\":\"address[]\"}],\"name\":\"getManyStakingAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_stakingAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_poolList\",\"type\":\"address[]\"}],\"name\":\"getManyStakingTotals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_stakingAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAdminAddr\",\"type\":\"address\"}],\"name\":\"getPoolAddressOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddr\",\"type\":\"address\"}],\"name\":\"getPoolDetail\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_poolAddrList\",\"type\":\"address[]\"}],\"name\":\"getRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_rewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddr\",\"type\":\"address\"}],\"name\":\"getStakingTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__validatorContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__minValidatorStakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__maxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__cooldownSecsToUndelegate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__waitingSecsToRevoke\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAdminAddr\",\"type\":\"address\"}],\"name\":\"isAdminOfActivePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minValidatorStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddrSrc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_consensusAddrDst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"requestEmergencyExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"requestRenounce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveDaysOnwards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commissionRate\",\"type\":\"uint256\"}],\"name\":\"requestUpdateCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxRate\",\"type\":\"uint256\"}],\"name\":\"setCommissionRateRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cooldownSecs\",\"type\":\"uint256\"}],\"name\":\"setCooldownSecsToUndelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"setMinValidatorStakingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_secs\",\"type\":\"uint256\"}],\"name\":\"setWaitingSecsToRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidateAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasuryAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commissionRate\",\"type\":\"uint256\"}],\"name\":\"tmp_re_applyValidatorCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitingSecsToRevoke\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ErrAdminOfAnyActivePoolForbidden(address)\":[{\"details\":\"Error of admin of any active pool cannot delegate.\"}],\"ErrCannotInitTransferRON(address,string)\":[{\"details\":\"Error of cannot transfer RON to specified target.\"}],\"ErrCannotTransferRON()\":[{\"details\":\"Error of cannot transfer RON.\"}],\"ErrContractTypeNotFound(uint8)\":[{\"details\":\"Error of invalid role.\"}],\"ErrDuplicated(bytes4)\":[{\"details\":\"Error thrown when a duplicated element is detected in an array.\",\"params\":{\"msgSig\":\"The function signature that invoke the error.\"}}],\"ErrInactivePool(address)\":[{\"details\":\"Error of querying inactive pool.\"}],\"ErrInsufficientBalance(bytes4,uint256,uint256)\":[{\"details\":\"Error of sender has insufficient balance.\"}],\"ErrInsufficientDelegatingAmount()\":[{\"details\":\"Error of undelegating insufficient amount.\"}],\"ErrInsufficientStakingAmount()\":[{\"details\":\"Error of insufficient staking amount for unstaking.\"}],\"ErrInvalidArrays()\":[{\"details\":\"Error of length of input arrays are not of the same.\"}],\"ErrInvalidCommissionRate()\":[{\"details\":\"Error of setting commission rate exceeds max allowed.\"}],\"ErrInvalidPoolShare()\":[{\"details\":\"Error of invalid pool share.\"}],\"ErrOnlyPoolAdminAllowed()\":[{\"details\":\"Error of no one is allowed to call but the pool's admin.\"}],\"ErrPoolAdminForbidden()\":[{\"details\":\"Error of pool admin is not allowed to call.\"}],\"ErrRecipientRevert(bytes4)\":[{\"details\":\"Error of recipient not accepting RON when transfer RON.\"}],\"ErrStakingAmountLeft()\":[{\"details\":\"Error of invalid staking amount left after deducted.\"}],\"ErrThreeInteractionAddrsNotEqual()\":[{\"details\":\"Error of three interaction addresses must be of the same in applying for validator candidate.\"}],\"ErrUnauthorized(bytes4,uint8)\":[{\"details\":\"Error indicating that the caller is unauthorized to perform a specific function.\",\"params\":{\"expectedRole\":\"The role required to perform the function.\",\"msgSig\":\"The function signature (bytes4) that the caller is unauthorized to perform.\"}}],\"ErrUndelegateTooEarly()\":[{\"details\":\"Error of undelegating too early.\"}],\"ErrUndelegateZeroAmount()\":[{\"details\":\"Error of undelegating zero amount.\"}],\"ErrUnexpectedInternalCall(bytes4,uint8,address)\":[{\"details\":\"Error indicating that the caller is unauthorized to perform a specific function.\",\"params\":{\"actual\":\"The actual address that called to the function.\",\"expectedContractType\":\"The contract type required to perform the function.\",\"msgSig\":\"The function signature (bytes4).\"}}],\"ErrUnstakeTooEarly()\":[{\"details\":\"Error of unstaking too early.\"}],\"ErrUnstakeZeroAmount()\":[{\"details\":\"Error of unstaking zero amount.\"}],\"ErrZeroCodeContract(address)\":[{\"details\":\"Error of set to non-contract.\"}],\"ErrZeroValue()\":[{\"details\":\"Error of receiving zero message value.\"}]},\"events\":{\"CommissionRateRangeUpdated(uint256,uint256)\":{\"details\":\"Emitted when the commission rate range is updated.\"},\"ContractUpdated(uint8,address)\":{\"details\":\"Emitted when a contract is updated.\"},\"CooldownSecsToUndelegateUpdated(uint256)\":{\"details\":\"Emitted when the minium number of seconds to undelegate is updated.\"},\"Delegated(address,address,uint256)\":{\"details\":\"Emitted when the delegator staked for a validator candidate.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MinValidatorStakingAmountUpdated(uint256)\":{\"details\":\"Emitted when the minimum staking amount for being a validator is updated.\"},\"PoolApproved(address,address)\":{\"details\":\"Emitted when the validator pool is approved.\"},\"PoolSharesUpdated(uint256,address,uint256)\":{\"details\":\"Emitted when the pool shares are updated\"},\"PoolsDeprecated(address[])\":{\"details\":\"Emitted when the validator pool is deprecated.\"},\"PoolsUpdateConflicted(uint256,address[])\":{\"details\":\"Emitted when the contract fails when updating the pools that already set\"},\"PoolsUpdateFailed(uint256,address[],uint256[])\":{\"details\":\"Emitted when the contract fails when updating the pools\"},\"PoolsUpdated(uint256,address[],uint256[],uint256[])\":{\"details\":\"Emitted when the pools are updated\"},\"RewardClaimed(address,address,uint256)\":{\"details\":\"Emitted when the user claimed their reward\"},\"Staked(address,uint256)\":{\"details\":\"Emitted when the pool admin staked for themself.\"},\"StakingAmountDeductFailed(address,address,uint256,uint256)\":{\"details\":\"Emitted when the staking amount deducted failed, e.g. when the validator gets slashed.\"},\"StakingAmountTransferFailed(address,address,uint256,uint256)\":{\"details\":\"Emitted when the staking amount transfer failed.\"},\"Undelegated(address,address,uint256)\":{\"details\":\"Emitted when the delegator unstaked from a validator candidate.\"},\"Unstaked(address,uint256)\":{\"details\":\"Emitted when the pool admin unstaked the amount of RON from themself.\"},\"UserRewardUpdated(address,address,uint256)\":{\"details\":\"Emitted when the fields to calculate pending reward for the user is updated.\"},\"WaitingSecsToRevokeUpdated(uint256)\":{\"details\":\"Emitted when the number of seconds that a candidate must wait to be revoked.\"}},\"kind\":\"dev\",\"methods\":{\"applyValidatorCandidate(address,address,address,uint256)\":{\"details\":\"Proposes a candidate to become a validator. Requirements: - The method caller is able to receive RON. - The treasury is able to receive RON. - The amount is larger than or equal to the minimum validator staking amount `minValidatorStakingAmount()`. Emits the event `PoolApproved`.\",\"params\":{\"_candidateAdmin\":\"the candidate admin will be stored in the validator contract, used for calling function that affects to its candidate, e.g. scheduling maintenance.\"}},\"bulkUndelegate(address[],uint256[])\":{\"details\":\"Bulk unstakes from a list of candidates. Requirements: - The method caller is not the pool admin. Emits the events `Undelegated`.\"},\"claimRewards(address[])\":{\"details\":\"Claims the reward of method caller. Emits the `RewardClaimed` event.\"},\"cooldownSecsToUndelegate()\":{\"details\":\"Returns The cooldown time in seconds to undelegate from the last timestamp (s)he delegated.\"},\"delegate(address)\":{\"details\":\"Stakes for a validator candidate `_consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is not the pool admin. Emits the `Delegated` event.\"},\"delegateRewards(address[],address)\":{\"details\":\"Claims the rewards and delegates them to the consensus address. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `RewardClaimed` event and the `Delegated` event.\"},\"execDeductStakingAmount(address,uint256)\":{\"details\":\"Deducts from staking amount of the validator `_consensusAddr` for `_amount`. Requirements: - The method caller must be validator contract. Emits the event `Unstaked`.\"},\"execDeprecatePools(address[],uint256)\":{\"details\":\"Deprecates the pool. - Deduct self-staking amount of the pool admin to zero. - Transfer the deducted amount to the pool admin. - Deactivate the pool admin address in the mapping of active pool admins Requirements: - The method caller is validator contract. Emits the event `PoolsDeprecated` and `Unstaked` events. Emits the event `StakingAmountTransferFailed` if the contract cannot transfer RON back to the pool admin.\"},\"execRecordRewards(address[],uint256[],uint256)\":{\"details\":\"Records the amount of rewards `_rewards` for the pools `_consensusAddrs`. Requirements: - The method caller must be validator contract. Emits the event `PoolsUpdated` once the contract recorded the rewards successfully. Emits the event `PoolsUpdateFailed` once the input array lengths are not equal. Emits the event `PoolsUpdateConflicted` when there are some pools which already updated in the period. Note: This method should be called once at the period ending.\"},\"getCommissionRateRange()\":{\"details\":\"Returns the commission rate range that the candidate can set.\"},\"getContract(uint8)\":{\"details\":\"Returns the address of a contract with a specific role. Throws an error if no contract is set for the specified role.\",\"params\":{\"contractType\":\"The role of the contract to retrieve.\"},\"returns\":{\"contract_\":\"The address of the contract with the specified role.\"}},\"getManySelfStakings(address[])\":{\"details\":\"Returns the self-staking amounts of the pools.\"},\"getManyStakingAmounts(address[],address[])\":{\"details\":\"Returns the staking amounts of the users.\"},\"getManyStakingTotals(address[])\":{\"details\":\"Returns the total staking amounts of all users for the pools `_poolAddrs`.\"},\"getPoolAddressOf(address)\":{\"details\":\"Returns the consensus address corresponding to the pool admin.\"},\"getPoolDetail(address)\":{\"details\":\"Returns the staking pool detail.\"},\"getReward(address,address)\":{\"details\":\"Returns the reward amount that user claimable.\"},\"getRewards(address,address[])\":{\"details\":\"Returns the claimable reward of the user `_user`.\"},\"getStakingAmount(address,address)\":{\"details\":\"Returns the staking amount of an user.\"},\"getStakingTotal(address)\":{\"details\":\"Returns the total staking amount of all users for a pool.\"},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"details\":\"Initializes the contract storage.\"},\"isAdminOfActivePool(address)\":{\"details\":\"Returns whether the `_poolAdminAddr` is currently active.\"},\"minValidatorStakingAmount()\":{\"details\":\"Returns the minimum threshold for being a validator candidate.\"},\"redelegate(address,address,uint256)\":{\"details\":\"Unstakes an amount of RON from the `_consensusAddrSrc` and stake for `_consensusAddrDst`. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `Undelegated` event and the `Delegated` event.\"},\"requestEmergencyExit(address)\":{\"details\":\"Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin.\"},\"requestRenounce(address)\":{\"details\":\"Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin.\"},\"requestUpdateCommissionRate(address,uint256,uint256)\":{\"details\":\"Pool admin requests update validator commission rate. The request will be forwarded to the candidate manager contract, and the value is getting updated in {ICandidateManager-execRequestUpdateCommissionRate}. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `_effectiveDaysOnwards` must be equal to or larger than the {CandidateManager-_minEffectiveDaysOnwards}. - The `_rate` must be in range of [0_00; 100_00]. Emits the event `CommissionRateUpdated`.\"},\"setCommissionRateRange(uint256,uint256)\":{\"details\":\"Sets the commission rate range that a candidate can set. Requirements: - The method caller is admin. Emits the `CommissionRateRangeUpdated` event.\"},\"setContract(uint8,address)\":{\"details\":\"Sets the address of a contract with a specific role. Emits the event {ContractUpdated}.\",\"params\":{\"addr\":\"The address of the contract to set.\",\"contractType\":\"The role of the contract to set.\"}},\"setCooldownSecsToUndelegate(uint256)\":{\"details\":\"Sets the cooldown time in seconds to undelegate from the last timestamp (s)he delegated. Requirements: - The method caller is admin. Emits the event `CooldownSecsToUndelegateUpdated`.\"},\"setMinValidatorStakingAmount(uint256)\":{\"details\":\"Sets the minimum threshold for being a validator candidate. Requirements: - The method caller is admin. Emits the `MinValidatorStakingAmountUpdated` event.\"},\"setWaitingSecsToRevoke(uint256)\":{\"details\":\"Sets the number of seconds that a candidate must wait to be revoked. Requirements: - The method caller is admin. Emits the event `WaitingSecsToRevokeUpdated`.\"},\"stake(address)\":{\"details\":\"Self-delegates to the validator candidate `_consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `msg.value` is larger than 0. Emits the event `Staked`.\"},\"tmp_re_applyValidatorCandidate(address,address,address,uint256)\":{\"details\":\"This method only work on testnet, to hotfix the applied validator candidate that is failed. TODO: Should remove this method before deploying it on mainnet.\"},\"undelegate(address,uint256)\":{\"details\":\"Unstakes from a validator candidate `_consensusAddr` for `_amount`. Requirements: - The method caller is not the pool admin. Emits the `Undelegated` event.\"},\"unstake(address,uint256)\":{\"details\":\"Unstakes from the validator candidate `_consensusAddr` for `_amount`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. Emits the event `Unstaked`.\"},\"waitingSecsToRevoke()\":{\"details\":\"Returns the number of seconds that a candidate must wait for the renounce request gets affected.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ronin/staking/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=lib/prb-math/\",\":@prb/test/=lib/prb-test/src/\",\":@ronin/contracts/=contracts/\",\":@ronin/test/=test/foundry/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-test/src/\",\":sample-projects/=node_modules/hardhat/sample-projects/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"contracts/extensions/RONTransferHelper.sol\":{\"keccak256\":\"0xdece837caa8da00fe031b8139ada009330b8bef149af12b535913c021ab94d0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11af5018dd76ccfca6c4cfb886019987d88830c02efcec999c02d3e6d907475a\",\"dweb:/ipfs/QmNyEcRDvrCENivjdmw3TxMFDBcQNvEUzHorra7HkERLWf\"]},\"contracts/extensions/TransparentUpgradeableProxyV2.sol\":{\"keccak256\":\"0x6609392ea7d3174439b5715100bee82528fe6e4aff28927d48c27db8475e88c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://370c93bc1e962fcf8eab41d217d901716769f05c51a2cb25aae12abc84e871da\",\"dweb:/ipfs/QmQYL5QrJmXCdi5UN9K7imt1iPm9ydZQm6ifShpt451afd\"]},\"contracts/extensions/collections/HasContracts.sol\":{\"keccak256\":\"0x9e1dceb68827adfb8c8184662f29ab5fe14e292a632878150e3b0b6c61bc1dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8903232a7a609b250a1ff2e9522a2366979652145af74637f9c0089916e3da3\",\"dweb:/ipfs/QmVoxZamJEhjYhr9RKVSAKGzakgqmFLfZXhZcDGor7DZe5\"]},\"contracts/extensions/collections/HasProxyAdmin.sol\":{\"keccak256\":\"0x0916021d04ea0c93c54978dc2fd46575fd2bd867369fbf9ce49f316939ddaf25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e220c59eb50b4e206d0a126f8cd2f7f2aa6865f56a0b4b091149e6928bf97b8\",\"dweb:/ipfs/QmRBk5hhn1w2MghZ8pRfaU1CvgRAZN7nZvxySSPDvkVuGp\"]},\"contracts/extensions/consumers/GlobalConfigConsumer.sol\":{\"keccak256\":\"0x96d6b1ea4c8e126a8c2468683e7513d195f8e05456d85dd8f259ab049347b527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23a7906515d4648b243fb01f8053b1595e8c1c62fa9745b56ed296372da6ebdf\",\"dweb:/ipfs/QmdUjefqn52Hu7bjAKYJMRanPy7fdKqJAtnqSB2793Zhfm\"]},\"contracts/extensions/consumers/PercentageConsumer.sol\":{\"keccak256\":\"0x5dc54a24348c5d614de1b4805dddeab4dda72f9f0636b27bf0ed295fee017dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97f64c7f3522d605c5e8d6d96d568e0b8cb6b2f21cc288d508cbe43b831f5d9\",\"dweb:/ipfs/QmT9hBanREurnngznkfTAhHu4qDQu3F3hPXTzKgKjSWz7r\"]},\"contracts/interfaces/collections/IHasContracts.sol\":{\"keccak256\":\"0x99d8213d857e30d367155abd15dc42730afdfbbac3a22dfb3b95ffea2083a92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03390ff29b496e244faf4eab55565712f0aea5fecdcb915e3c5866ef29d5686d\",\"dweb:/ipfs/QmdGpXn3VSxfNvjFBxfho7rc41JTq5m6bonrfmpzShhRVs\"]},\"contracts/interfaces/consumers/PeriodWrapperConsumer.sol\":{\"keccak256\":\"0xb6777e3c364306eb8d5355583c1aca44de9d351cb40ddf1cea832206d4aad272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f158da03631d0e3c4558a18fc50e7f2416172983cfbb14a158dd4fc7c83c7053\",\"dweb:/ipfs/QmX8Vq2sKEAckrMEN5W5LaUzE7ppdaR7scv8amyV1YEXGG\"]},\"contracts/interfaces/staking/IBaseStaking.sol\":{\"keccak256\":\"0x90517268a0e31147d97772c9ae518caa5eb8c03efe3b369e3c6d5166422f5962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb491a0f017e3426a4c96344e65a1e3f26603759758159c8a75b731029a574d9\",\"dweb:/ipfs/QmTQ6jhx6pzzPdubogP5ktSyrhg5PspbCVaQaeHS4AJDg7\"]},\"contracts/interfaces/staking/ICandidateStaking.sol\":{\"keccak256\":\"0x9bc6ba6d13f00d9928c0add35ee6406906e16ed86207d373460930c0a75e5938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36091a688331967fbfff2890250653dc15906bf0f7bad1fe4019fb7db6c8a44f\",\"dweb:/ipfs/Qme2NLnJHrwa9pWA2aJevECkpgoN83EJFMofcJEhL24DN9\"]},\"contracts/interfaces/staking/IDelegatorStaking.sol\":{\"keccak256\":\"0x6dd71bf0c17a65da0dee49b98e4b038c1dd0e74f5473d03570421ceebd5b7084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4b494d452bdfd70169edbc8fe348ccde87b626fa3eda23af15cf9b4c2287f51\",\"dweb:/ipfs/QmZ1EiHHUWE1ATTSoYs2iKQLw5YTV7zpQ9zBU6SNFUTAFP\"]},\"contracts/interfaces/staking/IRewardPool.sol\":{\"keccak256\":\"0x52349fecb897b3b8288d8732923551382822c0c5fb8db9c6b094d080a16a2129\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67c0c9c2a736e1ba3bf329edef9d7d675dc86a5efe569fe49f9611896acd0667\",\"dweb:/ipfs/Qmc31DL6bovfqbdRb4a3Cqg1Gge8mC82Q43uh2HmS7YGvT\"]},\"contracts/interfaces/staking/IStaking.sol\":{\"keccak256\":\"0xd302d4a78203e277fb95a89de7ae32a3102129d3fbd64fc75f92d18be0443408\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed162378c575055c0dff266b578780d3799613cf7912c0adb7428e35f70231f\",\"dweb:/ipfs/QmbnSRJwU3jee9zcvW12cYRuGpqThtx9zHzpGPQdsp6sNy\"]},\"contracts/interfaces/validator/ICandidateManager.sol\":{\"keccak256\":\"0x97dae7e2ed43c21c48200581501bfa065c7836299306ba2e7f39896c3a22ef2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f26f12846961c93a302c912ef9534948e75d1712e9861361d6e4869067f74e3\",\"dweb:/ipfs/QmaQEiTdfFT9CbQEhMyvrEtPgiQUqdY2hZjAS3LUaVoGns\"]},\"contracts/interfaces/validator/ICoinbaseExecution.sol\":{\"keccak256\":\"0x22f546add63b1b6e62929bdd4052fa032af55ebf50981dc22d208fe53ad1b0a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c058176001fdf5c3568e3bef95dbd0616f29136f6488457bac313b49cf8307\",\"dweb:/ipfs/QmYCxycKBcX815zGkXPDBC3t2CgqJwZNHcvtKA9ssc4fMq\"]},\"contracts/interfaces/validator/IEmergencyExit.sol\":{\"keccak256\":\"0x45161abd1e3db83052a06889a0e3a7a5e7ee3306478601d58ac4ed32ccaa75ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06091b25304096f52e46fa2f5c693e5dcf30697cb4f25e6eac075a7daea2f2cd\",\"dweb:/ipfs/QmQxNvAdqydyWCjQt3gfXXB8a5dAiLZgCdiJQCtM7Ah19b\"]},\"contracts/interfaces/validator/IRoninValidatorSet.sol\":{\"keccak256\":\"0x813f34747aea4dfb53bbc147abf8dbe5999ce73111c2db99bcb3efb4cf75bb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e858204fc0e1f733b3b8482326a52fb150eb6c657881b7f2a7721d52826f7e4f\",\"dweb:/ipfs/QmboahnNNTeXjcELXsWZUq93wyvQQRMbimm27xDta85wEc\"]},\"contracts/interfaces/validator/ISlashingExecution.sol\":{\"keccak256\":\"0xac0b772f2fca9dafd7cc6742f91b442f9f545bf9472185b8d817fe045b680193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eac6d51b093831c768d7ef2b17a01333f4aca4c419a593c8b2690db132a06f4a\",\"dweb:/ipfs/QmYZEfUKfmbREoTukK2sic686yABpFmcQTn3x75kjtVj58\"]},\"contracts/interfaces/validator/info-fragments/ICommonInfo.sol\":{\"keccak256\":\"0x3fdfa86da33b889e5153075ffc028d6b0c607480a96b532fbbbc48ac7bbf27c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c586009b6c57b4e0daf60123bf4b133a91a42a1d803c332ba0bdaecab871f18\",\"dweb:/ipfs/QmUT8bLX8MfVjLBs1pXEYXFob5YtAq9tEGBz3KV1WKac4B\"]},\"contracts/interfaces/validator/info-fragments/IJailingInfo.sol\":{\"keccak256\":\"0x2b1846b05ca1d636299fb929c1bd7b392b236f5e3f7aa3e7eea2c6d57b8836fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db41b9c12cde1d32f060db3b81eeee93a512cf0188aadfa9e262d9cc15714ef8\",\"dweb:/ipfs/QmfJkTv1kpfbHtz2hQiWhBZN1r725YAnZMHo71gmgQ4J43\"]},\"contracts/interfaces/validator/info-fragments/ITimingInfo.sol\":{\"keccak256\":\"0x77b86a68149389fed0eb0c5b8d56f278d3bd103ba64f504697d709b24c3212d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a0c87e2e9c661730fdecd3cacc54a630ac2dfd35218dcbe41b70bb15d16aea2\",\"dweb:/ipfs/QmcLD62ZZ6YVSECvx7515PVXymbP8SRwayZsy6r4NAiPLJ\"]},\"contracts/interfaces/validator/info-fragments/IValidatorInfoV2.sol\":{\"keccak256\":\"0x6823181ac93ea3320e6ebfb456624afda59ac2acb480de5c774783983c8f4749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7ac5190b26cd4d6984da11578842b7b5c5230f5c7acd89ac6194df149f033ef\",\"dweb:/ipfs/QmURqWRZpt5QCJ9dj2EtJToY2Pz7KvTktdfWoTbWhNcGcP\"]},\"contracts/libraries/AddressArrayUtils.sol\":{\"keccak256\":\"0xaf760162653a85d6e1b24df4d33c74076f778470112f421a02050fb981242001\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3a413f290b8e81540bc6feb739bcfbacf56419b2e657bbce5be43826569b4406\",\"dweb:/ipfs/QmWRjGLBXs7WK92oPm51QpjxMYGuMTBx85Pv7QcGbUZE72\"]},\"contracts/libraries/EnumFlags.sol\":{\"keccak256\":\"0xa712f0d1a323ee39f23eb3ee3278b4ec25fe2e536b1ccc629578c66f277c088d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1b05f2717fd40454d68d411ab7bbbf5e3bb8ea6d7f27d335b1338362305904a2\",\"dweb:/ipfs/QmaiGASjWNVyfFzguu5xoKFRcLqGg67DHSd5422b5k6rbb\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xd73170f448c644a47024c7dbcf4afc3cc7ad27f61737c6ea4c3b543ec5cdb7e9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b4af5bb4d7c57d10844b31211dc52762f69c33f99fe90bf8bd4086b0f7ece4da\",\"dweb:/ipfs/Qma1Gtmp2Y5YMxAXS7XpUQHkc4auz95W6CevSLmD5CFrrB\"]},\"contracts/ronin/staking/BaseStaking.sol\":{\"keccak256\":\"0xa1a3e6edfc9d8da5c851de0647c58bc86b0ec2e4a1c041f1b2a73d91b3d69b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee418f34b279f5d44a104940bd501d3136144bb242f1bfa094008c030e8cdd96\",\"dweb:/ipfs/QmVesqqer4TA6RQosYusCNsd2eRnd4gz2LpDpkmT4P69sK\"]},\"contracts/ronin/staking/CandidateStaking.sol\":{\"keccak256\":\"0x4859f479e8659e7c1005ae9dad4e5efc80869e8a87ee0794e90de7bffdde7a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://733d4e274d220b7837bc4c6460f434d7d69cd0689463b1c15ba546c05898ee81\",\"dweb:/ipfs/QmRX16Qh6fqHcXEFxVAPQXSbJ4Un8uFCHHx5zSwqrce28v\"]},\"contracts/ronin/staking/DelegatorStaking.sol\":{\"keccak256\":\"0x26d154ed736d57c1ecc6be99ac33274640039975374584bd4a12b8f53b68cb5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c6c76eb357c0ba8310de9a76a5a8fa9ae7d4892769453c88d74499f2a9fc78\",\"dweb:/ipfs/QmatJjdhCPttwaGmjmi7dRnkJXg83CSjzEroYsk1RmegQR\"]},\"contracts/ronin/staking/RewardCalculation.sol\":{\"keccak256\":\"0x98f330685911b18730cf85223ecf30f4da2ec19dda5608b5d82c6b5e4f222fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8035c595f5e8ec066d22f2b8836278234ea959af92766f87245970a9a50ad1d\",\"dweb:/ipfs/QmbvbbMszhzP2w1Y7NZ1cnMVF9iwLWkotLZ7wweB46S87W\"]},\"contracts/ronin/staking/Staking.sol\":{\"keccak256\":\"0x096cf6e78eba085c42b96318b9e882d469583c8e205e631855cec3b83000180a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a02bb13c715aef8c3ec38c56f7cdf5a79e1450e91ad3696a1de0d8ab4d75d70\",\"dweb:/ipfs/QmXefbGVhnnFntKJDscAsMacf8Ahr9txp7n6tSQ9pG1Cft\"]},\"contracts/utils/CommonErrors.sol\":{\"keccak256\":\"0x22942c8fea2d1ca863ac1f9c1662d714b8ac0856684e36f8aaf19508648c1053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e47ff198edb68a65d65938c67f860c041a4b7f64cff5b101a333869096044b\",\"dweb:/ipfs/QmTFwEY7jPiUSKc3GvYDY7qHqXJzUYCmSjoVrcgFhi8gZz\"]},\"contracts/utils/ContractType.sol\":{\"keccak256\":\"0x7f547a44265f4c4b03d8971f7fc5eaa2e6064ea8cd509c1b761108f9800dab68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://130e3f8353d9f34098fbf2867c3bf812a5184904d0113d55c5c820eb64f2547b\",\"dweb:/ipfs/QmeFSUbPi8fyG1W7kKegFRtCqALjQBXQyVvQ4sjpi6SWH3\"]},\"contracts/utils/DeprecatedSlots.sol\":{\"keccak256\":\"0xe93504aed9f67a6d399475c7162560f2ac4f793fab5b67fe504fc694ac9a2892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66205963116e22bb24d9f2e0c1a38a27c4c0c3cf50693bc5f3177068cba37612\",\"dweb:/ipfs/Qmb1hZg6Df4zLeDMPMH4WZVpyLFe7A4TTBEtR6HHddSohC\"]},\"contracts/utils/IdentityGuard.sol\":{\"keccak256\":\"0x2d0dfcef3636945bc1785c1fa5a05f5203c79cbb81b2eee92a3ac6a2378c2ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e4cedc10e50bfaacdc732eab78768b5e0abbc8336eeaffa15de2a7be90de504\",\"dweb:/ipfs/QmR17AgM71NkH5ZeLpmaRMzPyXAKyhafoK2TZUnLw2z3Mv\"]},\"contracts/utils/RoleAccess.sol\":{\"keccak256\":\"0x7da4631824b53be17e246102ad59458f91f2395710561ac9bface18d35fb2502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070d8254ea4d6fde54ae02e121bb84bdb63a3c5a8513d2d364ad5038f6a95493\",\"dweb:/ipfs/QmfXpp3t8XcGFXewoVRmoQMKJb9vPo95Kj4vsGfNBf7gSH\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6c4477d480bac20d681ade0e712b77ad828acf530a1d5c0abc5fb78068a05a1\",\"dweb:/ipfs/QmdBqsK8CcUceTeWzhHwFDEvKMoHimwtV96Lbim7ZBtCb8\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "nonce": 183833,
  "numDeployments": 2,
  "storageLayout": {
    "storage": [
      {
        "astId": 144913,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 31097,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_accumulatedRps",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PeriodWrapper)8684_storage))"
      },
      {
        "astId": 31105,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_userReward",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserRewardFields)9539_storage))"
      },
      {
        "astId": 31111,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_stakingPool",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(PoolFields)9545_storage)"
      },
      {
        "astId": 31116,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 37112,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______deprecatedValidator",
        "offset": 0,
        "slot": "54",
        "type": "t_address"
      },
      {
        "astId": 29280,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_stakingPool",
        "offset": 0,
        "slot": "55",
        "type": "t_mapping(t_address,t_struct(PoolDetail)9151_storage)"
      },
      {
        "astId": 29283,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_cooldownSecsToUndelegate",
        "offset": 0,
        "slot": "56",
        "type": "t_uint256"
      },
      {
        "astId": 29286,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_waitingSecsToRevoke",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 29291,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_adminOfActivePoolMapping",
        "offset": 0,
        "slot": "58",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 29296,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "59",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 29785,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_minValidatorStakingAmount",
        "offset": 0,
        "slot": "108",
        "type": "t_uint256"
      },
      {
        "astId": 29788,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "109",
        "type": "t_uint256"
      },
      {
        "astId": 29791,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_minCommissionRate",
        "offset": 0,
        "slot": "110",
        "type": "t_uint256"
      },
      {
        "astId": 29796,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "111",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 30552,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "159",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 144650,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_initialized",
        "offset": 0,
        "slot": "209",
        "type": "t_uint8"
      },
      {
        "astId": 144653,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_initializing",
        "offset": 1,
        "slot": "209",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(UserRewardFields)9539_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct IRewardPool.UserRewardFields))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(UserRewardFields)9539_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(PeriodWrapper)8684_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct PeriodWrapperConsumer.PeriodWrapper))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(PeriodWrapper)8684_storage)"
      },
      "t_mapping(t_address,t_struct(PoolDetail)9151_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBaseStaking.PoolDetail)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolDetail)9151_storage"
      },
      "t_mapping(t_address,t_struct(PoolFields)9545_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardPool.PoolFields)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolFields)9545_storage"
      },
      "t_mapping(t_address,t_struct(UserRewardFields)9539_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardPool.UserRewardFields)",
        "numberOfBytes": "32",
        "value": "t_struct(UserRewardFields)9539_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(PeriodWrapper)8684_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PeriodWrapperConsumer.PeriodWrapper)",
        "numberOfBytes": "32",
        "value": "t_struct(PeriodWrapper)8684_storage"
      },
      "t_struct(PeriodWrapper)8684_storage": {
        "encoding": "inplace",
        "label": "struct PeriodWrapperConsumer.PeriodWrapper",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 8681,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "inner",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 8683,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lastPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(PoolDetail)9151_storage": {
        "encoding": "inplace",
        "label": "struct IBaseStaking.PoolDetail",
        "numberOfBytes": "192",
        "members": [
          {
            "astId": 9136,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9138,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "admin",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 9140,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "stakingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9142,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "stakingTotal",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 9146,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "delegatingAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 9150,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lastDelegatingTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ]
      },
      "t_struct(PoolFields)9545_storage": {
        "encoding": "inplace",
        "label": "struct IRewardPool.PoolFields",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 9541,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "aRps",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9544,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "shares",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(PeriodWrapper)8684_storage"
          }
        ]
      },
      "t_struct(UserRewardFields)9539_storage": {
        "encoding": "inplace",
        "label": "struct IRewardPool.UserRewardFields",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 9532,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "debited",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9534,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "aRps",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9536,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lowestAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9538,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lastPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1701579792,
  "userdoc": {
    "version": 1,
    "kind": "user"
  }
}