{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADDITION_GAS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "PERIOD_DURATION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "applyValidatorCandidate",
      "inputs": [
        {
          "name": "candidateAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "treasuryAddr",
          "type": "address",
          "internalType": "address payable"
        },
        {
          "name": "commissionRate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "pubkey",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "proofOfPossession",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "bulkUndelegate",
      "inputs": [
        {
          "name": "consensusAddrs",
          "type": "address[]",
          "internalType": "TConsensus[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [
        {
          "name": "consensusAddrList",
          "type": "address[]",
          "internalType": "TConsensus[]"
        }
      ],
      "outputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cooldownSecsToUndelegate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegate",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "delegateRewards",
      "inputs": [
        {
          "name": "consensusAddrList",
          "type": "address[]",
          "internalType": "TConsensus[]"
        },
        {
          "name": "consensusAddrDst",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execChangeAdminAddress",
      "inputs": [
        {
          "name": "poolAddr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "newAdminAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execDeductStakingAmount",
      "inputs": [
        {
          "name": "poolId",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "actualDeductingAmount_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execDeprecatePools",
      "inputs": [
        {
          "name": "poolIds",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "newPeriod",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execRecordRewards",
      "inputs": [
        {
          "name": "poolIds",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "rewards",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "period",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getCommissionRateRange",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getContract",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        }
      ],
      "outputs": [
        {
          "name": "contract_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManySelfStakings",
      "inputs": [
        {
          "name": "consensusAddrs",
          "type": "address[]",
          "internalType": "TConsensus[]"
        }
      ],
      "outputs": [
        {
          "name": "selfStakings_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManySelfStakingsById",
      "inputs": [
        {
          "name": "poolIds",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "selfStakings_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManyStakingAmounts",
      "inputs": [
        {
          "name": "consensusAddrs",
          "type": "address[]",
          "internalType": "TConsensus[]"
        },
        {
          "name": "userList",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "stakingAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManyStakingAmountsById",
      "inputs": [
        {
          "name": "poolIds",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "userList",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "stakingAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManyStakingTotals",
      "inputs": [
        {
          "name": "consensusAddrs",
          "type": "address[]",
          "internalType": "TConsensus[]"
        }
      ],
      "outputs": [
        {
          "name": "stakingAmounts_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getManyStakingTotalsById",
      "inputs": [
        {
          "name": "poolIds",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "stakingAmounts_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolAddressOf",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolDetail",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [
        {
          "name": "admin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "stakingAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakingTotal",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolDetailById",
      "inputs": [
        {
          "name": "poolId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "admin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "stakingAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakingTotal",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReward",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRewards",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "consensusAddrs",
          "type": "address[]",
          "internalType": "TConsensus[]"
        }
      ],
      "outputs": [
        {
          "name": "rewards_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingAmount",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingTotal",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "__validatorContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "__minValidatorStakingAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "__maxCommissionRate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "__cooldownSecsToUndelegate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "__waitingSecsToRevoke",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initializeV2",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initializeV3",
      "inputs": [
        {
          "name": "__profileContract",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAdminOfActivePool",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minValidatorStakingAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redelegate",
      "inputs": [
        {
          "name": "consensusAddrSrc",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "consensusAddrDst",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestEmergencyExit",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestRenounce",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestUpdateCommissionRate",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "effectiveDaysOnwards",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "commissionRate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setCommissionRateRange",
      "inputs": [
        {
          "name": "minRate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxRate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setContract",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        },
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setCooldownSecsToUndelegate",
      "inputs": [
        {
          "name": "cooldownSecs",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinValidatorStakingAmount",
      "inputs": [
        {
          "name": "threshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setWaitingSecsToRevoke",
      "inputs": [
        {
          "name": "secs",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "undelegate",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unstake",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "waitingSecsToRevoke",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "CommissionRateRangeUpdated",
      "inputs": [
        {
          "name": "minRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "maxRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ContractUpdated",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum ContractType"
        },
        {
          "name": "addr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CooldownSecsToUndelegateUpdated",
      "inputs": [
        {
          "name": "minSecs",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Delegated",
      "inputs": [
        {
          "name": "delegator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "poolId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MinValidatorStakingAmountUpdated",
      "inputs": [
        {
          "name": "threshold",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolApproved",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolSharesUpdated",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsDeprecated",
      "inputs": [
        {
          "name": "validator",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsUpdateConflicted",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddrs",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsUpdateFailed",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddrs",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "rewards",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolsUpdated",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "poolAddrs",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "aRps",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "shares",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardClaimed",
      "inputs": [
        {
          "name": "poolAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Staked",
      "inputs": [
        {
          "name": "poolId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingAmountDeductFailed",
      "inputs": [
        {
          "name": "poolId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "contractBalance",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingAmountTransferFailed",
      "inputs": [
        {
          "name": "poolId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "contractBalance",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Undelegated",
      "inputs": [
        {
          "name": "delegator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "poolId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unstaked",
      "inputs": [
        {
          "name": "poolId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UserRewardUpdated",
      "inputs": [
        {
          "name": "poolAddr",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "debited",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WaitingSecsToRevokeUpdated",
      "inputs": [
        {
          "name": "secs",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ErrAdminOfAnyActivePoolForbidden",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrCannotInitTransferRON",
      "inputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extraInfo",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrCannotTransferRON",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrContractTypeNotFound",
      "inputs": [
        {
          "name": "contractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrDuplicated",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInactivePool",
      "inputs": [
        {
          "name": "consensusAddr",
          "type": "address",
          "internalType": "TConsensus"
        },
        {
          "name": "poolAddr",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInsufficientBalance",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "currentBalance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sendAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrInsufficientDelegatingAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInsufficientStakingAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidArrays",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidCommissionRate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrInvalidPoolShare",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrOnlyPoolAdminAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrPoolAdminForbidden",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrRecipientRevert",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrStakingAmountLeft",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrThreeInteractionAddrsNotEqual",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUnauthorized",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "expectedRole",
          "type": "uint8",
          "internalType": "enum RoleAccess"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUndelegateTooEarly",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUndelegateZeroAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUnexpectedInternalCall",
      "inputs": [
        {
          "name": "msgSig",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "expectedContractType",
          "type": "uint8",
          "internalType": "enum ContractType"
        },
        {
          "name": "actual",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrUnstakeTooEarly",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrUnstakeZeroAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ErrZeroCodeContract",
      "inputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ErrZeroValue",
      "inputs": []
    }
  ],
  "address": "0x1d3a9042588F6C1065d4cA51De234BB29F40Fd23",
  "args": "0x",
  "ast": {
    "absolutePath": "contracts/ronin/staking/Staking.sol",
    "id": 34816,
    "exportedSymbols": {
      "Address": [
        151366
      ],
      "AddressArrayUtils": [
        11022
      ],
      "BaseStaking": [
        32413
      ],
      "CandidateStaking": [
        33257
      ],
      "ContractType": [
        39938
      ],
      "DelegatorStaking": [
        33855
      ],
      "EnumFlags": [
        11271
      ],
      "ErrUnexpectedInternalCall": [
        39802
      ],
      "GlobalConfigConsumer": [
        3600
      ],
      "HasContracts": [
        3544
      ],
      "HasProxyAdmin": [
        3589
      ],
      "HasValidatorDeprecated": [
        39957
      ],
      "IBaseStaking": [
        9425
      ],
      "ICandidateManager": [
        10129
      ],
      "ICandidateManagerCallback": [
        10210
      ],
      "ICandidateStaking": [
        9612
      ],
      "ICoinbaseExecution": [
        10378
      ],
      "ICommonInfo": [
        10597
      ],
      "IDelegatorStaking": [
        9720
      ],
      "IEmergencyExit": [
        10471
      ],
      "IHasContracts": [
        8872
      ],
      "IJailingInfo": [
        10689
      ],
      "IProfile": [
        7563
      ],
      "IRewardPool": [
        9884
      ],
      "IRoninValidatorSet": [
        10492
      ],
      "ISlashingExecution": [
        10542
      ],
      "IStaking": [
        9923
      ],
      "IStakingCallback": [
        9936
      ],
      "ITimingInfo": [
        10748
      ],
      "IValidatorInfoV2": [
        10836
      ],
      "IdentityGuard": [
        40187
      ],
      "Initializable": [
        149901
      ],
      "Math": [
        11850
      ],
      "PercentageConsumer": [
        3606
      ],
      "PeriodWrapperConsumer": [
        8896
      ],
      "RONTransferHelper": [
        791
      ],
      "ReentrancyGuard": [
        150049
      ],
      "RewardCalculation": [
        34565
      ],
      "RoleAccess": [
        40201
      ],
      "Staking": [
        34815
      ],
      "StakingCallback": [
        34871
      ],
      "TConsensus": [
        39657
      ],
      "TConsensusEq": [
        39709
      ],
      "TPoolId": [
        39655
      ],
      "TPoolIdEq": [
        39687
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3132:155",
    "nodes": [
      {
        "id": 34567,
        "nodeType": "PragmaDirective",
        "src": "33:23:155",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 34568,
        "nodeType": "ImportDirective",
        "src": "58:63:155",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34816,
        "sourceUnit": 149902,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34569,
        "nodeType": "ImportDirective",
        "src": "122:34:155",
        "nodes": [],
        "absolutePath": "contracts/libraries/Math.sol",
        "file": "../../libraries/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34816,
        "sourceUnit": 11851,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34570,
        "nodeType": "ImportDirective",
        "src": "157:47:155",
        "nodes": [],
        "absolutePath": "contracts/interfaces/staking/IStaking.sol",
        "file": "../../interfaces/staking/IStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34816,
        "sourceUnit": 9924,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34571,
        "nodeType": "ImportDirective",
        "src": "205:59:155",
        "nodes": [],
        "absolutePath": "contracts/interfaces/validator/IRoninValidatorSet.sol",
        "file": "../../interfaces/validator/IRoninValidatorSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34816,
        "sourceUnit": 10493,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34572,
        "nodeType": "ImportDirective",
        "src": "265:31:155",
        "nodes": [],
        "absolutePath": "contracts/ronin/staking/StakingCallback.sol",
        "file": "./StakingCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34816,
        "sourceUnit": 34872,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34815,
        "nodeType": "ContractDefinition",
        "src": "298:2866:155",
        "nodes": [
          {
            "id": 34585,
            "nodeType": "FunctionDefinition",
            "src": "363:47:155",
            "nodes": [],
            "body": {
              "id": 34584,
              "nodeType": "Block",
              "src": "377:33:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34581,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149900,
                      "src": "383:20:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "383:22:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34583,
                  "nodeType": "ExpressionStatement",
                  "src": "383:22:155"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:2:155"
            },
            "returnParameters": {
              "id": 34580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:155"
            },
            "scope": 34815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34593,
            "nodeType": "FunctionDefinition",
            "src": "414:66:155",
            "nodes": [],
            "body": {
              "id": 34592,
              "nodeType": "Block",
              "src": "478:2:155",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 34588,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39938,
                      "src": "454:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 34589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "467:9:155",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 39930,
                    "src": "454:22:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$39938",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 34590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34587,
                  "name": "onlyContract",
                  "nameLocations": [
                    "441:12:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3432,
                  "src": "441:12:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "441:36:155"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:2:155"
            },
            "returnParameters": {
              "id": 34591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:0:155"
            },
            "scope": 34815,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34601,
            "nodeType": "FunctionDefinition",
            "src": "484:67:155",
            "nodes": [],
            "body": {
              "id": 34600,
              "nodeType": "Block",
              "src": "549:2:155",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 34596,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39938,
                      "src": "525:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 34597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "538:9:155",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 39930,
                    "src": "525:22:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$39938",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 34598,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34595,
                  "name": "onlyContract",
                  "nameLocations": [
                    "512:12:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3432,
                  "src": "512:12:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:36:155"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:2:155"
            },
            "returnParameters": {
              "id": 34599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:155"
            },
            "scope": 34815,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34641,
            "nodeType": "FunctionDefinition",
            "src": "611:526:155",
            "nodes": [],
            "body": {
              "id": 34640,
              "nodeType": "Block",
              "src": "838:299:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34618,
                          "name": "ContractType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39938,
                          "src": "857:12:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                            "typeString": "type(enum ContractType)"
                          }
                        },
                        "id": 34619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "870:9:155",
                        "memberName": "VALIDATOR",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39930,
                        "src": "857:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ContractType_$39938",
                          "typeString": "enum ContractType"
                        }
                      },
                      {
                        "id": 34620,
                        "name": "__validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34604,
                        "src": "881:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ContractType_$39938",
                          "typeString": "enum ContractType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34617,
                      "name": "_setContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "844:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ContractType_$39938_$_t_address_$returns$__$",
                        "typeString": "function (enum ContractType,address)"
                      }
                    },
                    "id": 34621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:57:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34622,
                  "nodeType": "ExpressionStatement",
                  "src": "844:57:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34624,
                        "name": "__minValidatorStakingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34606,
                        "src": "937:27:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34623,
                      "name": "_setMinValidatorStakingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33223,
                      "src": "907:29:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:58:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34626,
                  "nodeType": "ExpressionStatement",
                  "src": "907:58:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "995:1:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 34629,
                        "name": "__maxCommissionRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34608,
                        "src": "998:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34627,
                      "name": "_setCommissionRateRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33256,
                      "src": "971:23:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:47:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34631,
                  "nodeType": "ExpressionStatement",
                  "src": "971:47:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34633,
                        "name": "__cooldownSecsToUndelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34610,
                        "src": "1053:26:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34632,
                      "name": "_setCooldownSecsToUndelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32362,
                      "src": "1024:28:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:56:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34635,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:56:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34637,
                        "name": "__waitingSecsToRevoke",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34612,
                        "src": "1110:21:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34636,
                      "name": "_setWaitingSecsToRevoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32377,
                      "src": "1086:23:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:46:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34639,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:46:155"
                }
              ]
            },
            "documentation": {
              "id": 34602,
              "nodeType": "StructuredDocumentation",
              "src": "555:53:155",
              "text": " @dev Initializes the contract storage."
            },
            "functionSelector": "f92ad219",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34615,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34614,
                  "name": "initializer",
                  "nameLocations": [
                    "826:11:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149821,
                  "src": "826:11:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "826:11:155"
              }
            ],
            "name": "initialize",
            "nameLocation": "620:10:155",
            "parameters": {
              "id": 34613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34604,
                  "mutability": "mutable",
                  "name": "__validatorContract",
                  "nameLocation": "644:19:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34641,
                  "src": "636:27:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34606,
                  "mutability": "mutable",
                  "name": "__minValidatorStakingAmount",
                  "nameLocation": "677:27:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34641,
                  "src": "669:35:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34608,
                  "mutability": "mutable",
                  "name": "__maxCommissionRate",
                  "nameLocation": "718:19:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34641,
                  "src": "710:27:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34610,
                  "mutability": "mutable",
                  "name": "__cooldownSecsToUndelegate",
                  "nameLocation": "751:26:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34641,
                  "src": "743:34:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34612,
                  "mutability": "mutable",
                  "name": "__waitingSecsToRevoke",
                  "nameLocation": "791:21:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34641,
                  "src": "783:29:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:186:155"
            },
            "returnParameters": {
              "id": 34616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:0:155"
            },
            "scope": 34815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34658,
            "nodeType": "FunctionDefinition",
            "src": "1200:162:155",
            "nodes": [],
            "body": {
              "id": 34657,
              "nodeType": "Block",
              "src": "1250:112:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34649,
                          "name": "ContractType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39938,
                          "src": "1269:12:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                            "typeString": "type(enum ContractType)"
                          }
                        },
                        "id": 34650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1282:9:155",
                        "memberName": "VALIDATOR",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39930,
                        "src": "1269:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ContractType_$39938",
                          "typeString": "enum ContractType"
                        }
                      },
                      {
                        "id": 34651,
                        "name": "______deprecatedValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39956,
                        "src": "1293:25:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ContractType_$39938",
                          "typeString": "enum ContractType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34648,
                      "name": "_setContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "1256:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ContractType_$39938_$_t_address_$returns$__$",
                        "typeString": "function (enum ContractType,address)"
                      }
                    },
                    "id": 34652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:63:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34653,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:63:155"
                },
                {
                  "expression": {
                    "id": 34655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1325:32:155",
                    "subExpression": {
                      "id": 34654,
                      "name": "______deprecatedValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39956,
                      "src": "1332:25:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34656,
                  "nodeType": "ExpressionStatement",
                  "src": "1325:32:155"
                }
              ]
            },
            "documentation": {
              "id": 34642,
              "nodeType": "StructuredDocumentation",
              "src": "1141:56:155",
              "text": " @dev Initializes the contract storage V2."
            },
            "functionSelector": "5cd8a76b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "32",
                    "id": 34645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1247:1:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  }
                ],
                "id": 34646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34644,
                  "name": "reinitializer",
                  "nameLocations": [
                    "1233:13:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149854,
                  "src": "1233:13:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "1233:16:155"
              }
            ],
            "name": "initializeV2",
            "nameLocation": "1209:12:155",
            "parameters": {
              "id": 34643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:155"
            },
            "returnParameters": {
              "id": 34647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:0:155"
            },
            "scope": 34815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34674,
            "nodeType": "FunctionDefinition",
            "src": "1425:139:155",
            "nodes": [],
            "body": {
              "id": 34673,
              "nodeType": "Block",
              "src": "1500:64:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34668,
                          "name": "ContractType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39938,
                          "src": "1519:12:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                            "typeString": "type(enum ContractType)"
                          }
                        },
                        "id": 34669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1532:7:155",
                        "memberName": "PROFILE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39937,
                        "src": "1519:20:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ContractType_$39938",
                          "typeString": "enum ContractType"
                        }
                      },
                      {
                        "id": 34670,
                        "name": "__profileContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34661,
                        "src": "1541:17:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ContractType_$39938",
                          "typeString": "enum ContractType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34667,
                      "name": "_setContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "1506:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ContractType_$39938_$_t_address_$returns$__$",
                        "typeString": "function (enum ContractType,address)"
                      }
                    },
                    "id": 34671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1506:53:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34672,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:53:155"
                }
              ]
            },
            "documentation": {
              "id": 34659,
              "nodeType": "StructuredDocumentation",
              "src": "1366:56:155",
              "text": " @dev Initializes the contract storage V3."
            },
            "functionSelector": "3101cfcb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "33",
                    "id": 34664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1497:1:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  }
                ],
                "id": 34665,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34663,
                  "name": "reinitializer",
                  "nameLocations": [
                    "1483:13:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149854,
                  "src": "1483:13:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "1483:16:155"
              }
            ],
            "name": "initializeV3",
            "nameLocation": "1434:12:155",
            "parameters": {
              "id": 34662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34661,
                  "mutability": "mutable",
                  "name": "__profileContract",
                  "nameLocation": "1455:17:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34674,
                  "src": "1447:25:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1446:27:155"
            },
            "returnParameters": {
              "id": 34666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:0:155"
            },
            "scope": 34815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34698,
            "nodeType": "FunctionDefinition",
            "src": "1606:229:155",
            "nodes": [],
            "body": {
              "id": 34697,
              "nodeType": "Block",
              "src": "1784:51:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34692,
                        "name": "poolIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34678,
                        "src": "1805:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 34693,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34681,
                        "src": "1814:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 34694,
                        "name": "period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34683,
                        "src": "1823:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34691,
                      "name": "_recordRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34558,
                      "src": "1790:14:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] calldata,uint256)"
                      }
                    },
                    "id": 34695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1790:40:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34696,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:40:155"
                }
              ]
            },
            "baseFunctions": [
              9912
            ],
            "documentation": {
              "id": 34675,
              "nodeType": "StructuredDocumentation",
              "src": "1568:35:155",
              "text": " @inheritdoc IStaking"
            },
            "functionSelector": "acd79c46",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 34687,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39938,
                      "src": "1760:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 34688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1773:9:155",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 39930,
                    "src": "1760:22:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$39938",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 34689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34686,
                  "name": "onlyContract",
                  "nameLocations": [
                    "1747:12:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3432,
                  "src": "1747:12:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "1747:36:155"
              }
            ],
            "name": "execRecordRewards",
            "nameLocation": "1615:17:155",
            "overrides": {
              "id": 34685,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1738:8:155"
            },
            "parameters": {
              "id": 34684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34678,
                  "mutability": "mutable",
                  "name": "poolIds",
                  "nameLocation": "1657:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34698,
                  "src": "1638:26:155",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34676,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1638:7:155",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 34677,
                    "nodeType": "ArrayTypeName",
                    "src": "1638:9:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34681,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "1689:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34698,
                  "src": "1670:26:155",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34679,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1670:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34680,
                    "nodeType": "ArrayTypeName",
                    "src": "1670:9:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34683,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1710:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34698,
                  "src": "1702:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1632:88:155"
            },
            "returnParameters": {
              "id": 34690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:0:155"
            },
            "scope": 34815,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34749,
            "nodeType": "FunctionDefinition",
            "src": "1877:519:155",
            "nodes": [],
            "body": {
              "id": 34748,
              "nodeType": "Block",
              "src": "2050:346:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34713,
                      "name": "actualDeductingAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34711,
                      "src": "2056:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 34715,
                            "name": "_poolDetail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31675,
                            "src": "2102:11:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetail_$9301_storage_$",
                              "typeString": "mapping(address => struct IBaseStaking.PoolDetail storage ref)"
                            }
                          },
                          "id": 34717,
                          "indexExpression": {
                            "id": 34716,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34701,
                            "src": "2114:6:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2102:19:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9301_storage",
                            "typeString": "struct IBaseStaking.PoolDetail storage ref"
                          }
                        },
                        {
                          "id": 34718,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34703,
                          "src": "2123:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PoolDetail_$9301_storage",
                            "typeString": "struct IBaseStaking.PoolDetail storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 34714,
                        "name": "_deductStakingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          34814
                        ],
                        "referencedDeclaration": 34814,
                        "src": "2081:20:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolDetail_$9301_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct IBaseStaking.PoolDetail storage pointer,uint256) returns (uint256)"
                        }
                      },
                      "id": 34719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2081:49:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2056:74:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34721,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:74:155"
                },
                {
                  "assignments": [
                    34723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34723,
                      "mutability": "mutable",
                      "name": "validatorContractAddr",
                      "nameLocation": "2152:21:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 34748,
                      "src": "2136:37:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 34722,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2136:15:155",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34729,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34726,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2184:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2188:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2184:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2176:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 34724,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2176:8:155",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:19:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2136:59:155"
                },
                {
                  "condition": {
                    "id": 34734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2205:62:155",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 34731,
                          "name": "validatorContractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34723,
                          "src": "2221:21:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 34732,
                          "name": "actualDeductingAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34711,
                          "src": "2244:22:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 34730,
                        "name": "_unsafeSendRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2206:14:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address payable,uint256) returns (bool)"
                        }
                      },
                      "id": 34733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2206:61:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34747,
                  "nodeType": "IfStatement",
                  "src": "2201:191:155",
                  "trueBody": {
                    "id": 34746,
                    "nodeType": "Block",
                    "src": "2269:123:155",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 34736,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34701,
                              "src": "2308:6:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34737,
                              "name": "validatorContractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34723,
                              "src": "2316:21:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 34738,
                              "name": "actualDeductingAmount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34711,
                              "src": "2339:22:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 34741,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2371:4:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Staking_$34815",
                                      "typeString": "contract Staking"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Staking_$34815",
                                      "typeString": "contract Staking"
                                    }
                                  ],
                                  "id": 34740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2363:7:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 34739,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2363:7:155",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2363:13:155",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 34743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2377:7:155",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2363:21:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34735,
                            "name": "StakingAmountDeductFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9491,
                            "src": "2282:25:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 34744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2282:103:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34745,
                        "nodeType": "EmitStatement",
                        "src": "2277:108:155"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9922
            ],
            "documentation": {
              "id": 34699,
              "nodeType": "StructuredDocumentation",
              "src": "1839:35:155",
              "text": " @inheritdoc IStaking"
            },
            "functionSelector": "2715805e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 34707,
                      "name": "ContractType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39938,
                      "src": "1985:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                        "typeString": "type(enum ContractType)"
                      }
                    },
                    "id": 34708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1998:9:155",
                    "memberName": "VALIDATOR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 39930,
                    "src": "1985:22:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$39938",
                      "typeString": "enum ContractType"
                    }
                  }
                ],
                "id": 34709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34706,
                  "name": "onlyContract",
                  "nameLocations": [
                    "1972:12:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3432,
                  "src": "1972:12:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "1972:36:155"
              }
            ],
            "name": "execDeductStakingAmount",
            "nameLocation": "1886:23:155",
            "overrides": {
              "id": 34705,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1963:8:155"
            },
            "parameters": {
              "id": 34704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34701,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1923:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34749,
                  "src": "1915:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34703,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1943:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34749,
                  "src": "1935:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1935:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1909:44:155"
            },
            "returnParameters": {
              "id": 34712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34711,
                  "mutability": "mutable",
                  "name": "actualDeductingAmount_",
                  "nameLocation": "2026:22:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34749,
                  "src": "2018:30:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2017:32:155"
            },
            "scope": 34815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34766,
            "nodeType": "FunctionDefinition",
            "src": "2447:164:155",
            "nodes": [],
            "body": {
              "id": 34765,
              "nodeType": "Block",
              "src": "2522:89:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 34758,
                                  "name": "ContractType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39938,
                                  "src": "2566:12:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ContractType_$39938_$",
                                    "typeString": "type(enum ContractType)"
                                  }
                                },
                                "id": 34759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2579:9:155",
                                "memberName": "VALIDATOR",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39930,
                                "src": "2566:22:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ContractType_$39938",
                                  "typeString": "enum ContractType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_ContractType_$39938",
                                  "typeString": "enum ContractType"
                                }
                              ],
                              "id": 34757,
                              "name": "getContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "2554:11:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_enum$_ContractType_$39938_$returns$_t_address_$",
                                "typeString": "function (enum ContractType) view returns (address)"
                              }
                            },
                            "id": 34760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2554:35:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34756,
                          "name": "IRoninValidatorSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10492,
                          "src": "2535:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRoninValidatorSet_$10492_$",
                            "typeString": "type(contract IRoninValidatorSet)"
                          }
                        },
                        "id": 34761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2535:55:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRoninValidatorSet_$10492",
                          "typeString": "contract IRoninValidatorSet"
                        }
                      },
                      "id": 34762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2591:13:155",
                      "memberName": "currentPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10741,
                      "src": "2535:69:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 34763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:71:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34755,
                  "id": 34764,
                  "nodeType": "Return",
                  "src": "2528:78:155"
                }
              ]
            },
            "baseFunctions": [
              34564
            ],
            "documentation": {
              "id": 34750,
              "nodeType": "StructuredDocumentation",
              "src": "2400:44:155",
              "text": " @inheritdoc RewardCalculation"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_currentPeriod",
            "nameLocation": "2456:14:155",
            "overrides": {
              "id": 34752,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2495:8:155"
            },
            "parameters": {
              "id": 34751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2470:2:155"
            },
            "returnParameters": {
              "id": 34755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34766,
                  "src": "2513:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2513:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2512:9:155"
            },
            "scope": 34815,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 34814,
            "nodeType": "FunctionDefinition",
            "src": "2661:501:155",
            "nodes": [],
            "body": {
              "id": 34813,
              "nodeType": "Block",
              "src": "2804:358:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34778,
                      "name": "actualDeductingAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34776,
                      "src": "2810:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 34781,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34770,
                            "src": "2844:5:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                              "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                            }
                          },
                          "id": 34782,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2850:13:155",
                          "memberName": "stakingAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9287,
                          "src": "2844:19:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 34783,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34772,
                          "src": "2865:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 34779,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11850,
                          "src": "2835:4:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$11850_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 34780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2840:3:155",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11745,
                        "src": "2835:8:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 34784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2835:37:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2810:62:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34786,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:62:155"
                },
                {
                  "expression": {
                    "id": 34791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 34787,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34770,
                        "src": "2879:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                          "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                        }
                      },
                      "id": 34789,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2885:13:155",
                      "memberName": "stakingAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9287,
                      "src": "2879:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 34790,
                      "name": "actualDeductingAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34776,
                      "src": "2902:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2879:45:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34792,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:45:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34794,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34770,
                        "src": "2961:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                          "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                        }
                      },
                      {
                        "expression": {
                          "id": 34795,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34770,
                          "src": "2974:5:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                            "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                          }
                        },
                        "id": 34796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2980:19:155",
                        "memberName": "__shadowedPoolAdmin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9284,
                        "src": "2974:25:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 34797,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34770,
                          "src": "3007:5:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                            "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                          }
                        },
                        "id": 34798,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3013:13:155",
                        "memberName": "stakingAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9287,
                        "src": "3007:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 34801,
                              "name": "_pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34770,
                              "src": "3054:5:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                                "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                              }
                            },
                            "id": 34802,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3060:12:155",
                            "memberName": "stakingTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9290,
                            "src": "3054:18:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34803,
                            "name": "actualDeductingAmount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34776,
                            "src": "3074:22:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34799,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11850,
                            "src": "3034:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$11850_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 34800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3039:14:155",
                          "memberName": "subNonNegative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11829,
                          "src": "3034:19:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 34804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3034:63:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                          "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34793,
                      "name": "_changeDelegatingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32412,
                      "src": "2930:23:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolDetail_$9301_storage_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (struct IBaseStaking.PoolDetail storage pointer,address,uint256,uint256)"
                      }
                    },
                    "id": 34805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2930:173:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34806,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:173:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34808,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34770,
                          "src": "3123:5:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                            "typeString": "struct IBaseStaking.PoolDetail storage pointer"
                          }
                        },
                        "id": 34809,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3129:3:155",
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9281,
                        "src": "3123:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34810,
                        "name": "actualDeductingAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34776,
                        "src": "3134:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34807,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9456,
                      "src": "3114:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3114:43:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34812,
                  "nodeType": "EmitStatement",
                  "src": "3109:48:155"
                }
              ]
            },
            "baseFunctions": [
              33208
            ],
            "documentation": {
              "id": 34767,
              "nodeType": "StructuredDocumentation",
              "src": "2615:43:155",
              "text": " @inheritdoc CandidateStaking"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deductStakingAmount",
            "nameLocation": "2670:20:155",
            "overrides": {
              "id": 34774,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2754:8:155"
            },
            "parameters": {
              "id": 34773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34770,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "2715:5:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34814,
                  "src": "2696:24:155",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                    "typeString": "struct IBaseStaking.PoolDetail"
                  },
                  "typeName": {
                    "id": 34769,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34768,
                      "name": "PoolDetail",
                      "nameLocations": [
                        "2696:10:155"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9301,
                      "src": "2696:10:155"
                    },
                    "referencedDeclaration": 9301,
                    "src": "2696:10:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolDetail_$9301_storage_ptr",
                      "typeString": "struct IBaseStaking.PoolDetail"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34772,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2734:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34814,
                  "src": "2726:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:54:155"
            },
            "returnParameters": {
              "id": 34777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34776,
                  "mutability": "mutable",
                  "name": "actualDeductingAmount_",
                  "nameLocation": "2780:22:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 34814,
                  "src": "2772:30:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2771:32:155"
            },
            "scope": 34815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34573,
              "name": "IStaking",
              "nameLocations": [
                "318:8:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9923,
              "src": "318:8:155"
            },
            "id": 34574,
            "nodeType": "InheritanceSpecifier",
            "src": "318:8:155"
          },
          {
            "baseName": {
              "id": 34575,
              "name": "StakingCallback",
              "nameLocations": [
                "328:15:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34871,
              "src": "328:15:155"
            },
            "id": 34576,
            "nodeType": "InheritanceSpecifier",
            "src": "328:15:155"
          },
          {
            "baseName": {
              "id": 34577,
              "name": "Initializable",
              "nameLocations": [
                "345:13:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 149901,
              "src": "345:13:155"
            },
            "id": 34578,
            "nodeType": "InheritanceSpecifier",
            "src": "345:13:155"
          }
        ],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34815,
          149901,
          34871,
          9923,
          9936,
          33855,
          9720,
          33257,
          3606,
          3600,
          9612,
          32413,
          39957,
          9425,
          3544,
          40187,
          8872,
          3589,
          34565,
          9884,
          8896,
          150049,
          791
        ],
        "name": "Staking",
        "nameLocation": "307:7:155",
        "scope": 34816,
        "usedErrors": [
          676,
          681,
          8845,
          9314,
          9317,
          9320,
          9323,
          9328,
          9336,
          9339,
          9498,
          9501,
          9504,
          9507,
          9510,
          9513,
          9516,
          9638,
          9641,
          9644,
          9806,
          10867,
          39759,
          39787,
          39802
        ],
        "usedEvents": [
          8853,
          9306,
          9311,
          9435,
          9442,
          9449,
          9456,
          9463,
          9469,
          9480,
          9491,
          9626,
          9635,
          9752,
          9761,
          9770,
          9784,
          9795,
          9803,
          149765
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 23722890,
  "bytecode": "",
  "chainId": 2021,
  "contractAbsolutePath": "Staking.sol",
  "deployedBytecode": "0x6080604052600436106102f65760003560e01c80636b0916951161018f578063aa15a6fd116100e1578063de981f1b1161008a578063ef9aa66511610064578063ef9aa66514610889578063f92ad219146108a9578063f9f031df146108c957610308565b8063de981f1b14610829578063e22d1c9d14610849578063ea80d67d1461086957610308565b8063c2a672e0116100bb578063c2a672e014610773578063c508700314610793578063d01b8eed146107e457610308565b8063aa15a6fd1461072b578063acd79c461461074b578063af2454291461075e57610308565b8063895ab74211610143578063924f081e1161011d578063924f081e146106cb5780639488e4e9146106eb578063969ffc141461070b57610308565b8063895ab74214610676578063909791dd1461069657806391f8723f146106ab57610308565b806376664b651161017457806376664b6514610616578063865e6fd314610636578063888b9ae91461065657610308565b80636b091695146105d65780636bd8f804146105f657610308565b806342ef3c341161024857806357473447116101fc5780635cd8a76b116101d65780635cd8a76b1461058a5780636558954f1461059f578063679a6e43146105b657610308565b806357473447146105375780635a2ac073146105575780635c19a95c1461057757610308565b8063446850a11161022d578063446850a1146104cf5780634530d202146104ef5780634d99dd161461051757610308565b806342ef3c341461048f578063435628ba146104af57610308565b80631658c86e116102aa5780633101cfcb116102845780633101cfcb146104045780633d8e846e1461042457806342e0c4081461044457610308565b80631658c86e146103b157806326476204146103d15780632715805e146103e457610308565b8063095f6475116102db578063095f647514610351578063097e4a9d1461037e5780630a9313bc1461039e57610308565b806303827884146103135780630682e8fa1461033c57610308565b36610308576008610306816108e9565b005b6008610306816108e9565b34801561031f57600080fd5b506103296104b081565b6040519081526020015b60405180910390f35b34801561034857600080fd5b50603854610329565b34801561035d57600080fd5b5061037161036c366004613d9c565b61095a565b6040516103339190613e44565b34801561038a57600080fd5b50610329610399366004613e6c565b6109e5565b6103066103ac366004613f05565b610ae9565b3480156103bd57600080fd5b506103066103cc366004613fb6565b610cf2565b6103066103df366004613fb6565b610dbc565b3480156103f057600080fd5b506103296103ff366004613fd3565b610e04565b34801561041057600080fd5b5061030661041f366004613fb6565b610e95565b34801561043057600080fd5b5061037161043f366004613fff565b610f7f565b34801561045057600080fd5b5061047f61045f366004613fb6565b6001600160a01b039081166000908152603a602052604090205416151590565b6040519015158152602001610333565b34801561049b57600080fd5b506103716104aa366004614054565b61110d565b3480156104bb57600080fd5b506103716104ca366004613d9c565b611162565b3480156104db57600080fd5b506103716104ea366004614054565b6111da565b3480156104fb57600080fd5b50606e54606d5460408051928352602083019190915201610333565b34801561052357600080fd5b50610306610532366004613fd3565b61121f565b34801561054357600080fd5b50610306610552366004614096565b6112e4565b34801561056357600080fd5b50610371610572366004614054565b6112fa565b610306610585366004613fb6565b611338565b34801561059657600080fd5b506103066113ba565b3480156105ab57600080fd5b506103296201518081565b3480156105c257600080fd5b506103066105d13660046140b8565b6114c0565b3480156105e257600080fd5b506103296105f13660046140d1565b6114d1565b34801561060257600080fd5b5061030661061136600461410a565b611510565b34801561062257600080fd5b506103296106313660046140d1565b6115ed565b34801561064257600080fd5b5061030661065136600461415a565b61162b565b34801561066257600080fd5b506103066106713660046140b8565b611646565b34801561068257600080fd5b50610329610691366004613fb6565b611657565b3480156106a257600080fd5b50606c54610329565b3480156106b757600080fd5b506103716106c6366004614054565b611687565b3480156106d757600080fd5b506103066106e6366004614176565b6116d2565b3480156106f757600080fd5b50610306610706366004613d9c565b6117d3565b34801561071757600080fd5b506103066107263660046140b8565b611992565b34801561073757600080fd5b50610306610746366004613fb6565b6119a3565b6103066107593660046141ab565b611a06565b34801561076a57600080fd5b50603954610329565b34801561077f57600080fd5b5061030661078e366004613fd3565b611a5a565b34801561079f57600080fd5b506107cc6107ae366004613fb6565b6001600160a01b039081166000908152603a60205260409020541690565b6040516001600160a01b039091168152602001610333565b3480156107f057600080fd5b506108046107ff366004613fb6565b611b83565b604080516001600160a01b039094168452602084019290925290820152606001610333565b34801561083557600080fd5b506107cc61084436600461421f565b611bca565b34801561085557600080fd5b5061030661086436600461423a565b611c5e565b34801561087557600080fd5b506103066108843660046140d1565b611df9565b34801561089557600080fd5b506108046108a4366004613fb6565b611e62565b3480156108b557600080fd5b506103066108c4366004614286565b611ea9565b3480156108d557600080fd5b506103296108e4366004614054565b611fe7565b6108f281611bca565b6001600160a01b0316336001600160a01b031614610957576000356001600160e01b03191681336040517f8383e63400000000000000000000000000000000000000000000000000000000815260040161094e939291906142f4565b60405180910390fd5b50565b6060600061099a86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b90506109d98185858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061211b92505050565b9150505b949350505050565b6000600260005403610a395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b600260005581610a4881612223565b336000908152603a60205260409020546001600160a01b031615610a8157604051632fc6bfb160e21b815233600482015260240161094e565b6000610abf86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b90506000610acc856122ec565b9050610ad933838361237d565b6001600055979650505050505050565b600260005403610b3b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b60026000908155338152603a60205260409020546001600160a01b031615610b7857604051632fc6bfb160e21b815233600482015260240161094e565b606d54851180610b895750606e5485105b15610ba757604051631b8454a360e21b815260040160405180910390fd5b600034905060003390506000899050610c3d828c838c8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8f018190048102820181019092528d815292508d91508c9081908401838280828437600081840152601f19601f820116905080830192505050505050508e8a6123af565b6001600160a01b038082166000818152603760208181526040808420600181018054978a166001600160a01b0319988916811790915581548816871782558552603a835290842080549096168517909555929091529052610c9f81848661271e565b826001600160a01b0316826001600160a01b03167ffc1f1e73948cbc47c5b7f90e5601b7daccd9ad7173218486ccc74bdd051d05e860405160405180910390a35050600160005550505050505050505050565b80610cfc81612223565b60376000610d09846122ec565b6001600160a01b03166001600160a01b0316815260200190815260200160002033610d3482826127c9565b610d3e6008611bca565b6001600160a01b031663dd716ad3610d55866122ec565b6039546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610d9e57600080fd5b505af1158015610db2573d6000803e3d6000fd5b5050505050505050565b610dc4612812565b80610dce81612223565b6000610dd9836122ec565b6001600160a01b0381166000908152603760205260409020909150610dff90333461271e565b505050565b60006008610e11816108e9565b6001600160a01b0384166000908152603760205260409020610e33908461284e565b915033610e4081846128eb565b610e8d57604080518481524760208201526001600160a01b0380841692908816917f63701cd972aa3c7f87898aab145c972e52185beab07d6e39380a998d334cf6c8910160405180910390a35b505092915050565b60d154600390610100900460ff16158015610eb7575060d15460ff8083169116105b610f1a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161094e565b60d1805461ffff191660ff831617610100179055610f39600f83612947565b60d1805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b60606000610f8d6008611bca565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fee9190614329565b90508267ffffffffffffffff81111561100957611009614342565b604051908082528060200260200182016040528015611032578160200160208202803683370190505b509150600061107385858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b905060005b8481101561110357600082828151811061109457611094614358565b602002602001015190506110dd8189866110d8858d6001600160a01b0391821660009081526037602090815260408083209390941682526004909201909152205490565b6129eb565b8583815181106110ef576110ef614358565b602090810291909101015250600101611078565b5050509392505050565b6060600061114d84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b905061115881612ae7565b9150505b92915050565b60606111d18585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080890282810182019093528882529093508892508791829185019084908082843760009201919091525061211b92505050565b95945050505050565b6060611218838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612ae792505050565b9392505050565b6002600054036112715760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b6002600090815533906112b390849060379061128c836122ec565b6001600160a01b03166001600160a01b031681526020019081526020016000208385612ba8565b6112bd8183612e41565b6112da57604051635ff7115760e11b815260040160405180910390fd5b5050600160005550565b6112ec612ea2565b6112f68282612f16565b5050565b6060611218838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612f8392505050565b611340612812565b8061134a81612223565b336000908152603a60205260409020546001600160a01b03161561138357604051632fc6bfb160e21b815233600482015260240161094e565b6112f660376000611393856122ec565b6001600160a01b03166001600160a01b031681526020019081526020016000203334613037565b60d154600290610100900460ff161580156113dc575060d15460ff8083169116105b61143f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161094e565b60d1805461ffff191660ff83161761010017905560365461146b906008906001600160a01b0316612947565b603680546001600160a01b031916905560d1805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b6114c8612ea2565b610957816130e6565b60008261115881846114e161311b565b6001600160a01b038086166000908152603760209081526040808320938b1683526004909301905220546129eb565b6002600054036115625760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b60026000558161157181612223565b336115aa8560376000611583836122ec565b6001600160a01b03166001600160a01b031681526020019081526020016000208386612ba8565b6115e1603760006115ba876122ec565b6001600160a01b03166001600160a01b031681526020019081526020016000208285613037565b50506001600055505050565b6000806115f9846122ec565b6001600160a01b0380821660009081526037602090815260408083209388168352600490930190522054909150611158565b611633612ea2565b61163c8161318d565b6112f68282612947565b61164e612ea2565b610957816131dc565b600080611663836122ec565b9050611218816001600160a01b031660009081526037602052604090206003015490565b606060006116c784848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b905061115881612f83565b826116dc81612223565b603760006116e9866122ec565b6001600160a01b03166001600160a01b031681526020019081526020016000203361171482826127c9565b606d548411806117255750606e5484105b1561174357604051631b8454a360e21b815260040160405180910390fd5b61174d6008611bca565b6001600160a01b031663e5125a1d611764886122ec565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024810188905260448101879052606401600060405180830381600087803b1580156117b357600080fd5b505af11580156117c7573d6000803e3d6000fd5b50505050505050505050565b6002600054036118255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b60026000558215806118375750828114155b15611855576040516376081a7b60e11b815260040160405180910390fd5b600033905060008061189987878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b905060005b815181101561195c578585828181106118b9576118b9614358565b90506020020135836118cb9190614384565b92506119548888838181106118e2576118e2614358565b90506020020160208101906118f79190613fb6565b6037600085858151811061190d5761190d614358565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208689898681811061194857611948614358565b90506020020135612ba8565b60010161189e565b506119678383612e41565b61198457604051635ff7115760e11b815260040160405180910390fd5b505060016000555050505050565b61199a612ea2565b61095781613211565b806119ad81612223565b603760006119ba846122ec565b6001600160a01b03166001600160a01b03168152602001908152602001600020336119e582826127c9565b6119ef6008611bca565b6001600160a01b031663cdaa4e81610d55866122ec565b6008611a11816108e9565b611a52868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250879150869050613246565b505050505050565b600260005403611aac5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b600260005581611abb81612223565b81600003611af5576040517f31d9f7d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000611b01856122ec565b6001600160a01b0381166000908152603760205260408120600281015492935091611b2d908790614397565b9050606c54811015611b6b576040517fef0a995700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7682858861366d565b61196784876104b0613772565b600080600080611b92856122ec565b6001600160a01b0390811660009081526037602052604090206001810154600282015460039092015492169790965090945092505050565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115611c0157611c016142ca565b60ff1681526020810191909152604001600020546001600160a01b0316905080611c5957816040517f812281be00000000000000000000000000000000000000000000000000000000815260040161094e91906143aa565b919050565b6008611c69816108e9565b8215611df35760005b83811015611db8576000858583818110611c8e57611c8e614358565b9050602002016020810190611ca39190613fb6565b6001600160a01b03808216600090815260376020908152604080832060018101549094168352603a909152902080546001600160a01b03191690556002810154919250908015611d6757611cf7828261284e565b506001820154611d13906001600160a01b0316826104b0613772565b611d675760018201548254604080518481524760208201526001600160a01b0393841693909216917f7dc5115a5aba081f5a174f56a3d02eea582824783322a4ac03f7bd388f444194910160405180910390a35b6001820154600090611d849085906001600160a01b0316896137e7565b90508015611da9576001830154611da7906001600160a01b0316826104b0613772565b505b84600101945050505050611c72565b507f4f257d3ba23679d338f1d94296086bba5724af341b7fa31aa0ff297bfcdc62d88484604051611dea9291906143b8565b60405180910390a15b50505050565b600f611e04816108e9565b506001600160a01b039182166000818152603760209081526040808320600101805487168452603a90925280832080546001600160a01b03199081169091558254959096169486168517909155928152919091208054909216179055565b6000806000611e9c846001600160a01b03808216600090815260376020526040902060018101546002820154600390920154921693909250565b9250925092509193909250565b60d154610100900460ff1615808015611ec9575060d154600160ff909116105b80611ee35750303b158015611ee3575060d15460ff166001145b611f465760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161094e565b60d1805460ff191660011790558015611f695760d1805461ff0019166101001790555b611f74600887612947565b611f7d856130e6565b611f88600085612f16565b611f91836131dc565b611f9a82613211565b8015611a525760d1805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b600060026000540361203b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161094e565b60026000819055506120883361208385858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209f92505050565b613916565b90506120943382613967565b600160005592915050565b60606120ab600f611bca565b6001600160a01b031663f9226b1a836040518263ffffffff1660e01b81526004016120d69190614406565b600060405180830381865afa1580156120f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261115c9190810190614484565b6060815183511461213f576040516376081a7b60e11b815260040160405180910390fd5b825167ffffffffffffffff81111561215957612159614342565b604051908082528060200260200182016040528015612182578160200160208202803683370190505b50905060005b815181101561221c576121f78482815181106121a6576121a6614358565b60200260200101518483815181106121c0576121c0614358565b60200260200101516001600160a01b0391821660009081526037602090815260408083209390941682526004909201909152205490565b82828151811061220957612209614358565b6020908102919091010152600101612188565b5092915050565b61222d6008611bca565b604051635061f96960e11b81526001600160a01b038381166004830152919091169063a0c3f2d290602401602060405180830381865afa158015612275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122999190614536565b61095757806122a7826122ec565b6040517f2533fce20000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529116602482015260440161094e565b60006122f8600f611bca565b6040517f50a9fc290000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015291909116906350a9fc2990602401602060405180830381865afa158015612359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115c9190614558565b60006123898484613916565b6001600160a01b0383166000908152603760205260409020909150611218908583613037565b6123bd8860006104b0613772565b61241b576040805163338f030160e01b81526001600160a01b038a1660048201526024810191909152600a60448201527f706f6f6c2061646d696e00000000000000000000000000000000000000000000606482015260840161094e565b6124298560006104b0613772565b612487576040805163338f030160e01b81526001600160a01b03871660048201526024810191909152600860448201527f7472656173757279000000000000000000000000000000000000000000000000606482015260840161094e565b606c548110156124aa57604051630a8d7fa760e21b815260040160405180910390fd5b866001600160a01b0316886001600160a01b03161415806124dd5750846001600160a01b0316876001600160a01b031614155b15612514576040517fdc1d04ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160038082526080820190925260009160208201606080368337019050509050888160008151811061254b5761254b614358565b60200260200101906001600160a01b031690816001600160a01b031681525050868160018151811061257f5761257f614358565b60200260200101906001600160a01b031690816001600160a01b0316815250506125a8816139b5565b156125ed576040517f1ad2fb620000000000000000000000000000000000000000000000000000000081526001600160e01b031960003516600482015260240161094e565b506125f86008611bca565b6040517ff883afaf0000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301528881166024830152878116604483015260648201859052919091169063f883afaf90608401600060405180830381600087803b15801561266d57600080fd5b505af1158015612681573d6000803e3d6000fd5b505050506000612691600f611bca565b6040517fb5017aef0000000000000000000000000000000000000000000000000000000081529091506001600160a01b0382169063b5017aef906126e1908b908b908b908b908b906004016145bb565b600060405180830381600087803b1580156126fb57600080fd5b505af115801561270f573d6000803e3d6000fd5b50505050505050505050505050565b828261272a82826127c9565b8285600201600082825461273e9190614384565b925050819055506127648585876002015486896003015461275f9190614384565b613a54565b6001600160a01b03808516600090815260058701602052604090819020429055865490519116907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906127ba9086815260200190565b60405180910390a25050505050565b60018201546001600160a01b038281169116146112f6576040517ff78cb7ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460000361284c576040517fdbf97bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061285e836002015483613a8f565b9050808360020160008282546128749190614397565b90915550506001830154600284015460038501546128a49286926001600160a01b039091169161275f9086613aa5565b82546040518281526001600160a01b03909116907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a292915050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612938576040519150601f19603f3d011682016040523d82523d6000602084013e61293d565b606091505b5090949350505050565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f81111561297d5761297d6142ca565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f8111156129be576129be6142ca565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b6001600160a01b03808516600090815260026020908152604080832093871683529290529081206003810154849003612a26575490506109dd565b6001600160a01b038616600090815260036020818152604080842060018084528286209487015486529390925283209182015483929015612a8b5780546001860154909450612a759085614397565b8560020154612a849190614601565b9250612a93565b846001015493505b8154600090612aa3908690614397565b612aad9089614601565b9050670de0b6b3a7640000612ac28286614384565b612acc9190614618565b8654612ad89190614384565b9b9a5050505050505050505050565b6060815167ffffffffffffffff811115612b0357612b03614342565b604051908082528060200260200182016040528015612b2c578160200160208202803683370190505b50905060005b8251811015612ba25760376000848381518110612b5157612b51614358565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060020154828281518110612b8f57612b8f614358565b6020908102919091010152600101612b32565b50919050565b8282612bb48282613abf565b82600003612bee576040517ff5618d5a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0384166000908152600486016020526040902054831115612c42576040517f34aa9a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612c4e6008611bca565b604051635061f96960e11b81526001600160a01b0389811660048301529192509082169063a0c3f2d290602401602060405180830381865afa158015612c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cbc9190614536565b8015612d4c57506040517f28bde1e10000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301528216906328bde1e19060240160e060405180830381865afa158015612d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d46919061463a565b60a00151155b8015612d7f57506038546001600160a01b03861660009081526005880160205260409020544291612d7c91614384565b10155b15612db6576040517ff19f52bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0385166000908152600487016020526040902054612df49087908790612de4908890614397565b878a6003015461275f9190614397565b85546040518581526001600160a01b03918216918716907f4d10bd049775c77bd7f255195afba5088028ecb3c7c277d393ccff7934f2f92c9060200160405180910390a350505050505050565b600081471015612e98576040517f98c713c00000000000000000000000000000000000000000000000000000000081526001600160e01b03196000351660048201524760248201526044810183905260640161094e565b61121883836128eb565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b0316331461284c576000356001600160e01b03191660016040517f3e523c0000000000000000000000000000000000000000000000000000000000815260040161094e9291906146e2565b612710811180612f2557508082115b15612f4357604051631b8454a360e21b815260040160405180910390fd5b606d819055606e82905560408051838152602081018390527f677752f5bf9541b14288833909e5ec5a478103131c1ec08c4638943be5826c149101610f73565b6060815167ffffffffffffffff811115612f9f57612f9f614342565b604051908082528060200260200182016040528015612fc8578160200160208202803683370190505b50905060005b8251811015612ba257613012838281518110612fec57612fec614358565b60200260200101516001600160a01b031660009081526037602052604090206003015490565b82828151811061302457613024614358565b6020908102919091010152600101612fce565b82826130438282613abf565b6001600160a01b03841660009081526004860160205260409020546130819086908690613071908790614384565b86896003015461275f9190614384565b6001600160a01b03808516600081815260058801602052604090819020429055875490519216917fe5541a6b6103d4fa7e021ed54fad39c66f27a76bd13d374cf6240ae6bd0bb72b906130d79087815260200190565b60405180910390a35050505050565b606c8190556040518181527f372bbdb8d72373b0012f84ee5a11671e5fb72b8bea902ebca93a19cb45d32be2906020016114b5565b60006131276008611bca565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015613164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131889190614329565b905090565b806001600160a01b03163b600003610957576040517f2ff1928c0000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161094e565b60388190556040518181527f4956b65267b8f1e642284bcb5037116c69a9c78d9ca576beeae0974737a4872a906020016114b5565b60398190556040518181527f02be0b73b597f2c0f138aebee162b3b0e25d5b5a26854c15dcf79176e9a1c678906020016114b5565b8351821461328f57807fae52c603227f64e4c6101dde593aa9790a16b3ac77546bd746d758511e9560a58585856040516132829392919061474a565b60405180910390a2611df3565b6000806000806000885167ffffffffffffffff8111156132b1576132b1614342565b6040519080825280602002602001820160405280156132da578160200160208202803683370190505b5090506000895167ffffffffffffffff8111156132f9576132f9614342565b604051908082528060200260200182016040528015613322578160200160208202803683370190505b50905060008a5167ffffffffffffffff81111561334157613341614342565b60405190808252806020026020018201604052801561336a578160200160208202803683370190505b50905060005b8b518110156135d3578b818151811061338b5761338b614358565b6020908102919091018101516001600160a01b038116600090815260038084526040808320603790955290912001549097506001600160a01b03881660009081526001602081815260408084208f855290915290912001549096508a900361342c57868389806001019a508151811061340657613406614358565b60200260200101906001600160a01b031690816001600160a01b031681525050506135cb565b60028101548a111561345a57604080518082019091528681526020018a905260018101869055600281018a90555b6001810154156134a45760018101548c8c8481811061347b5761347b614358565b90506020020135670de0b6b3a76400006134959190614601565b61349f9190614618565b6134a7565b60005b9850888160000160008282546134bd9190614384565b91829055509050856134cf8a85614397565b815181106134df576134df614358565b6020026020010181815250506040518060400160405280826000015481526020018b81525060016000896001600160a01b03166001600160a01b0316815260200190815260200160002060008c8152602001908152602001600020600082015181600001556020820151816001015590505085816001016000018190555080600101600001548489846135729190614397565b8151811061358257613582614358565b6020908102919091010152868d6135998a85614397565b815181106135a9576135a9614358565b60200260200101906001600160a01b031690816001600160a01b031681525050505b600101613370565b50851561361c57858152858b51038b52877fee74f10cc50bf4b7e57fd36be7d46288795f3a9151dae97505b718b392ba14a38260405161361391906147ad565b60405180910390a25b8a511561366057877f0e54e0485f70f0f63bc25889ddbf01ce1269ad6f07fdb2df573a0fbdb4d66f888c8585604051613657939291906147c0565b60405180910390a25b5050505050505050505050565b828261367982826127c9565b846002015483111561369e57604051630a8d7fa760e21b815260040160405180910390fd5b6038546001600160a01b038516600090815260058701602052604090205442916136c791614384565b11156136ff576040517f07b6105200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828560020160008282546137139190614397565b925050819055506137348585876002015486896003015461275f9190614397565b84546040518481526001600160a01b03909116907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75906020016127ba565b60008260000361378b576137886108fc83614384565b91505b6040516001600160a01b03851690839085906000818181858888f193505050503d80600081146137d7576040519150601f19603f3d011682016040523d82523d6000602084013e6137dc565b606091505b509095945050505050565b6001600160a01b0380841660009081526037602090815260408083209386168352600490930190529081205461381f858585846129eb565b9150836001600160a01b0316856001600160a01b03167f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b78460405161386691815260200190565b60405180910390a36001600160a01b038086166000818152600260209081526040808320948916835293815283822082815592825260039052919091206138b09082868580613b08565b60038181018590556001600160a01b03878116600081815260209384526040808220546001870155519081529188169290917faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad910160405180910390a350509392505050565b60008061392161311b565b905060005b8351811015610e8d5761395384828151811061394457613944614358565b602002602001015186846137e7565b61395d9084614384565b9250600101613926565b6139718282612e41565b6112f6576040517f3b97b7700000000000000000000000000000000000000000000000000000000081526001600160e01b031960003516600482015260240161094e565b600081516000036139c857506000919050565b60005b6001835103811015613a4b57600181015b8351811015613a42578381815181106139f7576139f7614358565b60200260200101516001600160a01b0316848381518110613a1a57613a1a614358565b60200260200101516001600160a01b031603613a3a575060019392505050565b6001016139dc565b506001016139cb565b50600092915050565b8354613a6a906001600160a01b03168484613bb3565b60038401556001600160a01b0390911660009081526004909201602052604090912055565b6000818310613a9e5781611218565b5090919050565b6000818311613ab5576000611218565b6112188284614397565b60018201546001600160a01b038083169116036112f6576040517f9feb934700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8284600301541015613b1c57600284018190555b6000613b2c856002015484613a8f565b90506000818660020154613b409190614397565b90508015613baa57600286018290556001870154811115613b8d576040517fa5ca437e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80876001016000016000828254613ba49190614397565b90915550505b50505050505050565b6000613bbd61311b565b6001600160a01b0385166000908152600360205260409020600181015460028201549293509091831115613c31576040518060400160405280613c18886001600160a01b031660009081526037602052604090206003015490565b8152602090810185905281516001850155015160028301555b6001600160a01b038681166000818152600260209081526040808320948a168084529482528083209383526037825280832094835260049094019052918220549091613c7f898988856129eb565b83549091508114613cd1578083556040518181526001600160a01b0389811691908b16907faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad9060200160405180910390a35b613cde8584888a86613b08565b8454600180850191909155600384018790558501548414613d4557886001600160a01b0316867f81faf50e2aaf52eaba2ab841071efb9f6f0850a3e7d008b1336e6001d3d4963c8760010160000154604051613d3c91815260200190565b60405180910390a35b505050505050505050565b60008083601f840112613d6257600080fd5b50813567ffffffffffffffff811115613d7a57600080fd5b6020830191508360208260051b8501011115613d9557600080fd5b9250929050565b60008060008060408587031215613db257600080fd5b843567ffffffffffffffff80821115613dca57600080fd5b613dd688838901613d50565b90965094506020870135915080821115613def57600080fd5b50613dfc87828801613d50565b95989497509550505050565b60008151808452602080850194506020840160005b83811015613e3957815187529582019590820190600101613e1d565b509495945050505050565b6020815260006112186020830184613e08565b6001600160a01b038116811461095757600080fd5b600080600060408486031215613e8157600080fd5b833567ffffffffffffffff811115613e9857600080fd5b613ea486828701613d50565b9094509250506020840135613eb881613e57565b809150509250925092565b60008083601f840112613ed557600080fd5b50813567ffffffffffffffff811115613eed57600080fd5b602083019150836020828501011115613d9557600080fd5b60008060008060008060008060c0898b031215613f2157600080fd5b8835613f2c81613e57565b97506020890135613f3c81613e57565b96506040890135613f4c81613e57565b955060608901359450608089013567ffffffffffffffff80821115613f7057600080fd5b613f7c8c838d01613ec3565b909650945060a08b0135915080821115613f9557600080fd5b50613fa28b828c01613ec3565b999c989b5096995094979396929594505050565b600060208284031215613fc857600080fd5b813561121881613e57565b60008060408385031215613fe657600080fd5b8235613ff181613e57565b946020939093013593505050565b60008060006040848603121561401457600080fd5b833561401f81613e57565b9250602084013567ffffffffffffffff81111561403b57600080fd5b61404786828701613d50565b9497909650939450505050565b6000806020838503121561406757600080fd5b823567ffffffffffffffff81111561407e57600080fd5b61408a85828601613d50565b90969095509350505050565b600080604083850312156140a957600080fd5b50508035926020909101359150565b6000602082840312156140ca57600080fd5b5035919050565b600080604083850312156140e457600080fd5b82356140ef81613e57565b915060208301356140ff81613e57565b809150509250929050565b60008060006060848603121561411f57600080fd5b833561412a81613e57565b9250602084013561413a81613e57565b929592945050506040919091013590565b803560108110611c5957600080fd5b6000806040838503121561416d57600080fd5b6140ef8361414b565b60008060006060848603121561418b57600080fd5b833561419681613e57565b95602085013595506040909401359392505050565b6000806000806000606086880312156141c357600080fd5b853567ffffffffffffffff808211156141db57600080fd5b6141e789838a01613d50565b9097509550602088013591508082111561420057600080fd5b5061420d88828901613d50565b96999598509660400135949350505050565b60006020828403121561423157600080fd5b6112188261414b565b60008060006040848603121561424f57600080fd5b833567ffffffffffffffff81111561426657600080fd5b61427286828701613d50565b909790965060209590950135949350505050565b600080600080600060a0868803121561429e57600080fd5b85356142a981613e57565b97602087013597506040870135966060810135965060800135945092505050565b634e487b7160e01b600052602160045260246000fd5b601081106142f0576142f06142ca565b9052565b6001600160e01b0319841681526060810161431260208301856142e0565b6001600160a01b0383166040830152949350505050565b60006020828403121561433b57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561115c5761115c61436e565b8181038181111561115c5761115c61436e565b6020810161115c82846142e0565b60208082528181018390526000908460408401835b868110156143fb5782356143e081613e57565b6001600160a01b0316825291830191908301906001016143cd565b509695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156144475783516001600160a01b031683529284019291840191600101614422565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561447c5761447c614342565b604052919050565b6000602080838503121561449757600080fd5b825167ffffffffffffffff808211156144af57600080fd5b818501915085601f8301126144c357600080fd5b8151818111156144d5576144d5614342565b8060051b91506144e6848301614453565b818152918301840191848101908884111561450057600080fd5b938501935b8385101561452a578451925061451a83613e57565b8282529385019390850190614505565b98975050505050505050565b60006020828403121561454857600080fd5b8151801515811461121857600080fd5b60006020828403121561456a57600080fd5b815161121881613e57565b6000815180845260005b8181101561459b5760208185018101518683018201520161457f565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525060a060608301526145ef60a0830185614575565b828103608084015261452a8185614575565b808202811582820484141761115c5761115c61436e565b60008261463557634e487b7160e01b600052601260045260246000fd5b500490565b600060e0828403121561464c57600080fd5b60405160e0810181811067ffffffffffffffff8211171561466f5761466f614342565b604052825161467d81613e57565b8152602083015161468d81613e57565b602082015260408301516146a081613e57565b604082015260608301516146b381613e57565b806060830152506080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b6001600160e01b03198316815260408101600b8310614703576147036142ca565b8260208301529392505050565b60008151808452602080850194506020840160005b83811015613e395781516001600160a01b031687529582019590820190600101614725565b60408152600061475d6040830186614710565b82810360208401528381527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84111561479557600080fd5b8360051b808660208401370160200195945050505050565b6020815260006112186020830184614710565b6060815260006147d36060830186614710565b82810360208401526147e58186613e08565b905082810360408401526109d98185613e0856fea264697066735822122058132545133b9c1bea2eb63bcc41a2ef89ed9835e75b5fe33ffc90fbe59c52c964736f6c63430008160033",
  "deployer": "0x31762cdd4Aa65CD6f5F09D7a05a56211720A1168",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "applyValidatorCandidate(address,address,address,uint256,bytes,bytes)": {
        "details": "Proposes a candidate to become a validator. Requirements: - The method caller is able to receive RON. - The treasury is able to receive RON. - The amount is larger than or equal to the minimum validator staking amount `minValidatorStakingAmount()`. Emits the event `PoolApproved`.",
        "params": {
          "candidateAdmin": "the candidate admin will be stored in the validator contract, used for calling function that affects to its candidate, e.g. scheduling maintenance."
        }
      },
      "bulkUndelegate(address[],uint256[])": {
        "details": "Bulk unstakes from a list of candidates. Requirements: - The method caller is not the pool admin. Emits the events `Undelegated`."
      },
      "claimRewards(address[])": {
        "details": "Claims the reward of method caller. Emits the `RewardClaimed` event."
      },
      "cooldownSecsToUndelegate()": {
        "details": "Returns The cooldown time in seconds to undelegate from the last timestamp (s)he delegated."
      },
      "delegate(address)": {
        "details": "Stakes for a validator candidate `_consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is not the pool admin. Emits the `Delegated` event."
      },
      "delegateRewards(address[],address)": {
        "details": "Claims the rewards and delegates them to the consensus address. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `RewardClaimed` event and the `Delegated` event."
      },
      "execChangeAdminAddress(address,address)": {
        "details": "Requirements: - Only Profile contract can call this method."
      },
      "execDeductStakingAmount(address,uint256)": {
        "details": "Deducts from staking amount of the validator `_consensusAddr` for `_amount`. Requirements: - The method caller must be validator contract. Emits the event `Unstaked`."
      },
      "execDeprecatePools(address[],uint256)": {
        "details": "Deprecates the pool. - Deduct self-staking amount of the pool admin to zero. - Transfer the deducted amount to the pool admin. - Deactivate the pool admin address in the mapping of active pool admins Requirements: - The method caller is validator contract. Emits the event `PoolsDeprecated` and `Unstaked` events. Emits the event `StakingAmountTransferFailed` if the contract cannot transfer RON back to the pool admin."
      },
      "execRecordRewards(address[],uint256[],uint256)": {
        "details": "Records the amount of rewards `_rewards` for the pools `_consensusAddrs`. Requirements: - The method caller must be validator contract. Emits the event `PoolsUpdated` once the contract recorded the rewards successfully. Emits the event `PoolsUpdateFailed` once the input array lengths are not equal. Emits the event `PoolsUpdateConflicted` when there are some pools which already updated in the period. Note: This method should be called once at the period ending."
      },
      "getCommissionRateRange()": {
        "details": "Returns the commission rate range that the candidate can set."
      },
      "getContract(uint8)": {
        "details": "Returns the address of a contract with a specific role. Throws an error if no contract is set for the specified role.",
        "params": {
          "contractType": "The role of the contract to retrieve."
        },
        "returns": {
          "contract_": "The address of the contract with the specified role."
        }
      },
      "getManySelfStakings(address[])": {
        "details": "Returns the self-staking amounts of the pools."
      },
      "getManySelfStakingsById(address[])": {
        "details": "Returns the self-staking amounts of the pools."
      },
      "getManyStakingAmounts(address[],address[])": {
        "details": "Returns the staking amounts of the users."
      },
      "getManyStakingTotals(address[])": {
        "details": "Returns the total staking amounts of all users for the pools `_poolAddrs`."
      },
      "getPoolAddressOf(address)": {
        "details": "Returns the consensus address corresponding to the pool admin."
      },
      "getPoolDetail(address)": {
        "details": "Returns the staking pool details."
      },
      "getReward(address,address)": {
        "details": "Returns the reward amount that user claimable."
      },
      "getRewards(address,address[])": {
        "details": "Returns the claimable reward of the user `_user`."
      },
      "getStakingAmount(address,address)": {
        "details": "Returns the staking amount of an user."
      },
      "getStakingTotal(address)": {
        "details": "Returns the total staking amount of all users for a pool."
      },
      "initialize(address,uint256,uint256,uint256,uint256)": {
        "details": "Initializes the contract storage."
      },
      "initializeV2()": {
        "details": "Initializes the contract storage V2."
      },
      "initializeV3(address)": {
        "details": "Initializes the contract storage V3."
      },
      "isAdminOfActivePool(address)": {
        "details": "Returns whether the `admin` is currently active."
      },
      "minValidatorStakingAmount()": {
        "details": "Returns the minimum threshold for being a validator candidate."
      },
      "redelegate(address,address,uint256)": {
        "details": "Unstakes an amount of RON from the `_consensusAddrSrc` and stake for `_consensusAddrDst`. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `Undelegated` event and the `Delegated` event."
      },
      "requestEmergencyExit(address)": {
        "details": "Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin."
      },
      "requestRenounce(address)": {
        "details": "Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin."
      },
      "requestUpdateCommissionRate(address,uint256,uint256)": {
        "details": "Pool admin requests update validator commission rate. The request will be forwarded to the candidate manager contract, and the value is getting updated in {ICandidateManager-execRequestUpdateCommissionRate}. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `_effectiveDaysOnwards` must be equal to or larger than the {CandidateManager-_minEffectiveDaysOnwards}. - The `_rate` must be in range of [0_00; 100_00]. Emits the event `CommissionRateUpdated`."
      },
      "setCommissionRateRange(uint256,uint256)": {
        "details": "Sets the commission rate range that a candidate can set. Requirements: - The method caller is admin. Emits the `CommissionRateRangeUpdated` event."
      },
      "setContract(uint8,address)": {
        "details": "Sets the address of a contract with a specific role. Emits the event {ContractUpdated}.",
        "params": {
          "addr": "The address of the contract to set.",
          "contractType": "The role of the contract to set."
        }
      },
      "setCooldownSecsToUndelegate(uint256)": {
        "details": "Sets the cooldown time in seconds to undelegate from the last timestamp (s)he delegated. Requirements: - The method caller is admin. Emits the event `CooldownSecsToUndelegateUpdated`."
      },
      "setMinValidatorStakingAmount(uint256)": {
        "details": "Sets the minimum threshold for being a validator candidate. Requirements: - The method caller is admin. Emits the `MinValidatorStakingAmountUpdated` event."
      },
      "setWaitingSecsToRevoke(uint256)": {
        "details": "Sets the number of seconds that a candidate must wait to be revoked. Requirements: - The method caller is admin. Emits the event `WaitingSecsToRevokeUpdated`."
      },
      "stake(address)": {
        "details": "Self-delegates to the validator candidate `consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `msg.value` is larger than 0. Emits the event `Staked`."
      },
      "undelegate(address,uint256)": {
        "details": "Unstakes from a validator candidate `_consensusAddr` for `_amount`. Requirements: - The method caller is not the pool admin. Emits the `Undelegated` event."
      },
      "unstake(address,uint256)": {
        "details": "Unstakes from the validator candidate `consensusAddr` for `amount`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. Emits the event `Unstaked`."
      },
      "waitingSecsToRevoke()": {
        "details": "Returns the number of seconds that a candidate must wait for the renounce request gets affected."
      }
    },
    "events": {
      "CommissionRateRangeUpdated(uint256,uint256)": {
        "details": "Emitted when the commission rate range is updated."
      },
      "ContractUpdated(uint8,address)": {
        "details": "Emitted when a contract is updated."
      },
      "CooldownSecsToUndelegateUpdated(uint256)": {
        "details": "Emitted when the minium number of seconds to undelegate is updated."
      },
      "Delegated(address,address,uint256)": {
        "details": "Emitted when the delegator staked for a validator candidate."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "MinValidatorStakingAmountUpdated(uint256)": {
        "details": "Emitted when the minimum staking amount for being a validator is updated."
      },
      "PoolApproved(address,address)": {
        "details": "Emitted when the validator pool is approved."
      },
      "PoolSharesUpdated(uint256,address,uint256)": {
        "details": "Emitted when the pool shares are updated"
      },
      "PoolsDeprecated(address[])": {
        "details": "Emitted when the validator pool is deprecated."
      },
      "PoolsUpdateConflicted(uint256,address[])": {
        "details": "Emitted when the contract fails when updating the pools that already set"
      },
      "PoolsUpdateFailed(uint256,address[],uint256[])": {
        "details": "Emitted when the contract fails when updating the pools"
      },
      "PoolsUpdated(uint256,address[],uint256[],uint256[])": {
        "details": "Emitted when the pools are updated"
      },
      "RewardClaimed(address,address,uint256)": {
        "details": "Emitted when the user claimed their reward"
      },
      "Staked(address,uint256)": {
        "details": "Emitted when the pool admin staked for themself."
      },
      "StakingAmountDeductFailed(address,address,uint256,uint256)": {
        "details": "Emitted when the staking amount deducted failed, e.g. when the validator gets slashed."
      },
      "StakingAmountTransferFailed(address,address,uint256,uint256)": {
        "details": "Emitted when the staking amount transfer failed."
      },
      "Undelegated(address,address,uint256)": {
        "details": "Emitted when the delegator unstaked from a validator candidate."
      },
      "Unstaked(address,uint256)": {
        "details": "Emitted when the pool admin unstaked the amount of RON from themself."
      },
      "UserRewardUpdated(address,address,uint256)": {
        "details": "Emitted when the fields to calculate pending reward for the user is updated."
      },
      "WaitingSecsToRevokeUpdated(uint256)": {
        "details": "Emitted when the number of seconds that a candidate must wait to be revoked."
      }
    },
    "errors": {
      "ErrAdminOfAnyActivePoolForbidden(address)": [
        {
          "details": "Error of admin of any active pool cannot delegate."
        }
      ],
      "ErrCannotInitTransferRON(address,string)": [
        {
          "details": "Error of cannot transfer RON to specified target."
        }
      ],
      "ErrCannotTransferRON()": [
        {
          "details": "Error of cannot transfer RON."
        }
      ],
      "ErrContractTypeNotFound(uint8)": [
        {
          "details": "Error of invalid role."
        }
      ],
      "ErrDuplicated(bytes4)": [
        {
          "details": "Error thrown when a duplicated element is detected in an array.",
          "params": {
            "msgSig": "The function signature that invoke the error."
          }
        }
      ],
      "ErrInactivePool(address,address)": [
        {
          "details": "Error of querying inactive pool."
        }
      ],
      "ErrInsufficientBalance(bytes4,uint256,uint256)": [
        {
          "details": "Error of sender has insufficient balance."
        }
      ],
      "ErrInsufficientDelegatingAmount()": [
        {
          "details": "Error of undelegating insufficient amount."
        }
      ],
      "ErrInsufficientStakingAmount()": [
        {
          "details": "Error of insufficient staking amount for unstaking."
        }
      ],
      "ErrInvalidArrays()": [
        {
          "details": "Error of length of input arrays are not of the same."
        }
      ],
      "ErrInvalidCommissionRate()": [
        {
          "details": "Error of setting commission rate exceeds max allowed."
        }
      ],
      "ErrInvalidPoolShare()": [
        {
          "details": "Error of invalid pool share."
        }
      ],
      "ErrOnlyPoolAdminAllowed()": [
        {
          "details": "Error of no one is allowed to call but the pool's admin."
        }
      ],
      "ErrPoolAdminForbidden()": [
        {
          "details": "Error of pool admin is not allowed to call."
        }
      ],
      "ErrRecipientRevert(bytes4)": [
        {
          "details": "Error of recipient not accepting RON when transfer RON."
        }
      ],
      "ErrStakingAmountLeft()": [
        {
          "details": "Error of invalid staking amount left after deducted."
        }
      ],
      "ErrThreeInteractionAddrsNotEqual()": [
        {
          "details": "Error of three interaction addresses must be of the same in applying for validator candidate."
        }
      ],
      "ErrUnauthorized(bytes4,uint8)": [
        {
          "details": "Error indicating that the caller is unauthorized to perform a specific function.",
          "params": {
            "expectedRole": "The role required to perform the function.",
            "msgSig": "The function signature (bytes4) that the caller is unauthorized to perform."
          }
        }
      ],
      "ErrUndelegateTooEarly()": [
        {
          "details": "Error of undelegating too early."
        }
      ],
      "ErrUndelegateZeroAmount()": [
        {
          "details": "Error of undelegating zero amount."
        }
      ],
      "ErrUnexpectedInternalCall(bytes4,uint8,address)": [
        {
          "details": "Error indicating that the caller is unauthorized to perform a specific function.",
          "params": {
            "actual": "The actual address that called to the function.",
            "expectedContractType": "The contract type required to perform the function.",
            "msgSig": "The function signature (bytes4)."
          }
        }
      ],
      "ErrUnstakeTooEarly()": [
        {
          "details": "Error of unstaking too early."
        }
      ],
      "ErrUnstakeZeroAmount()": [
        {
          "details": "Error of unstaking zero amount."
        }
      ],
      "ErrZeroCodeContract(address)": [
        {
          "details": "Error of set to non-contract."
        }
      ],
      "ErrZeroValue()": [
        {
          "details": "Error of receiving zero message value."
        }
      ]
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ErrAdminOfAnyActivePoolForbidden\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"extraInfo\",\"type\":\"string\"}],\"name\":\"ErrCannotInitTransferRON\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrCannotTransferRON\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"ErrContractTypeNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrDuplicated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"}],\"name\":\"ErrInactivePool\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sendAmount\",\"type\":\"uint256\"}],\"name\":\"ErrInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInsufficientDelegatingAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInsufficientStakingAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidArrays\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidCommissionRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrInvalidPoolShare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrOnlyPoolAdminAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrPoolAdminForbidden\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"ErrRecipientRevert\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrStakingAmountLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrThreeInteractionAddrsNotEqual\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"enum RoleAccess\",\"name\":\"expectedRole\",\"type\":\"uint8\"}],\"name\":\"ErrUnauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUndelegateTooEarly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUndelegateZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"},{\"internalType\":\"enum ContractType\",\"name\":\"expectedContractType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"ErrUnexpectedInternalCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUnstakeTooEarly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrUnstakeZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ErrZeroCodeContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRate\",\"type\":\"uint256\"}],\"name\":\"CommissionRateRangeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minSecs\",\"type\":\"uint256\"}],\"name\":\"CooldownSecsToUndelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Delegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"MinValidatorStakingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"PoolApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PoolSharesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"validator\",\"type\":\"address[]\"}],\"name\":\"PoolsDeprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"poolAddrs\",\"type\":\"address[]\"}],\"name\":\"PoolsUpdateConflicted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"poolAddrs\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"name\":\"PoolsUpdateFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"poolAddrs\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"aRps\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"PoolsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"StakingAmountDeductFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"StakingAmountTransferFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Undelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debited\",\"type\":\"uint256\"}],\"name\":\"UserRewardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"WaitingSecsToRevokeUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADDITION_GAS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERIOD_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidateAdmin\",\"type\":\"address\"},{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"treasuryAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proofOfPossession\",\"type\":\"bytes\"}],\"name\":\"applyValidatorCandidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkUndelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrList\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownSecsToUndelegate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrList\",\"type\":\"address[]\"},{\"internalType\":\"TConsensus\",\"name\":\"consensusAddrDst\",\"type\":\"address\"}],\"name\":\"delegateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdminAddr\",\"type\":\"address\"}],\"name\":\"execChangeAdminAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"execDeductStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualDeductingAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolIds\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"execDeprecatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolIds\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"execRecordRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommissionRateRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrs\",\"type\":\"address[]\"}],\"name\":\"getManySelfStakings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"selfStakings_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolIds\",\"type\":\"address[]\"}],\"name\":\"getManySelfStakingsById\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"selfStakings_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrs\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"userList\",\"type\":\"address[]\"}],\"name\":\"getManyStakingAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stakingAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolIds\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"userList\",\"type\":\"address[]\"}],\"name\":\"getManyStakingAmountsById\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stakingAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrs\",\"type\":\"address[]\"}],\"name\":\"getManyStakingTotals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stakingAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolIds\",\"type\":\"address[]\"}],\"name\":\"getManyStakingTotalsById\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stakingAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"getPoolAddressOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"}],\"name\":\"getPoolDetail\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"}],\"name\":\"getPoolDetailById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"TConsensus[]\",\"name\":\"consensusAddrs\",\"type\":\"address[]\"}],\"name\":\"getRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewards_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"}],\"name\":\"getStakingTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__validatorContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__minValidatorStakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__maxCommissionRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__cooldownSecsToUndelegate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__waitingSecsToRevoke\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__profileContract\",\"type\":\"address\"}],\"name\":\"initializeV3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdminOfActivePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minValidatorStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddrSrc\",\"type\":\"address\"},{\"internalType\":\"TConsensus\",\"name\":\"consensusAddrDst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"}],\"name\":\"requestEmergencyExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"}],\"name\":\"requestRenounce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"effectiveDaysOnwards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionRate\",\"type\":\"uint256\"}],\"name\":\"requestUpdateCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRate\",\"type\":\"uint256\"}],\"name\":\"setCommissionRateRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cooldownSecs\",\"type\":\"uint256\"}],\"name\":\"setCooldownSecsToUndelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setMinValidatorStakingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"setWaitingSecsToRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"TConsensus\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitingSecsToRevoke\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ErrAdminOfAnyActivePoolForbidden(address)\":[{\"details\":\"Error of admin of any active pool cannot delegate.\"}],\"ErrCannotInitTransferRON(address,string)\":[{\"details\":\"Error of cannot transfer RON to specified target.\"}],\"ErrCannotTransferRON()\":[{\"details\":\"Error of cannot transfer RON.\"}],\"ErrContractTypeNotFound(uint8)\":[{\"details\":\"Error of invalid role.\"}],\"ErrDuplicated(bytes4)\":[{\"details\":\"Error thrown when a duplicated element is detected in an array.\",\"params\":{\"msgSig\":\"The function signature that invoke the error.\"}}],\"ErrInactivePool(address,address)\":[{\"details\":\"Error of querying inactive pool.\"}],\"ErrInsufficientBalance(bytes4,uint256,uint256)\":[{\"details\":\"Error of sender has insufficient balance.\"}],\"ErrInsufficientDelegatingAmount()\":[{\"details\":\"Error of undelegating insufficient amount.\"}],\"ErrInsufficientStakingAmount()\":[{\"details\":\"Error of insufficient staking amount for unstaking.\"}],\"ErrInvalidArrays()\":[{\"details\":\"Error of length of input arrays are not of the same.\"}],\"ErrInvalidCommissionRate()\":[{\"details\":\"Error of setting commission rate exceeds max allowed.\"}],\"ErrInvalidPoolShare()\":[{\"details\":\"Error of invalid pool share.\"}],\"ErrOnlyPoolAdminAllowed()\":[{\"details\":\"Error of no one is allowed to call but the pool's admin.\"}],\"ErrPoolAdminForbidden()\":[{\"details\":\"Error of pool admin is not allowed to call.\"}],\"ErrRecipientRevert(bytes4)\":[{\"details\":\"Error of recipient not accepting RON when transfer RON.\"}],\"ErrStakingAmountLeft()\":[{\"details\":\"Error of invalid staking amount left after deducted.\"}],\"ErrThreeInteractionAddrsNotEqual()\":[{\"details\":\"Error of three interaction addresses must be of the same in applying for validator candidate.\"}],\"ErrUnauthorized(bytes4,uint8)\":[{\"details\":\"Error indicating that the caller is unauthorized to perform a specific function.\",\"params\":{\"expectedRole\":\"The role required to perform the function.\",\"msgSig\":\"The function signature (bytes4) that the caller is unauthorized to perform.\"}}],\"ErrUndelegateTooEarly()\":[{\"details\":\"Error of undelegating too early.\"}],\"ErrUndelegateZeroAmount()\":[{\"details\":\"Error of undelegating zero amount.\"}],\"ErrUnexpectedInternalCall(bytes4,uint8,address)\":[{\"details\":\"Error indicating that the caller is unauthorized to perform a specific function.\",\"params\":{\"actual\":\"The actual address that called to the function.\",\"expectedContractType\":\"The contract type required to perform the function.\",\"msgSig\":\"The function signature (bytes4).\"}}],\"ErrUnstakeTooEarly()\":[{\"details\":\"Error of unstaking too early.\"}],\"ErrUnstakeZeroAmount()\":[{\"details\":\"Error of unstaking zero amount.\"}],\"ErrZeroCodeContract(address)\":[{\"details\":\"Error of set to non-contract.\"}],\"ErrZeroValue()\":[{\"details\":\"Error of receiving zero message value.\"}]},\"events\":{\"CommissionRateRangeUpdated(uint256,uint256)\":{\"details\":\"Emitted when the commission rate range is updated.\"},\"ContractUpdated(uint8,address)\":{\"details\":\"Emitted when a contract is updated.\"},\"CooldownSecsToUndelegateUpdated(uint256)\":{\"details\":\"Emitted when the minium number of seconds to undelegate is updated.\"},\"Delegated(address,address,uint256)\":{\"details\":\"Emitted when the delegator staked for a validator candidate.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MinValidatorStakingAmountUpdated(uint256)\":{\"details\":\"Emitted when the minimum staking amount for being a validator is updated.\"},\"PoolApproved(address,address)\":{\"details\":\"Emitted when the validator pool is approved.\"},\"PoolSharesUpdated(uint256,address,uint256)\":{\"details\":\"Emitted when the pool shares are updated\"},\"PoolsDeprecated(address[])\":{\"details\":\"Emitted when the validator pool is deprecated.\"},\"PoolsUpdateConflicted(uint256,address[])\":{\"details\":\"Emitted when the contract fails when updating the pools that already set\"},\"PoolsUpdateFailed(uint256,address[],uint256[])\":{\"details\":\"Emitted when the contract fails when updating the pools\"},\"PoolsUpdated(uint256,address[],uint256[],uint256[])\":{\"details\":\"Emitted when the pools are updated\"},\"RewardClaimed(address,address,uint256)\":{\"details\":\"Emitted when the user claimed their reward\"},\"Staked(address,uint256)\":{\"details\":\"Emitted when the pool admin staked for themself.\"},\"StakingAmountDeductFailed(address,address,uint256,uint256)\":{\"details\":\"Emitted when the staking amount deducted failed, e.g. when the validator gets slashed.\"},\"StakingAmountTransferFailed(address,address,uint256,uint256)\":{\"details\":\"Emitted when the staking amount transfer failed.\"},\"Undelegated(address,address,uint256)\":{\"details\":\"Emitted when the delegator unstaked from a validator candidate.\"},\"Unstaked(address,uint256)\":{\"details\":\"Emitted when the pool admin unstaked the amount of RON from themself.\"},\"UserRewardUpdated(address,address,uint256)\":{\"details\":\"Emitted when the fields to calculate pending reward for the user is updated.\"},\"WaitingSecsToRevokeUpdated(uint256)\":{\"details\":\"Emitted when the number of seconds that a candidate must wait to be revoked.\"}},\"kind\":\"dev\",\"methods\":{\"applyValidatorCandidate(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Proposes a candidate to become a validator. Requirements: - The method caller is able to receive RON. - The treasury is able to receive RON. - The amount is larger than or equal to the minimum validator staking amount `minValidatorStakingAmount()`. Emits the event `PoolApproved`.\",\"params\":{\"candidateAdmin\":\"the candidate admin will be stored in the validator contract, used for calling function that affects to its candidate, e.g. scheduling maintenance.\"}},\"bulkUndelegate(address[],uint256[])\":{\"details\":\"Bulk unstakes from a list of candidates. Requirements: - The method caller is not the pool admin. Emits the events `Undelegated`.\"},\"claimRewards(address[])\":{\"details\":\"Claims the reward of method caller. Emits the `RewardClaimed` event.\"},\"cooldownSecsToUndelegate()\":{\"details\":\"Returns The cooldown time in seconds to undelegate from the last timestamp (s)he delegated.\"},\"delegate(address)\":{\"details\":\"Stakes for a validator candidate `_consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is not the pool admin. Emits the `Delegated` event.\"},\"delegateRewards(address[],address)\":{\"details\":\"Claims the rewards and delegates them to the consensus address. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `RewardClaimed` event and the `Delegated` event.\"},\"execChangeAdminAddress(address,address)\":{\"details\":\"Requirements: - Only Profile contract can call this method.\"},\"execDeductStakingAmount(address,uint256)\":{\"details\":\"Deducts from staking amount of the validator `_consensusAddr` for `_amount`. Requirements: - The method caller must be validator contract. Emits the event `Unstaked`.\"},\"execDeprecatePools(address[],uint256)\":{\"details\":\"Deprecates the pool. - Deduct self-staking amount of the pool admin to zero. - Transfer the deducted amount to the pool admin. - Deactivate the pool admin address in the mapping of active pool admins Requirements: - The method caller is validator contract. Emits the event `PoolsDeprecated` and `Unstaked` events. Emits the event `StakingAmountTransferFailed` if the contract cannot transfer RON back to the pool admin.\"},\"execRecordRewards(address[],uint256[],uint256)\":{\"details\":\"Records the amount of rewards `_rewards` for the pools `_consensusAddrs`. Requirements: - The method caller must be validator contract. Emits the event `PoolsUpdated` once the contract recorded the rewards successfully. Emits the event `PoolsUpdateFailed` once the input array lengths are not equal. Emits the event `PoolsUpdateConflicted` when there are some pools which already updated in the period. Note: This method should be called once at the period ending.\"},\"getCommissionRateRange()\":{\"details\":\"Returns the commission rate range that the candidate can set.\"},\"getContract(uint8)\":{\"details\":\"Returns the address of a contract with a specific role. Throws an error if no contract is set for the specified role.\",\"params\":{\"contractType\":\"The role of the contract to retrieve.\"},\"returns\":{\"contract_\":\"The address of the contract with the specified role.\"}},\"getManySelfStakings(address[])\":{\"details\":\"Returns the self-staking amounts of the pools.\"},\"getManySelfStakingsById(address[])\":{\"details\":\"Returns the self-staking amounts of the pools.\"},\"getManyStakingAmounts(address[],address[])\":{\"details\":\"Returns the staking amounts of the users.\"},\"getManyStakingTotals(address[])\":{\"details\":\"Returns the total staking amounts of all users for the pools `_poolAddrs`.\"},\"getPoolAddressOf(address)\":{\"details\":\"Returns the consensus address corresponding to the pool admin.\"},\"getPoolDetail(address)\":{\"details\":\"Returns the staking pool details.\"},\"getReward(address,address)\":{\"details\":\"Returns the reward amount that user claimable.\"},\"getRewards(address,address[])\":{\"details\":\"Returns the claimable reward of the user `_user`.\"},\"getStakingAmount(address,address)\":{\"details\":\"Returns the staking amount of an user.\"},\"getStakingTotal(address)\":{\"details\":\"Returns the total staking amount of all users for a pool.\"},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"details\":\"Initializes the contract storage.\"},\"initializeV2()\":{\"details\":\"Initializes the contract storage V2.\"},\"initializeV3(address)\":{\"details\":\"Initializes the contract storage V3.\"},\"isAdminOfActivePool(address)\":{\"details\":\"Returns whether the `admin` is currently active.\"},\"minValidatorStakingAmount()\":{\"details\":\"Returns the minimum threshold for being a validator candidate.\"},\"redelegate(address,address,uint256)\":{\"details\":\"Unstakes an amount of RON from the `_consensusAddrSrc` and stake for `_consensusAddrDst`. Requirements: - The method caller is not the pool admin. - The consensus address `_consensusAddrDst` is a validator candidate. Emits the `Undelegated` event and the `Delegated` event.\"},\"requestEmergencyExit(address)\":{\"details\":\"Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin.\"},\"requestRenounce(address)\":{\"details\":\"Renounces being a validator candidate and takes back the delegating/staking amount. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin.\"},\"requestUpdateCommissionRate(address,uint256,uint256)\":{\"details\":\"Pool admin requests update validator commission rate. The request will be forwarded to the candidate manager contract, and the value is getting updated in {ICandidateManager-execRequestUpdateCommissionRate}. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `_effectiveDaysOnwards` must be equal to or larger than the {CandidateManager-_minEffectiveDaysOnwards}. - The `_rate` must be in range of [0_00; 100_00]. Emits the event `CommissionRateUpdated`.\"},\"setCommissionRateRange(uint256,uint256)\":{\"details\":\"Sets the commission rate range that a candidate can set. Requirements: - The method caller is admin. Emits the `CommissionRateRangeUpdated` event.\"},\"setContract(uint8,address)\":{\"details\":\"Sets the address of a contract with a specific role. Emits the event {ContractUpdated}.\",\"params\":{\"addr\":\"The address of the contract to set.\",\"contractType\":\"The role of the contract to set.\"}},\"setCooldownSecsToUndelegate(uint256)\":{\"details\":\"Sets the cooldown time in seconds to undelegate from the last timestamp (s)he delegated. Requirements: - The method caller is admin. Emits the event `CooldownSecsToUndelegateUpdated`.\"},\"setMinValidatorStakingAmount(uint256)\":{\"details\":\"Sets the minimum threshold for being a validator candidate. Requirements: - The method caller is admin. Emits the `MinValidatorStakingAmountUpdated` event.\"},\"setWaitingSecsToRevoke(uint256)\":{\"details\":\"Sets the number of seconds that a candidate must wait to be revoked. Requirements: - The method caller is admin. Emits the event `WaitingSecsToRevokeUpdated`.\"},\"stake(address)\":{\"details\":\"Self-delegates to the validator candidate `consensusAddr`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. - The `msg.value` is larger than 0. Emits the event `Staked`.\"},\"undelegate(address,uint256)\":{\"details\":\"Unstakes from a validator candidate `_consensusAddr` for `_amount`. Requirements: - The method caller is not the pool admin. Emits the `Undelegated` event.\"},\"unstake(address,uint256)\":{\"details\":\"Unstakes from the validator candidate `consensusAddr` for `amount`. Requirements: - The consensus address is a validator candidate. - The method caller is the pool admin. Emits the event `Unstaked`.\"},\"waitingSecsToRevoke()\":{\"details\":\"Returns the number of seconds that a candidate must wait for the renounce request gets affected.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ronin/staking/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=lib/prb-math/\",\":@prb/test/=lib/prb-test/src/\",\":@ronin/contracts/=contracts/\",\":@ronin/test/=test/foundry/\",\":contract-libs/=lib/contract-libs/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/foundry-deployment-kit/lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-test/src/\",\":sample-projects/=node_modules/hardhat/sample-projects/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"contracts/extensions/RONTransferHelper.sol\":{\"keccak256\":\"0xab6e6a68ae405cdf9e8aee87ed4192dd98b54e686b76060ece602a8476cbd686\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92e49a00062a35d01485597c9a0843bbe4e4dcb5feb2ea096ad08108601bf24c\",\"dweb:/ipfs/QmURYbuvhhBLorbe6VHcHWEJFPirKwJAqVymKAwqDgwXjn\"]},\"contracts/extensions/TransparentUpgradeableProxyV2.sol\":{\"keccak256\":\"0x6609392ea7d3174439b5715100bee82528fe6e4aff28927d48c27db8475e88c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://370c93bc1e962fcf8eab41d217d901716769f05c51a2cb25aae12abc84e871da\",\"dweb:/ipfs/QmQYL5QrJmXCdi5UN9K7imt1iPm9ydZQm6ifShpt451afd\"]},\"contracts/extensions/collections/HasContracts.sol\":{\"keccak256\":\"0x9e1dceb68827adfb8c8184662f29ab5fe14e292a632878150e3b0b6c61bc1dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8903232a7a609b250a1ff2e9522a2366979652145af74637f9c0089916e3da3\",\"dweb:/ipfs/QmVoxZamJEhjYhr9RKVSAKGzakgqmFLfZXhZcDGor7DZe5\"]},\"contracts/extensions/collections/HasProxyAdmin.sol\":{\"keccak256\":\"0x0916021d04ea0c93c54978dc2fd46575fd2bd867369fbf9ce49f316939ddaf25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e220c59eb50b4e206d0a126f8cd2f7f2aa6865f56a0b4b091149e6928bf97b8\",\"dweb:/ipfs/QmRBk5hhn1w2MghZ8pRfaU1CvgRAZN7nZvxySSPDvkVuGp\"]},\"contracts/extensions/consumers/GlobalConfigConsumer.sol\":{\"keccak256\":\"0x96d6b1ea4c8e126a8c2468683e7513d195f8e05456d85dd8f259ab049347b527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23a7906515d4648b243fb01f8053b1595e8c1c62fa9745b56ed296372da6ebdf\",\"dweb:/ipfs/QmdUjefqn52Hu7bjAKYJMRanPy7fdKqJAtnqSB2793Zhfm\"]},\"contracts/extensions/consumers/PercentageConsumer.sol\":{\"keccak256\":\"0x5dc54a24348c5d614de1b4805dddeab4dda72f9f0636b27bf0ed295fee017dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e97f64c7f3522d605c5e8d6d96d568e0b8cb6b2f21cc288d508cbe43b831f5d9\",\"dweb:/ipfs/QmT9hBanREurnngznkfTAhHu4qDQu3F3hPXTzKgKjSWz7r\"]},\"contracts/interfaces/IProfile.sol\":{\"keccak256\":\"0x9bb73040b679f2c318bf995f81950004b6e306166080325eb0a177fc85d4603f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9f77078d42abb0b42e5d2ba2b55fe99d6205e588cd1868758633da9757c4eec\",\"dweb:/ipfs/QmTQLgzrfsEYYgp3MTcjnt6mCj57BjaVyauGi2t5fG1E73\"]},\"contracts/interfaces/collections/IHasContracts.sol\":{\"keccak256\":\"0x99d8213d857e30d367155abd15dc42730afdfbbac3a22dfb3b95ffea2083a92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03390ff29b496e244faf4eab55565712f0aea5fecdcb915e3c5866ef29d5686d\",\"dweb:/ipfs/QmdGpXn3VSxfNvjFBxfho7rc41JTq5m6bonrfmpzShhRVs\"]},\"contracts/interfaces/consumers/PeriodWrapperConsumer.sol\":{\"keccak256\":\"0xb6777e3c364306eb8d5355583c1aca44de9d351cb40ddf1cea832206d4aad272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f158da03631d0e3c4558a18fc50e7f2416172983cfbb14a158dd4fc7c83c7053\",\"dweb:/ipfs/QmX8Vq2sKEAckrMEN5W5LaUzE7ppdaR7scv8amyV1YEXGG\"]},\"contracts/interfaces/staking/IBaseStaking.sol\":{\"keccak256\":\"0xadaec16c22c590a42070d5e41fcc83c9fa89a4134528dd2159b5946ecbc64253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a5a877f057772f3b1eed27e32f55e705540964da1328cde418df81919bf5e4\",\"dweb:/ipfs/QmQhJo2K6P1fTjePfc7oifpvqVKNh9soNetp638Bmc9VbY\"]},\"contracts/interfaces/staking/ICandidateStaking.sol\":{\"keccak256\":\"0xceb58045bbf3c9362ad04a05dce61564b7bae17baa939731d8d4d4a0fe0b9682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d33578361660ee6312ccffbdd3d21c76bf5187a610a087840d9945cd8977a57\",\"dweb:/ipfs/Qmen4owmojHAVXn6ZQKhJBd8bTJbwf96weWpVCFNXYdnj9\"]},\"contracts/interfaces/staking/IDelegatorStaking.sol\":{\"keccak256\":\"0xe8a650a7348d45b2614ece66083f140801e8375bb8b733addf02209073991ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8145afcc8c57a3dc006f2bfc1a8854f60504ee13deeab26907c954b30b6c4af\",\"dweb:/ipfs/QmRP1jx96nPcQ6kDvHbTk29KV7wZQ8TiCswvqj67dSzbXx\"]},\"contracts/interfaces/staking/IRewardPool.sol\":{\"keccak256\":\"0x69626097d76dde60ce9fc73c6f8823ad7e8a5b6ff23ec3f20b9e1499f700d1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a6415fc600aad2bc0d0eb7b7c4bef82999183592ec0f256d698119405d011b\",\"dweb:/ipfs/QmX1s9xEXGUJ3xunUeXju8uNZ4xwUF7WZmzzQqCrX9a2NQ\"]},\"contracts/interfaces/staking/IStaking.sol\":{\"keccak256\":\"0xaa2491ed5276434d2a894ece749ad15835ff2791fa614d3cf3b58c0bdd418881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe97557e9ac638a49a1a5b0548af8c43d0c1e4b2c7f49264ffab6d735202e23\",\"dweb:/ipfs/QmcqPw11muqvrMRrufnb7yyHemHmnhQKQiKGhVStnc2MvJ\"]},\"contracts/interfaces/staking/IStakingCallback.sol\":{\"keccak256\":\"0x64e1659e4fb15498be8956f696e72e4c7370cc7439ab5395c94f24e85b92e85b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f265a75f3ee5ee6c84c385954f7c8f1f6b0a00b0ffbbffcfcf7507333bb9d8\",\"dweb:/ipfs/QmXBEAHUp8uwDKmQVXxzKqmz1YSdp9LdUazL7McUWEHaeC\"]},\"contracts/interfaces/validator/ICandidateManager.sol\":{\"keccak256\":\"0x7943726a9ecd82a625d3f86c5f7ddbe02427368478b6c98d90fe93dc2f399ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dffe8670b39976e208333aae25fcd8f60a3c7d4f140a287def4ee86773d57a6\",\"dweb:/ipfs/QmYf6c9trf113vEHZQqjUKYfPGjrBGaCxW3SjTR3X4Q7co\"]},\"contracts/interfaces/validator/ICandidateManagerCallback.sol\":{\"keccak256\":\"0xfbe83dc9a4df46f4eb34b6d68c73041de663f188671264c7fe5315b8a0813511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2263587e784fd6eeeccd6bd223bcd8adb5894d4bef1fbb0a8ab304a1a57e0c06\",\"dweb:/ipfs/QmUWxmQif7UDt8MF1Lz8hGUUSXWbRaiUEdSGiVq85HAc1H\"]},\"contracts/interfaces/validator/ICoinbaseExecution.sol\":{\"keccak256\":\"0xf2a4a6204a1fd803dd0b198bfb326f8807167f24de9da486fa1fd81f4bfbc9fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e38793d86399182d8f48b78535ac14dea2887e66602e45cc6b8ee7dce28f68\",\"dweb:/ipfs/QmTWotTYQjtVQvyEzEksg6mztLtUUpSYyxoE63RKsmfRhJ\"]},\"contracts/interfaces/validator/IEmergencyExit.sol\":{\"keccak256\":\"0xaa2df8b56a83730a3a1b3876708570d70843802737ff7c776a5725c71d7ea8f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7277218fecb7f7eed2d479d6b62725aa0ccce0da012aba6fcdfaef804ed3dfad\",\"dweb:/ipfs/QmfJSqzA3PtdvNRVtiNyE33DY6xXBzh53vFCZ2mAnozarE\"]},\"contracts/interfaces/validator/IRoninValidatorSet.sol\":{\"keccak256\":\"0xf4f96a624e7c77bbce044c67e3f4b406e65871debc19e7bfab663c1fcfcbc7b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0974304882b7e7b50de6784df2e3320c832f50d1b676ec5e7a2f9c143c8c30c2\",\"dweb:/ipfs/QmPsgH4StFT8ytxJca5FixhbctRe1xvQK3ihzS4QhMH37k\"]},\"contracts/interfaces/validator/ISlashingExecution.sol\":{\"keccak256\":\"0xbf540beae3c94d2b42e7bbb74f921086c23613fa4db43a5ca5310cb179b46d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cbe104c4afa9d39f7d7ca182084bde84d6151afd7eda56ba8fffaca39f22f57\",\"dweb:/ipfs/QmXDoWrCFNtyg8FuZEyVwnsvgS9FeWLi8GuFDUgh9uxpa1\"]},\"contracts/interfaces/validator/info-fragments/ICommonInfo.sol\":{\"keccak256\":\"0xb63c6a5edcc82cc04af534e8398eee9a805bb9cb179f3e00750e6ff92354bed9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7772e5e6f714104c3d468d7987fb45cd342947d8f3467a1c4c8b4fd33c6ab93\",\"dweb:/ipfs/QmbJ5cQKJmf5mJxvnh73quvstNVCkrPHZmFTG8nK4Adhx6\"]},\"contracts/interfaces/validator/info-fragments/IJailingInfo.sol\":{\"keccak256\":\"0x27afa712094804b997f55e8f8d320760e07d7260ab33aeb8fb61c39849f09bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ba3d3557b79929afe4f73a5c33240d058a8fb1f8421982ca37db1a824e3332\",\"dweb:/ipfs/QmQfnW2zEk5rrFhnFd2Lc2TW2ZtNyCX65BknEnrCBFmTV3\"]},\"contracts/interfaces/validator/info-fragments/ITimingInfo.sol\":{\"keccak256\":\"0x77b86a68149389fed0eb0c5b8d56f278d3bd103ba64f504697d709b24c3212d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a0c87e2e9c661730fdecd3cacc54a630ac2dfd35218dcbe41b70bb15d16aea2\",\"dweb:/ipfs/QmcLD62ZZ6YVSECvx7515PVXymbP8SRwayZsy6r4NAiPLJ\"]},\"contracts/interfaces/validator/info-fragments/IValidatorInfoV2.sol\":{\"keccak256\":\"0xa6298427da3b2055724dc3a6457e653629ce760ef39abfb15dfdfdd5a809a261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad9a5068a42e360972afc0bdbd26b2661eb6f6dbdab80bd320e5489a8541d167\",\"dweb:/ipfs/QmUqXpmsgbii1V9j7YyeCxFYZh6Y2aKwku2na6skru6mVg\"]},\"contracts/libraries/AddressArrayUtils.sol\":{\"keccak256\":\"0xaf760162653a85d6e1b24df4d33c74076f778470112f421a02050fb981242001\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3a413f290b8e81540bc6feb739bcfbacf56419b2e657bbce5be43826569b4406\",\"dweb:/ipfs/QmWRjGLBXs7WK92oPm51QpjxMYGuMTBx85Pv7QcGbUZE72\"]},\"contracts/libraries/EnumFlags.sol\":{\"keccak256\":\"0xa712f0d1a323ee39f23eb3ee3278b4ec25fe2e536b1ccc629578c66f277c088d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1b05f2717fd40454d68d411ab7bbbf5e3bb8ea6d7f27d335b1338362305904a2\",\"dweb:/ipfs/QmaiGASjWNVyfFzguu5xoKFRcLqGg67DHSd5422b5k6rbb\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xd73170f448c644a47024c7dbcf4afc3cc7ad27f61737c6ea4c3b543ec5cdb7e9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b4af5bb4d7c57d10844b31211dc52762f69c33f99fe90bf8bd4086b0f7ece4da\",\"dweb:/ipfs/Qma1Gtmp2Y5YMxAXS7XpUQHkc4auz95W6CevSLmD5CFrrB\"]},\"contracts/ronin/staking/BaseStaking.sol\":{\"keccak256\":\"0xf5bb01ddb183a1ebd63bc91c8f87ee6c6ccf2ed9123fe2b26c9f3bbb704aef39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a3691127aa57adf35022ff614997c34ca00f9f7990e31172e99af3518374667\",\"dweb:/ipfs/QmXkVbU1xuhKLrcrJ7CYEFaUQPEWG9Z68S4j32Ms7AjFA5\"]},\"contracts/ronin/staking/CandidateStaking.sol\":{\"keccak256\":\"0x551562dfffa0b5091cb92c4261105a3c6f4af2d0503d4ccf74dcff759ac89163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc3b1c38e863c2569404ff735c2ff44ef8f9a5b50211c143106e26724b0416\",\"dweb:/ipfs/QmPN12F4yK4ASM9isWJf786zu7Hh5XcbhJeokV8LHMTcx9\"]},\"contracts/ronin/staking/DelegatorStaking.sol\":{\"keccak256\":\"0xa0281f4fea9f20747dfffdaca61853e663206b8ac83b67576e8cd405d4a117a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dae0ef3f622ecbdcefcfc76e3278c8f307757339c66c7e9ad102620a3fb2729\",\"dweb:/ipfs/QmbdoaToHGsnZHYyhCGMp55ezxMDUt8Zu1PzTuC3Doc7uN\"]},\"contracts/ronin/staking/RewardCalculation.sol\":{\"keccak256\":\"0xfc401852211d7546d72981f8367d716aa154bf048fbeedeb7582643eb7b39ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74699d0de358b5ca634413bbc1d6207d48cecd2d5fe1ccfbac1c437b1a9e5c20\",\"dweb:/ipfs/Qmdva6EdTXiKDsCvPKJwGz3htzD1xCWD9yYwgimNpuoZJ9\"]},\"contracts/ronin/staking/Staking.sol\":{\"keccak256\":\"0x8879826b414931b8c783c16cea4bddabc8c28bb18cfe22b3e03a107a7175a5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e4c979534484542e5e1a5f16b1e40739a50c6ffc09b52d52a2cb571e06f9b5\",\"dweb:/ipfs/QmVT1toeQfu1J8B5rQtMsus4EeqjvmMPDLjp6bb63wEqQc\"]},\"contracts/ronin/staking/StakingCallback.sol\":{\"keccak256\":\"0xee1b68fbdfe999a377a59356fe28251ca4686b1efcb60e8f4c5b0165e5f212a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0040923c7cdd04357caa43af063714070a48805eeebdbc758cfa8893f237ff59\",\"dweb:/ipfs/QmdML4hLWNYdTupAXxutzo5ZMeEJfawCVwmLyvRhXjiLWc\"]},\"contracts/udvts/Types.sol\":{\"keccak256\":\"0x3017524670c86eaf3930447e482b6f372ae091bb5f8eb89570924599fa626ed7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdded5479fa6c2a2646fc33ea6bd3c36b9a7b132fc8ea9d6c8af2274c4d5fa68\",\"dweb:/ipfs/QmVZChGvAkFvipASeZw8mxmEQKvELds4uXjWiUs86MrjVm\"]},\"contracts/utils/CommonErrors.sol\":{\"keccak256\":\"0x7e228d0dbe377086fb2f7438b1e79b4e30b4eeb0225036b90a33effc5af06197\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2405dd9a3689efb60209c565964fb86e3af839df492893c6c01806f59659958\",\"dweb:/ipfs/QmaprfWfkxYxYof9JUBvhMHtomwCrsTaVpfaw96WckfNwm\"]},\"contracts/utils/ContractType.sol\":{\"keccak256\":\"0x7f547a44265f4c4b03d8971f7fc5eaa2e6064ea8cd509c1b761108f9800dab68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://130e3f8353d9f34098fbf2867c3bf812a5184904d0113d55c5c820eb64f2547b\",\"dweb:/ipfs/QmeFSUbPi8fyG1W7kKegFRtCqALjQBXQyVvQ4sjpi6SWH3\"]},\"contracts/utils/DeprecatedSlots.sol\":{\"keccak256\":\"0xe93504aed9f67a6d399475c7162560f2ac4f793fab5b67fe504fc694ac9a2892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66205963116e22bb24d9f2e0c1a38a27c4c0c3cf50693bc5f3177068cba37612\",\"dweb:/ipfs/Qmb1hZg6Df4zLeDMPMH4WZVpyLFe7A4TTBEtR6HHddSohC\"]},\"contracts/utils/IdentityGuard.sol\":{\"keccak256\":\"0x2d0dfcef3636945bc1785c1fa5a05f5203c79cbb81b2eee92a3ac6a2378c2ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e4cedc10e50bfaacdc732eab78768b5e0abbc8336eeaffa15de2a7be90de504\",\"dweb:/ipfs/QmR17AgM71NkH5ZeLpmaRMzPyXAKyhafoK2TZUnLw2z3Mv\"]},\"contracts/utils/RoleAccess.sol\":{\"keccak256\":\"0x7da4631824b53be17e246102ad59458f91f2395710561ac9bface18d35fb2502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070d8254ea4d6fde54ae02e121bb84bdb63a3c5a8513d2d364ad5038f6a95493\",\"dweb:/ipfs/QmfXpp3t8XcGFXewoVRmoQMKJb9vPo95Kj4vsGfNBf7gSH\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6c4477d480bac20d681ade0e712b77ad828acf530a1d5c0abc5fb78068a05a1\",\"dweb:/ipfs/QmdBqsK8CcUceTeWzhHwFDEvKMoHimwtV96Lbim7ZBtCb8\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "nonce": 6,
  "numDeployments": 15,
  "storageLayout": {
    "storage": [
      {
        "astId": 150020,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 33872,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_accumulatedRps",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PeriodWrapper)8895_storage))"
      },
      {
        "astId": 33880,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_userReward",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserRewardFields)9737_storage))"
      },
      {
        "astId": 33886,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_stakingPool",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(PoolFields)9743_storage)"
      },
      {
        "astId": 33891,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 39956,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______deprecatedValidator",
        "offset": 0,
        "slot": "54",
        "type": "t_address"
      },
      {
        "astId": 31675,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_poolDetail",
        "offset": 0,
        "slot": "55",
        "type": "t_mapping(t_address,t_struct(PoolDetail)9301_storage)"
      },
      {
        "astId": 31678,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_cooldownSecsToUndelegate",
        "offset": 0,
        "slot": "56",
        "type": "t_uint256"
      },
      {
        "astId": 31681,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_waitingSecsToRevoke",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 31686,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_adminOfActivePoolMapping",
        "offset": 0,
        "slot": "58",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 31691,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "59",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 32432,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_minValidatorStakingAmount",
        "offset": 0,
        "slot": "108",
        "type": "t_uint256"
      },
      {
        "astId": 32435,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_maxCommissionRate",
        "offset": 0,
        "slot": "109",
        "type": "t_uint256"
      },
      {
        "astId": 32438,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_minCommissionRate",
        "offset": 0,
        "slot": "110",
        "type": "t_uint256"
      },
      {
        "astId": 32443,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "111",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 33270,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "______gap",
        "offset": 0,
        "slot": "159",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 149757,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_initialized",
        "offset": 0,
        "slot": "209",
        "type": "t_uint8"
      },
      {
        "astId": 149760,
        "contract": "contracts/ronin/staking/Staking.sol:Staking",
        "label": "_initializing",
        "offset": 1,
        "slot": "209",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(UserRewardFields)9737_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct IRewardPool.UserRewardFields))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(UserRewardFields)9737_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(PeriodWrapper)8895_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct PeriodWrapperConsumer.PeriodWrapper))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(PeriodWrapper)8895_storage)"
      },
      "t_mapping(t_address,t_struct(PoolDetail)9301_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBaseStaking.PoolDetail)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolDetail)9301_storage"
      },
      "t_mapping(t_address,t_struct(PoolFields)9743_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardPool.PoolFields)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolFields)9743_storage"
      },
      "t_mapping(t_address,t_struct(UserRewardFields)9737_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardPool.UserRewardFields)",
        "numberOfBytes": "32",
        "value": "t_struct(UserRewardFields)9737_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(PeriodWrapper)8895_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PeriodWrapperConsumer.PeriodWrapper)",
        "numberOfBytes": "32",
        "value": "t_struct(PeriodWrapper)8895_storage"
      },
      "t_struct(PeriodWrapper)8895_storage": {
        "encoding": "inplace",
        "label": "struct PeriodWrapperConsumer.PeriodWrapper",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 8892,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "inner",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 8894,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lastPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(PoolDetail)9301_storage": {
        "encoding": "inplace",
        "label": "struct IBaseStaking.PoolDetail",
        "numberOfBytes": "192",
        "members": [
          {
            "astId": 9281,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "pid",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9284,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "__shadowedPoolAdmin",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 9287,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "stakingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9290,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "stakingTotal",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 9295,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "delegatingAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 9300,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lastDelegatingTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ]
      },
      "t_struct(PoolFields)9743_storage": {
        "encoding": "inplace",
        "label": "struct IRewardPool.PoolFields",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 9739,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "aRps",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9742,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "shares",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(PeriodWrapper)8895_storage"
          }
        ]
      },
      "t_struct(UserRewardFields)9737_storage": {
        "encoding": "inplace",
        "label": "struct IRewardPool.UserRewardFields",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 9730,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "debited",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9732,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "aRps",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9734,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lowestAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9736,
            "contract": "contracts/ronin/staking/Staking.sol:Staking",
            "label": "lastPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1704868902,
  "userdoc": {
    "version": 1,
    "kind": "user"
  }
}